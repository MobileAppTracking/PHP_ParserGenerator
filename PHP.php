<?php
/* Driver template for the PHP_PHPrGenerator parser generator. (PHP port of LEMON)
*/

/**
 * This can be used to store both the string representation of
 * a token, and any useful meta-data associated with the token.
 *
 * meta-data should be stored as an array
 */
class PHPyyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof PHPyyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof PHPyyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof PHPyyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof PHPyyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

/** The following structure represents a single element of the
 * parser's stack.  Information stored includes:
 *
 *   +  The state number for the parser at this level of the stack.
 *
 *   +  The value of the token stored at this level of the stack.
 *      (In other words, the "major" token.)
 *
 *   +  The semantic value stored at this level of the stack.  This is
 *      the information used by the action routines in the grammar.
 *      It is sometimes called the "minor" token.
 */
class PHPyyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};

// code external to the class is included here
#line 3 "PHP.y"

    static public $transTable = array();

    function __construct()
    {
        if (!count(self::$transTable)) {
            $start = 240; // start nice and low to be sure
            while (token_name($start) == 'UNKNOWN') {
                $start++;
            }
            $hash = array_flip(self::$yyTokenName);
            $map =
                array(
                    ord(',') => self::T_COMMA,
                    ord('=') => self::T_EQUAL,
                    ord('?') => self::T_QUESTION,
                    ord(':') => self::T_COLON,
                    ord('|') => self::T_PIPE,
                    ord('^') => self::T_CIRCUMFLEX,
                    ord('&') => self::T_AMPERSAND,
                    ord('<') => self::T_SMALLER,
                    ord('>') => self::T_GREATER,
                    ord('+') => self::T_PLUS,
                    ord('-') => self::T_MINUS,
                    ord('.') => self::T_DOT,
                    ord('*') => self::T_STAR,
                    ord('/') => self::T_SLASH,
                    ord('%') => self::T_PERCENT,
                    ord('!') => self::T_EXCLAMATION,
                    ord('~') => self::T_TILDE,
                    ord('@') => self::T_AT,
                    ord('[') => self::T_SQUARE_OPEN,
                    ord('(') => self::T_PAREN_OPEN,
                    ord(')') => self::T_PAREN_CLOSE,
                    ord(';') => self::T_SEMI_COLON,
                    ord('{') => self::T_CURLY_OPEN,
                    ord('}') => self::T_CURLY_CLOSE,
                    ord('`') => self::T_BACKQUOTE,
                    ord('$') => self::T_DOLLAR,
                    ord(']') => self::T_SQUARE_CLOSE,
                    ord('"') => self::T_DQUOTE,
                    ord("'") => self::T_SQUOTE,
                );
            for ($i = $start; $i < self::YYERRORSYMBOL + $start; $i++) {
                $lt = token_name($i);
                if (!isset($hash[$lt])) {
                    continue;
                }
                $lt = ($lt == 'T_ML_COMMENT') ? 'T_COMMENT' : $lt;
                $lt = ($lt == 'T_DOUBLE_T_COLON') ?  'T_PAAMAYIM_NEKUT_DOTAYIM' : $lt;
//                echo "$lt has hash? ".$hash[$lt]."\n";
//                continue;
                
                //echo "compare $lt with {$tokens[$i]}\n";
                $map[$i] = $hash[$lt];
            }
            //print_r($map);
            // set the map to false if nothing in there.
            self::$transTable = $map;
        }
    }
#line 161 "PHP.php"

// declare_class is output here
{
/* First off, code is included which follows the "include_class" declaration
** in the input file. */

/* Next is all token values, as class constants
*/
/* 
** These constants (all generated automatically by the parser generator)
** specify the various kinds of tokens (terminals) that the parser
** understands. 
**
** Each symbol here is a terminal symbol in the grammar.
*/
    const T_INCLUDE                      =  1;
    const T_INCLUDE_ONCE                 =  2;
    const T_EVAL                         =  3;
    const T_REQUIRE                      =  4;
    const T_REQUIRE_ONCE                 =  5;
    const T_COMMA                        =  6;
    const T_LOGICAL_OR                   =  7;
    const T_LOGICAL_XOR                  =  8;
    const T_LOGICAL_AND                  =  9;
    const T_PRINT                        = 10;
    const T_EQUAL                        = 11;
    const T_T_PLUS_EQUAL                 = 12;
    const T_T_MINUS_EQUAL                = 13;
    const T_MUL_EQUAL                    = 14;
    const T_DIV_EQUAL                    = 15;
    const T_CONCAT_EQUAL                 = 16;
    const T_MOD_EQUAL                    = 17;
    const T_AND_EQUAL                    = 18;
    const T_OR_EQUAL                     = 19;
    const T_XOR_EQUAL                    = 20;
    const T_SL_EQUAL                     = 21;
    const T_SR_EQUAL                     = 22;
    const T_QUESTION                     = 23;
    const T_COLON                        = 24;
    const T_BOOLEAN_OR                   = 25;
    const T_BOOLEAN_AND                  = 26;
    const T_PIPE                         = 27;
    const T_CIRCUMFLEX                   = 28;
    const T_AMPERSAND                    = 29;
    const T_IS_EQUAL                     = 30;
    const T_IS_NOT_EQUAL                 = 31;
    const T_IS_IDENTICAL                 = 32;
    const T_IS_NOT_IDENTICAL             = 33;
    const T_SMALLER                      = 34;
    const T_IS_SMALLER_OR_EQUAL          = 35;
    const T_GREATER                      = 36;
    const T_IS_GREATER_OR_EQUAL          = 37;
    const T_SL                           = 38;
    const T_SR                           = 39;
    const T_PLUS                         = 40;
    const T_MINUS                        = 41;
    const T_DOT                          = 42;
    const T_STAR                         = 43;
    const T_SLASH                        = 44;
    const T_PERCENT                      = 45;
    const T_EXCLAMATION                  = 46;
    const T_INSTANCEOF                   = 47;
    const T_TILDE                        = 48;
    const T_INC                          = 49;
    const T_DEC                          = 50;
    const T_INT_CAST                     = 51;
    const T_DOUBLE_CAST                  = 52;
    const T_STRING_CAST                  = 53;
    const T_ARRAY_CAST                   = 54;
    const T_OBJECT_CAST                  = 55;
    const T_BOOL_CAST                    = 56;
    const T_UNSET_CAST                   = 57;
    const T_AT                           = 58;
    const T_SQUARE_OPEN                  = 59;
    const T_NEW                          = 60;
    const T_CLONE                        = 61;
    const T_ELSEIF                       = 62;
    const T_ELSE                         = 63;
    const T_ENDIF                        = 64;
    const T_STATIC                       = 65;
    const T_ABSTRACT                     = 66;
    const T_FINAL                        = 67;
    const T_PRIVATE                      = 68;
    const T_PROTECTED                    = 69;
    const T_PUBLIC                       = 70;
    const T_HALT_COMPILER                = 71;
    const T_PAREN_OPEN                   = 72;
    const T_PAREN_CLOSE                  = 73;
    const T_SEMI_COLON                   = 74;
    const T_CURLY_OPEN                   = 75;
    const T_CURLY_CLOSE                  = 76;
    const T_IF                           = 77;
    const T_WHILE                        = 78;
    const T_DO                           = 79;
    const T_FOR                          = 80;
    const T_SWITCH                       = 81;
    const T_BREAK                        = 82;
    const T_CONTINUE                     = 83;
    const T_RETURN                       = 84;
    const T_GLOBAL                       = 85;
    const T_ECHO                         = 86;
    const T_INLINE_HTML                  = 87;
    const T_USE                          = 88;
    const T_UNSET                        = 89;
    const T_FOREACH                      = 90;
    const T_AS                           = 91;
    const T_DECLARE                      = 92;
    const T_TRY                          = 93;
    const T_CATCH                        = 94;
    const T_VARIABLE                     = 95;
    const T_THROW                        = 96;
    const T_FUNCTION                     = 97;
    const T_STRING                       = 98;
    const T_CLASS                        = 99;
    const T_EXTENDS                      = 100;
    const T_INTERFACE                    = 101;
    const T_IMPLEMENTS                   = 102;
    const T_LIST                         = 103;
    const T_EXIT                         = 104;
    const T_ARRAY                        = 105;
    const T_BACKQUOTE                    = 106;
    const T_LNUMBER                      = 107;
    const T_DNUMBER                      = 108;
    const T_CONSTANT_ENCAPSED_STRING     = 109;
    const T_LINE                         = 110;
    const T_FILE                         = 111;
    const T_CLASS_C                      = 112;
    const T_METHOD_C                     = 113;
    const T_FUNC_C                       = 114;
    const T_DOUBLE_ARROW                 = 115;
    const T_PAAMAYIM_NEKUT_DOTAYIM       = 116;
    const T_ENDFOR                       = 117;
    const T_ENDFOREACH                   = 118;
    const T_ENDDECLARE                   = 119;
    const T_ENDSWITCH                    = 120;
    const T_CASE                         = 121;
    const T_DEFAULT                      = 122;
    const T_ENDWHILE                     = 123;
    const T_DOLLAR                       = 124;
    const T_VAR                          = 125;
    const T_CONST                        = 126;
    const T_OBJECT_OPERATOR              = 127;
    const T_SQUARE_CLOSE                 = 128;
    const T_NUM_STRING                   = 129;
    const T_ENCAPSED_AND_WHITESPACE      = 130;
    const T_CHARACTER                    = 131;
    const T_BAD_CHARACTER                = 132;
    const T_T_DOLLAR_OPEN_CURLY_BRACES   = 133;
    const T_STRING_VARNAME               = 134;
    const T_ISSET                        = 135;
    const T_EMPTY                        = 136;
    const T_DQUOTE                       = 137;
    const T_SQUOTE                       = 138;
    const T_START_HEREDOC                = 139;
    const T_END_HEREDOC                  = 140;
    const YY_NO_ACTION = 1039;
    const YY_ACCEPT_ACTION = 1038;
    const YY_ERROR_ACTION = 1037;

/* Next are that tables used to determine what action to take based on the
** current state and lookahead token.  These tables are used to implement
** functions that take a state number and lookahead value and return an
** action integer.  
**
** Suppose the action integer is N.  Then the action is determined as
** follows
**
**   0 <= N < self::YYNSTATE                              Shift N.  That is,
**                                                        push the lookahead
**                                                        token onto the stack
**                                                        and goto state N.
**
**   self::YYNSTATE <= N < self::YYNSTATE+self::YYNRULE   Reduce by rule N-YYNSTATE.
**
**   N == self::YYNSTATE+self::YYNRULE                    A syntax error has occurred.
**
**   N == self::YYNSTATE+self::YYNRULE+1                  The parser accepts its
**                                                        input. (and concludes parsing)
**
**   N == self::YYNSTATE+self::YYNRULE+2                  No such action.  Denotes unused
**                                                        slots in the yy_action[] table.
**
** The action table is constructed as a single large static array $yy_action.
** Given state S and lookahead X, the action is computed as
**
**      self::$yy_action[self::$yy_shift_ofst[S] + X ]
**
** If the index value self::$yy_shift_ofst[S]+X is out of range or if the value
** self::$yy_lookahead[self::$yy_shift_ofst[S]+X] is not equal to X or if
** self::$yy_shift_ofst[S] is equal to self::YY_SHIFT_USE_DFLT, it means that
** the action is not in the table and that self::$yy_default[S] should be used instead.  
**
** The formula above is for computing the action when the lookahead is
** a terminal symbol.  If the lookahead is a non-terminal (as occurs after
** a reduce action) then the static $yy_reduce_ofst array is used in place of
** the static $yy_shift_ofst array and self::YY_REDUCE_USE_DFLT is used in place of
** self::YY_SHIFT_USE_DFLT.
**
** The following are the tables generated in this section:
**
**  self::$yy_action        A single table containing all actions.
**  self::$yy_lookahead     A table containing the lookahead for each entry in
**                          yy_action.  Used to detect hash collisions.
**  self::$yy_shift_ofst    For each state, the offset into self::$yy_action for
**                          shifting terminals.
**  self::$yy_reduce_ofst   For each state, the offset into self::$yy_action for
**                          shifting non-terminals after a reduce.
**  self::$yy_default       Default action for each state.
*/
    const YY_SZ_ACTTAB = 10428;
static public $yy_action = array(
 /*     0 */    87,   86,  405,   85,   89,  556,  138,  205,   53,   96,
 /*    10 */   120,  113,  100,  117,  102,  114,   94,  119,  116,   57,
 /*    20 */    58,   56,   55,   99,  103,  101,  106,   98,  112,  108,
 /*    30 */   111,  202,  147,  387,  440,  666,  335,  179,  556,   59,
 /*    40 */    51,  435,  553,  350,  660,   66,  449,   67,  136,  139,
 /*    50 */    64,   61,   63,   68,   49,   47,   50,   48,  212,  148,
 /*    60 */   105,  430,  335,  179,  206,  486,  478,  440,  553,  687,
 /*    70 */   414,   65,  556,  654,  241,  435,  374,  448,   22,  462,
 /*    80 */   457,   41,   38,   40,  180,   35,  625,  193,  354,  363,
 /*    90 */   570,  377,  368,  570,  556,   78,  215,  342,  529,  378,
 /*   100 */   515,  440,  465,  199,  428,  225,  554,  554,  554,  554,
 /*   110 */   554,  554,  554,  554,   81,  195,  426,  189,   87,   86,
 /*   120 */   405,   85,   89,  440,  570,  490,  221,   96,  340,  384,
 /*   130 */   637,  188,  536,  546,  437,  418,  245,  234,  226,  114,
 /*   140 */    94,  119,  116,   57,   58,   56,   55,   99,  103,  101,
 /*   150 */   106,   98,  112,  108,  111,  146,  147,   59,   51,  427,
 /*   160 */    81,  195,   33,   66,  370,   67,  136,  139,   64,   61,
 /*   170 */    63,   68,   49,   47,   50,   48,  361,  148,  105,  675,
 /*   180 */   335,  179,  206,  486,  478,  399,  553,   76,  414,   65,
 /*   190 */   556,  654,  241,  435,  374,  448,   22,  462,  457,   41,
 /*   200 */    38,   40,  180,   35,  625,  193,  354,  363,  556,  377,
 /*   210 */   368,  435,  556,   78,  215,  342,  529,  160,  515,  440,
 /*   220 */   465,  199,  428,  225,  554,  554,  554,  554,  554,  554,
 /*   230 */   554,  554,  635,  393,   37,  400,  556,  440,  680,  395,
 /*   240 */   391,  440,  554,  554,  554,  554,  554,  554,  554,  554,
 /*   250 */    52,  546,  437,  418,  245,  234,  226,   87,   86,  405,
 /*   260 */    85,   89,  424,   81,  195,  440,   96,  120,  113,  100,
 /*   270 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*   280 */    99,  103,  101,  106,   98,  112,  108,  111,  680,  147,
 /*   290 */   634,  380,  383,  626,  379,  358,   59,   51,  173,  420,
 /*   300 */   634,  537,   66,  626,   67,  136,  139,   64,   61,   63,
 /*   310 */    68,   49,   47,   50,   48,  222,  148,  105,  653,  217,
 /*   320 */   500,  206,  486,  478,  381,  348,  192,  414,   65,  636,
 /*   330 */   654,  241,  640,  374,  448,   22,  462,  457,   41,   38,
 /*   340 */    40,  180,   35,  625,  193,  354,  363,  162,  377,  368,
 /*   350 */    79,  556,   78,  215,  342,  529,  528,  515,  389,  465,
 /*   360 */   199,  428,  225,  554,  554,  554,  554,  554,  554,  554,
 /*   370 */   554,  474,   87,   86,  405,   85,   89,  122,  518,  238,
 /*   380 */   440,   96,  101,  106,   98,  112,  108,  111,  509,  147,
 /*   390 */   546,  437,  418,  245,  234,  226,   57,   58,   56,   55,
 /*   400 */    99,  103,  101,  106,   98,  112,  108,  111,  521,  147,
 /*   410 */   127,   59,   51,  634,  620,  521,  626,   66,  622,   67,
 /*   420 */   136,  139,   64,   61,   63,   68,   49,   47,   50,   48,
 /*   430 */   411,  148,  105,   81,  195,  346,  206,  486,  478,  459,
 /*   440 */    23,  553,  414,   65,  444,  654,  241,   32,  374,  448,
 /*   450 */    22,  462,  457,   41,   38,   40,  180,   35,  625,  193,
 /*   460 */   354,  363,  598,  377,  368,  134,  556,   78,  215,  342,
 /*   470 */   529,   34,  515,   17,  465,  199,  428,  225,  554,  554,
 /*   480 */   554,  554,  554,  554,  554,  554,  360,   87,   86,  405,
 /*   490 */    85,   89, 1038,   12,  445,  440,   96,  351,  178,  541,
 /*   500 */   482,  634,  524,  553,  626,  546,  437,  418,  245,  234,
 /*   510 */   226,  381,  348,  674,  112,  108,  111,  227,  147,  144,
 /*   520 */   471,  666,  335,  179,  875,  630,   59,   51,  553,  350,
 /*   530 */   660,  371,   66,   25,   67,  136,  139,   64,   61,   63,
 /*   540 */    68,   49,   47,   50,   48,  118,  148,  105,  616,  521,
 /*   550 */   190,  206,  486,  478,  128,  460,  521,  414,   65,  344,
 /*   560 */   654,  241,  595,  374,  448,   22,  462,  457,   41,   38,
 /*   570 */    40,  180,   35,  625,  193,  354,  363, 1008,  377,  368,
 /*   580 */   556,  556,   78,  215,  342,  529,  560,  515,  487,  465,
 /*   590 */   199,  428,  225,  554,  554,  554,  554,  554,  554,  554,
 /*   600 */   554,  369,   87,   86,  405,   85,   89,  632,  367,  421,
 /*   610 */   440,   96,  534,  534,  534,  534,  534,  534,  657,   42,
 /*   620 */   546,  437,  418,  245,  234,  226,  662,   37,  413,  339,
 /*   630 */   666,  335,  179,  634,  388,  553,  626,  553,  350,  660,
 /*   640 */   940,   59,   51,   52,  912,  634,  619,   66,  626,   67,
 /*   650 */   136,  139,   64,   61,   63,   68,   49,   47,   50,   48,
 /*   660 */   617,  148,  105,  209,  328,  661,  206,  486,  478,  522,
 /*   670 */   553,  331,  414,   65,  375,  654,  241,  176,  374,  448,
 /*   680 */    22,  462,  457,   41,   38,   40,  180,   35,  625,  193,
 /*   690 */   354,  363,   27,  377,  368,   19,  556,   78,  215,  342,
 /*   700 */   529,  528,  515,  519,  465,  199,  428,  225,  554,  554,
 /*   710 */   554,  554,  554,  554,  554,  554,  485,   87,   86,  405,
 /*   720 */    85,   89,  579,  582,  498,  440,   96,   36,   37,   70,
 /*   730 */   556,  634,  525,  475,  626,  546,  437,  418,  245,  234,
 /*   740 */   226,  941,  200,   72,   52,  166,  666,  335,  179,  556,
 /*   750 */   332,  888,  659,  553,  350,  660,   59,   51,  406,  440,
 /*   760 */   634,  523,   66,  626,   67,  136,  139,   64,   61,   63,
 /*   770 */    68,   49,   47,   50,   48,  376,  148,  105,  440,  458,
 /*   780 */   469,  206,  486,  478,  434,  531,  240,  414,   65,  204,
 /*   790 */   654,  241,  362,  374,  448,   22,  462,  457,   41,   38,
 /*   800 */    40,  180,   35,  625,  193,  354,  363,  129,  377,  368,
 /*   810 */   147,  556,   78,  215,  342,  529,  182,  515,  888,  465,
 /*   820 */   199,  428,  225,  554,  554,  554,  554,  554,  554,  554,
 /*   830 */   554,  233,   87,   86,  405,   85,   89,  364,  665,  479,
 /*   840 */   440,   96,  634,  493,   80,  626,  634,  492,  452,  626,
 /*   850 */   546,  437,  418,  245,  234,  226,  634,  618,  891,  626,
 /*   860 */   634,  533,   28,  626,  556,  556,  129,  435,  433,  676,
 /*   870 */   403,   59,   51,  566,  454,  634,  516,   66,  626,   67,
 /*   880 */   136,  139,   64,   61,   63,   68,   49,   47,   50,   48,
 /*   890 */   366,  148,  105,  440,  440,  565,  206,  486,  478,  123,
 /*   900 */   125,  692,  414,   65,   31,  654,  241,  514,  374,  448,
 /*   910 */    22,  462,  457,   41,   38,   40,  180,   35,  625,  193,
 /*   920 */   354,  363,  242,  377,  368,  891,  556,   78,  215,  342,
 /*   930 */   529,   25,  515,  689,  465,  199,  428,  225,  554,  554,
 /*   940 */   554,  554,  554,  554,  554,  554,  542,   87,   86,  405,
 /*   950 */    85,   89,  439,   84,  497,  440,   96,  151,  634,  520,
 /*   960 */   159,  626,  213,  645, 1008,  546,  437,  418,  245,  234,
 /*   970 */   226,  634,  488,  174,  626,  634,  621,  165,  626,  130,
 /*   980 */   495,  571,  569,  140,  156,  396,   59,   51,  567,  143,
 /*   990 */   504,  161,   66,  425,   67,  136,  139,   64,   61,   63,
 /*  1000 */    68,   49,   47,   50,   48,  506,  148,  105,  157,  224,
 /*  1010 */    20,  206,  486,  478,   60,   30,  573,  414,   65,  246,
 /*  1020 */   654,  241,   43,  374,  448,   22,  462,  457,   41,   38,
 /*  1030 */    40,  180,   35,  625,  193,  354,  363,  568,  377,  368,
 /*  1040 */   561,  556,   78,  215,  342,  529,   29,  515,  417,  465,
 /*  1050 */   199,  428,  225,  554,  554,  554,  554,  554,  554,  554,
 /*  1060 */   554,   95,   62,  398,  392,  408,  201,  684,  175,  650,
 /*  1070 */   440,  664,  115,   71,  373,  170,  126,  356,  167,  359,
 /*  1080 */   546,  437,  418,  245,  234,  226,   87,   86,  405,   85,
 /*  1090 */    89,  121,  219,   77,  163,   96,   18,  113,  100,  117,
 /*  1100 */   102,  114,   94,  119,  116,   57,   58,   56,   55,   99,
 /*  1110 */   103,  101,  106,   98,  112,  108,  111,  663,  147,  365,
 /*  1120 */   236,  216,  164,  172,  394,   59,   51,  223,  231,  593,
 /*  1130 */   633,   66,  155,   67,  136,  139,   64,   61,   63,   68,
 /*  1140 */    49,   47,   50,   48,  623,  148,  105,  158,  477,  355,
 /*  1150 */   206,  486,  478,  447,  168,  169,  414,   65,   75,  654,
 /*  1160 */   241,  695,  374,  448,   22,  462,  457,   41,   38,   40,
 /*  1170 */   180,   35,  625,  193,  354,  363,  194,  377,  368,  171,
 /*  1180 */   556,   78,  215,  342,  529,  208,  515,  627,  465,  199,
 /*  1190 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  1200 */   511,   87,   86,  405,   85,   89,  450,  218,  203,  440,
 /*  1210 */    96,  441,    6,  244,  330,  422,  191,  693,  154,  546,
 /*  1220 */   437,  418,  245,  234,  226,    3,    7,  656,  353,  329,
 /*  1230 */     9,   13,  390,  187,  517,  397,   15,   39,    4,  491,
 /*  1240 */    59,   51,  594,  149,  581,  508,   66,  228,   67,  136,
 /*  1250 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  382,
 /*  1260 */   148,  105,  347,  585,  532,  206,  486,  478,  584,   14,
 /*  1270 */    26,  414,   65,  444,  654,  241,  186,  374,  448,   22,
 /*  1280 */   462,  457,   41,   38,   40,  180,   35,  625,  193,  354,
 /*  1290 */   363,  211,  377,  368,  239,  556,   78,  215,  342,  529,
 /*  1300 */   600,  515,    5,  465,  199,  428,  225,  554,  554,  554,
 /*  1310 */   554,  554,  554,  554,  554,   10,   87,   86,  405,   85,
 /*  1320 */    89,  152,  481,    8,  440,   96,  351,  178,  541,  482,
 /*  1330 */   150,  385,  553,  443,  546,  437,  418,  245,  234,  226,
 /*  1340 */   181,  686,  674,  185,  484,  605,   11,  232,  184,  530,
 /*  1350 */   343,  153,  220,  499,  357,   59,   51,  647,    1,  527,
 /*  1360 */   673,   66,    2,   67,  136,  139,   64,   61,   63,   68,
 /*  1370 */    49,   47,   50,   48,  483,  148,  105,  588,  327,  588,
 /*  1380 */   206,  486,  478,  588,  588,  588,  476,   65,  588,  654,
 /*  1390 */   241,  588,  374,  448,   22,  462,  457,   41,   38,   40,
 /*  1400 */   180,   35,  625,  193,  354,  363,  588,  377,  368,  588,
 /*  1410 */   556,   78,  215,  342,  529,  588,  515,  588,  465,  199,
 /*  1420 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  1430 */   534,  534,  534,  534,  534,  534,  588,  588,  588,  440,
 /*  1440 */   588,  489,  588,  588,  588,  588,  588,  588,  588,  546,
 /*  1450 */   437,  418,  245,  234,  226,   87,   86,  405,   85,   89,
 /*  1460 */   588,  588,  588,  588,   96,  588,  588,  588,  588,  588,
 /*  1470 */   588,  588,  588,  588,  588,  588,  588,  588,  243,  588,
 /*  1480 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  1490 */   535,  467,  588,  588,   59,   51,  588,  588,  588,  588,
 /*  1500 */    66,  588,   67,  136,  139,   64,   61,   63,   68,   49,
 /*  1510 */    47,   50,   48,  588,  148,  105,  588,  588,  588,  206,
 /*  1520 */   588,  588,  588,  588,  588,  588,   65,  588,  654,  241,
 /*  1530 */   588,  374,  448,   22,  462,  457,   41,   38,   40,  180,
 /*  1540 */    35,  625,  193,  354,  363,  588,  377,  368,  588,  556,
 /*  1550 */    78,  588,  342,  588,  588,  588,  588,  465,  199,  428,
 /*  1560 */   225,  554,  554,  554,  554,  554,  554,  554,  554,  534,
 /*  1570 */   534,  534,  534,  534,  534,  588,  588,  588,  440,  588,
 /*  1580 */   526,  588,  588,  588,  588,  588,  588,  588,  546,  437,
 /*  1590 */   418,  245,  234,  226,   87,   86,  405,   85,   89,  588,
 /*  1600 */   588,  588,  588,   96,  588,  588,  588,  588,  588,  588,
 /*  1610 */   588,  588,  588,  588,  588,  588,  588,  230,  588,  588,
 /*  1620 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  535,
 /*  1630 */   467,  588,  588,   59,   51,  588,  588,  588,  588,   66,
 /*  1640 */   588,   67,  136,  139,   64,   61,   63,   68,   49,   47,
 /*  1650 */    50,   48,  588,  148,  105,  588,  588,  588,  206,  588,
 /*  1660 */   588,  588,  588,  588,  588,   65,  588,  654,  241,  588,
 /*  1670 */   374,  448,   22,  462,  457,   41,   38,   40,  180,   35,
 /*  1680 */   625,  193,  354,  363,  588,  377,  368,  588,  556,   78,
 /*  1690 */   588,  342,  444,  588,  588,  588,  465,  199,  428,  225,
 /*  1700 */   554,  554,  554,  554,  554,  554,  554,  554,  588,  588,
 /*  1710 */   207,  588,  588,  588,  588,  588,  588,  440,  588,  588,
 /*  1720 */   588,  588,  588,  588,  588,  588,  588,  546,  437,  418,
 /*  1730 */   245,  234,  226,   87,   86,  405,   85,   89,  588,  588,
 /*  1740 */   588,  588,   96,  588,  588,  351,  178,  541,  482,  588,
 /*  1750 */   588,  553,  588,  588,  588,  588,  247,  588,  588,  588,
 /*  1760 */   588,  674,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  1770 */   588,  588,   59,   51,  588,  588,  588,  588,   66,  588,
 /*  1780 */    67,  136,  139,   64,   61,   63,   68,   49,   47,   50,
 /*  1790 */    48,  588,  148,  105,  588,  588,  588,  206,  588,  588,
 /*  1800 */   588,  588,  588,  588,   65,  588,  654,  241,  588,  374,
 /*  1810 */   448,   22,  462,  457,   41,   38,   40,  180,   35,  625,
 /*  1820 */   193,  354,  363,  588,  377,  368,  588,  556,   78,  588,
 /*  1830 */   342,  588,  588,  588,  588,  465,  199,  428,  225,  554,
 /*  1840 */   554,  554,  554,  554,  554,  554,  554,  588,  588,  588,
 /*  1850 */   588,  588,  588,  588,  588,  588,  440,  588,  588,  588,
 /*  1860 */   588,  588,  588,  588,  588,  588,  546,  437,  418,  245,
 /*  1870 */   234,  226,   87,   86,  405,   85,   89,  588,  588,  588,
 /*  1880 */   588,   96,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  1890 */   588,  588,  588,  588,  588,  229,  588,  588,  588,  588,
 /*  1900 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  1910 */   588,   59,   51,  588,  588,  588,  588,   66,  588,   67,
 /*  1920 */   136,  139,   64,   61,   63,   68,   49,   47,   50,   48,
 /*  1930 */   588,  148,  105,  588,  588,  588,  206,  588,  588,  588,
 /*  1940 */   588,  588,  588,   65,  588,  654,  241,  588,  374,  448,
 /*  1950 */    22,  462,  457,   41,   38,   40,  180,   35,  625,  193,
 /*  1960 */   354,  363,  588,  377,  368,  588,  556,   78,  588,  342,
 /*  1970 */   588,  588,  588,  588,  465,  199,  428,  225,  554,  554,
 /*  1980 */   554,  554,  554,  554,  554,  554,  588,  588,  588,  588,
 /*  1990 */   588,  588,  588,  588,  588,  440,  588,  588,  588,  588,
 /*  2000 */   588,  588,  588,  588,  588,  546,  437,  418,  245,  234,
 /*  2010 */   226,   87,   86,  405,   85,   89,  588,  588,  588,  588,
 /*  2020 */    96,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2030 */   588,  588,  588,  588,  235,  588,  588,  588,  588,  588,
 /*  2040 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2050 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  2060 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  2070 */   148,  105,  588,  588,  588,  206,  588,  588,  588,  588,
 /*  2080 */   588,  588,   65,  588,  654,  241,  588,  374,  448,   22,
 /*  2090 */   462,  457,   41,   38,   40,  180,   35,  625,  193,  354,
 /*  2100 */   363,  588,  377,  368,  588,  556,   78,  588,  342,  588,
 /*  2110 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  2120 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  2130 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  588,
 /*  2140 */   588,  588,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  2150 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2160 */   588,  588,  588,  588,  588,   59,   51,  588,  588,  588,
 /*  2170 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  2180 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  2190 */   206,  588,  588,  588,  588,  588,  588,   65,  588,  654,
 /*  2200 */   241,  588,  374,  448,   22,  462,  457,   41,   38,   40,
 /*  2210 */   180,   35,  625,  193,  354,  363,  588,  377,  368,  588,
 /*  2220 */   556,   78,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  2230 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  2240 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  2250 */    96,  588,  588,  588,  588,  588,  588,  588,  588,  546,
 /*  2260 */   437,  418,  245,  234,  226,  588,  588,  588,  588,  137,
 /*  2270 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2280 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  2290 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  2300 */   148,  105,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2310 */   588,  588,   65,  588,  100,  117,  102,  114,   94,  119,
 /*  2320 */   116,   57,   58,   56,   55,   99,  103,  101,  106,   98,
 /*  2330 */   112,  108,  111,  588,  147,  556,  588,  588,  342,  588,
 /*  2340 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  2350 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  2360 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  588,
 /*  2370 */   588,  588,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  2380 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2390 */   588,  588,  588,  588,  588,   59,   51,  588,  588,  588,
 /*  2400 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  2410 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  2420 */   588,  588,  588,  588,  588,  588,  588,   65,  588,  681,
 /*  2430 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*  2440 */    99,  103,  101,  106,   98,  112,  108,  111,  588,  147,
 /*  2450 */   556,  588,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  2460 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  2470 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  2480 */    96,  588,  588,  588,  588,  588,  588,  588,  588,  546,
 /*  2490 */   437,  418,  245,  234,  226,  588,  588,  588,  588,  133,
 /*  2500 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2510 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  2520 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  2530 */   148,  105,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2540 */   588,  588,   65,  588,  588,  588,  102,  114,   94,  119,
 /*  2550 */   116,   57,   58,   56,   55,   99,  103,  101,  106,   98,
 /*  2560 */   112,  108,  111,  588,  147,  556,  588,  588,  342,  588,
 /*  2570 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  2580 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  2590 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  588,
 /*  2600 */   588,  588,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  2610 */   539,  588,  588,  588,  588,  588,  503,  588,  588,  510,
 /*  2620 */   588,  588,  432,  588,  588,   59,   51,  588,  588,  588,
 /*  2630 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  2640 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  2650 */   588,  588,  588,  588,  588,  588,  588,   65,  671,  588,
 /*  2660 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  407,
 /*  2670 */   588,  588,  588,  588,  404,  326,  177,  541,  548,  547,
 /*  2680 */   556,  553,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  2690 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  2700 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  2710 */    96,  588,  588,  588,  690,  588,  588,  588,  588,  546,
 /*  2720 */   437,  418,  245,  234,  226,  539,  432,  588,  588,  588,
 /*  2730 */   588,  210,  588,  588,  510,  588,  588,  432,  588,  588,
 /*  2740 */    59,   51,  588,  337,  588,  588,   66,  588,   67,  136,
 /*  2750 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  2760 */   148,  105,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  2770 */   588,  588,   65,  407,  685,  588,  588,  588,  404,  326,
 /*  2780 */   177,  541,  548,  547,  407,  553,  588,  588,  688,  404,
 /*  2790 */   326,  177,  541,  548,  547,  556,  553,  588,  342,  588,
 /*  2800 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  2810 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  2820 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  588,
 /*  2830 */   690,  588,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  2840 */   588,  588,  432,  588,  141,  588,  588,  588,  588,  588,
 /*  2850 */   588,  588,  588,  588,  588,   59,   51,  588,  588,  345,
 /*  2860 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  2870 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  2880 */   588,  588,  588,  588,  588,  588,  588,   65,  588,  407,
 /*  2890 */   588,  588,  588,  588,  404,  326,  177,  541,  548,  547,
 /*  2900 */   588,  553,  588,  588,  688,  588,  588,  588,  588,  588,
 /*  2910 */   556,  588,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  2920 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  2930 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  2940 */    96,  588,  588,  588,  588,  588,  588,  588,  588,  546,
 /*  2950 */   437,  418,  245,  234,  226,  648,  588,  588,  588,  142,
 /*  2960 */   341,  588,  588,  588,  588,  588,  588,  432,  588,  588,
 /*  2970 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  2980 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  2990 */   148,  105,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  3000 */   588,  588,   65,  588,  588,  588,  588,  588,  588,  588,
 /*  3010 */   588,  588,  588,  651,  407,  588,  588,  588,  588,  404,
 /*  3020 */   326,  177,  541,  548,  547,  556,  553,  588,  342,  588,
 /*  3030 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  3040 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  3050 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  631,
 /*  3060 */   588,  588,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  3070 */   588,  432,  588,  588,  135,  588,  588,  588,  588,  588,
 /*  3080 */   588,  588,  588,  588,  588,   59,   51,  629,  588,  588,
 /*  3090 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  3100 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  3110 */   588,  588,  588,  588,  588,  588,  588,   65,  407,  588,
 /*  3120 */   588,  588,  588,  404,  326,  177,  541,  548,  547,  588,
 /*  3130 */   553,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  3140 */   556,  588,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  3150 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  3160 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  3170 */    96,  588,  588,  588,  690,  588,  588,  588,  588,  546,
 /*  3180 */   437,  418,  245,  234,  226,  539,  432,  588,  588,  131,
 /*  3190 */   588,  588,  588,  588,  564,  588,  588,  432,  588,  588,
 /*  3200 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  3210 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  3220 */   148,  105,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  3230 */   588,  588,   65,  407,  588,  588,  588,  588,  404,  326,
 /*  3240 */   177,  541,  548,  547,  407,  553,  588,  588,  677,  404,
 /*  3250 */   326,  177,  541,  548,  547,  556,  553,  588,  342,  588,
 /*  3260 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  3270 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  3280 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  562,
 /*  3290 */   588,  588,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  3300 */   588,  432,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  3310 */   588,  588,  588,  588,  588,   59,   51,  588,  588,  588,
 /*  3320 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  3330 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  3340 */   588,  588,  588,  588,  588,  588,  588,   65,  407,  679,
 /*  3350 */   588,  588,  588,  404,  326,  177,  541,  548,  547,  588,
 /*  3360 */   553,  588,  588,  588,  588,  588,  588,  588,  334,  588,
 /*  3370 */   556,  588,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  3380 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  3390 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  3400 */    96,  588,  588,  588,  402,  588,  588,  588,  588,  546,
 /*  3410 */   437,  418,  245,  234,  226,  539,  432,  588,  588,  132,
 /*  3420 */   588,  588,  588,  588,  198,  588,  588,  432,  588,  588,
 /*  3430 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  3440 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  3450 */   148,  105,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  3460 */   588,  588,   65,  407,  588,  588,  588,  588,  404,  326,
 /*  3470 */   177,  541,  548,  547,  407,  553,  588,  588,  588,  404,
 /*  3480 */   326,  177,  541,  548,  547,  556,  553,  588,  342,  588,
 /*  3490 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  3500 */   554,  554,  554,  554,  554,  588,   87,   86,  405,   85,
 /*  3510 */    89,  588,  588,  588,  440,   96,  588,  588,  588,  588,
 /*  3520 */   588,  539,  588,  588,  546,  437,  418,  245,  234,  226,
 /*  3530 */   512,  588,  588,  432,  588,  588,  588,  588,  588,  588,
 /*  3540 */   588,  588,  588,  588,  588,   59,   51,  588,  588,  588,
 /*  3550 */   588,   66,  588,   67,  136,  139,   64,   61,   63,   68,
 /*  3560 */    49,   47,   50,   48,  588,  148,  105,  588,  588,  588,
 /*  3570 */   588,  588,  588,  588,  588,  588,  588,   65,  588,  588,
 /*  3580 */   407,  588,  588,  588,  588,  404,  326,  177,  541,  548,
 /*  3590 */   547,  588,  553,  588,  588,  588,  588,  588,  588,  588,
 /*  3600 */   556,  588,  588,  342,  588,  588,  588,  588,  465,  199,
 /*  3610 */   428,  225,  554,  554,  554,  554,  554,  554,  554,  554,
 /*  3620 */   588,   87,   86,  405,   85,   89,  588,  588,  588,  440,
 /*  3630 */    96,  588,  588,  588,  559,  588,  588,  588,  588,  546,
 /*  3640 */   437,  418,  245,  234,  226,  539,  432,  588,  588,  588,
 /*  3650 */   588,  588,  588,  588,  668,  588,  588,  432,  588,  588,
 /*  3660 */    59,   51,  588,  588,  588,  588,   66,  588,   67,  136,
 /*  3670 */   139,   64,   61,   63,   68,   49,   47,   50,   48,  588,
 /*  3680 */   148,  105,  648,  588,  588,  588,  588,  588,  588,  588,
 /*  3690 */   588,  588,   65,  407,  432,  588,  588,  588,  404,  326,
 /*  3700 */   177,  541,  548,  547,  407,  553,  588,  588,  588,  404,
 /*  3710 */   326,  177,  541,  548,  547,  556,  553,  588,  342,  588,
 /*  3720 */   588,  588,  588,  465,  199,  428,  225,  554,  554,  554,
 /*  3730 */   554,  554,  554,  554,  554,  588,  588,  588,  588,  588,
 /*  3740 */   649,  407,  588,  588,  440,  588,  404,  326,  177,  541,
 /*  3750 */   548,  547,  588,  553,  415,  437,  418,  245,  234,  226,
 /*  3760 */   638,  641,  642,  596,  588,  266,  588,  588,  196,  588,
 /*  3770 */   588,  588,  588,  588,  587,  314,  588,  588,  588,  588,
 /*  3780 */   588,  588,  588,  588,  588,  588,  588,  423,  588,  588,
 /*  3790 */   588,  639,  644,  643,  588,  588,  436,  588,  588,  588,
 /*  3800 */   456,  588,  588,  588,  588,  588,  588,  352,  609,  588,
 /*  3810 */   603,  588,  588,  544,  588,   46,  104,   88,   97,   69,
 /*  3820 */    93,   91,   92,   83,   82,   74,   73,  588,  588,  588,
 /*  3830 */   588,  588,  588,  588,  407,  588,  588,  588,  588,  404,
 /*  3840 */   326,  177,  541,  548,  547,  588,  553,  110,  109,  107,
 /*  3850 */   588,  588,  588,  932,  932,  545,  588,  588,  588,  588,
 /*  3860 */   588,  588,  588,   53,  680,  120,  113,  100,  117,  102,
 /*  3870 */   114,   94,  119,  116,   57,   58,   56,   55,   99,  103,
 /*  3880 */   101,  106,   98,  112,  108,  111,  588,  147,  588,  588,
 /*  3890 */   588,  588,  588,  588,  588,  124,   46,  104,   88,   97,
 /*  3900 */    69,   93,   91,   92,   83,   82,   74,   73,  539,  588,
 /*  3910 */   588,  588,  588,  588,  680,  588,  588,  670,  588,  539,
 /*  3920 */   432,  588,  110,  109,  107,  588,  588,  588,  669,  588,
 /*  3930 */   588,  432,  588,  588,  932,  932,  588,  588,   53,  588,
 /*  3940 */   120,  113,  100,  117,  102,  114,   94,  119,  116,   57,
 /*  3950 */    58,   56,   55,   99,  103,  101,  106,   98,  112,  108,
 /*  3960 */   111,  588,  147,  588,  588,  588,  588,  407,  588,  588,
 /*  3970 */   588,  588,  404,  326,  177,  541,  548,  547,  407,  553,
 /*  3980 */   588,  588,  588,  404,  326,  177,  541,  548,  547,  588,
 /*  3990 */   553,  555,  588,  588,  588,  588,  588,  588,  588,  110,
 /*  4000 */   109,  107,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4010 */   588,  588,  588,  588,  588,   53,  588,  120,  113,  100,
 /*  4020 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*  4030 */    99,  103,  101,  106,   98,  112,  108,  111,  889,  147,
 /*  4040 */   110,  109,  107,   46,  104,   88,   97,   69,   93,   91,
 /*  4050 */    92,   83,   82,   74,   73,  588,   53,  588,  120,  113,
 /*  4060 */   100,  117,  102,  114,   94,  119,  116,   57,   58,   56,
 /*  4070 */    55,   99,  103,  101,  106,   98,  112,  108,  111,  588,
 /*  4080 */   147,  932,  932,  588,  588,  588,  588,  588,  588,  588,
 /*  4090 */   549,  588,  588,   46,  104,   88,   97,   69,   93,   91,
 /*  4100 */    92,   83,   82,   74,   73,  889,  145,  557,  588,  667,
 /*  4110 */   588,  588,  588,  588,  588,  588,  588,  110,  109,  107,
 /*  4120 */   416,  588,  588,  588,  588,  588,  333,  588,  588,  604,
 /*  4130 */   588,  932,  932,   53,  588,  120,  113,  100,  117,  102,
 /*  4140 */   114,   94,  119,  116,   57,   58,   56,   55,   99,  103,
 /*  4150 */   101,  106,   98,  112,  108,  111,  683,  147,  558,  552,
 /*  4160 */   578,  577,  551,  550,   90,  549,  588,  588,  588,  588,
 /*  4170 */   588,  575,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4180 */   588,  145,  557,  588,  624,  588,  588,  588,  539,  588,
 /*  4190 */   588,  588,  110,  109,  107,  588,  588,  540,  588,  588,
 /*  4200 */   432,  333,  588,  588,  604,  588,  588,  588,   53,  588,
 /*  4210 */   120,  113,  100,  117,  102,  114,   94,  119,  116,   57,
 /*  4220 */    58,   56,   55,   99,  103,  101,  106,   98,  112,  108,
 /*  4230 */   111,  588,  147,  558,  552,  578,  577,  551,  550,   90,
 /*  4240 */   588,  588,  588,  588,  576,  588,  588,  407,  588,  588,
 /*  4250 */   588,  586,  404,  326,  177,  541,  548,  547,   16,  553,
 /*  4260 */   588,  588,  539,  432,  588,  588,  110,  109,  107,  588,
 /*  4270 */   588,  563,  588,  588,  432,  588,  588,  588,  588,  588,
 /*  4280 */   588,  588,   53,  583,  120,  113,  100,  117,  102,  114,
 /*  4290 */    94,  119,  116,   57,   58,   56,   55,   99,  103,  101,
 /*  4300 */   106,   98,  112,  108,  111,  588,  147,  588,  588,  588,
 /*  4310 */   407,  588,  588,  588,  588,  404,  326,  177,  541,  548,
 /*  4320 */   547,  407,  553,  586,  588,  588,  404,  326,  177,  541,
 /*  4330 */   548,  547,  599,  553,  588,  432,  588,  588,  588,  588,
 /*  4340 */   110,  109,  107,  588,  588,  588,  588,  588,  588,  588,
 /*  4350 */   588,  588,  588,  588,  588,  597,   53,  588,  120,  113,
 /*  4360 */   100,  117,  102,  114,   94,  119,  116,   57,   58,   56,
 /*  4370 */    55,   99,  103,  101,  106,   98,  112,  108,  111,  588,
 /*  4380 */   147,  588,  407,  588,  588,  588,  588,  404,  326,  177,
 /*  4390 */   541,  548,  547,  588,  553,  588,  588,  588,  588,  472,
 /*  4400 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  572,
 /*  4410 */   588,  432,  588,  538,  588,  588,  588,  110,  109,  107,
 /*  4420 */   588,  588,  588,  588,  588,  432,  588,  588,  588,  588,
 /*  4430 */   588,  588,  588,   53,  588,  120,  113,  100,  117,  102,
 /*  4440 */   114,   94,  119,  116,   57,   58,   56,   55,   99,  103,
 /*  4450 */   101,  106,   98,  112,  108,  111,  588,  147,  407,  588,
 /*  4460 */   588,  588,  588,  404,  326,  177,  541,  548,  547,  588,
 /*  4470 */   553,  588,  407,  588,  588,  588,  588,  404,  326,  177,
 /*  4480 */   541,  548,  547,  455,  553,  588,  588,  588,  588,  588,
 /*  4490 */   588,  110,  109,  107,  588,  588,  588,  588,  588,  588,
 /*  4500 */   588,  588,  588,  588,  588,  588,  588,   53,  588,  120,
 /*  4510 */   113,  100,  117,  102,  114,   94,  119,  116,   57,   58,
 /*  4520 */    56,   55,   99,  103,  101,  106,   98,  112,  108,  111,
 /*  4530 */   588,  147,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4540 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4550 */   588,  588,  588,  588,  588,  588,  588,   21,  588,  588,
 /*  4560 */   588,  588,  588,  588,  588,  110,  109,  107,  588,  588,
 /*  4570 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4580 */   588,   53,  588,  120,  113,  100,  117,  102,  114,   94,
 /*  4590 */   119,  116,   57,   58,   56,   55,   99,  103,  101,  106,
 /*  4600 */    98,  112,  108,  111,  588,  147,  588,  588,  588,  588,
 /*  4610 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4620 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4630 */   588,  386,  588,  588,  588,  588,  588,  588,  588,  110,
 /*  4640 */   109,  107,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4650 */   588,  588,  588,  588,  588,   53,  588,  120,  113,  100,
 /*  4660 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*  4670 */    99,  103,  101,  106,   98,  112,  108,  111,  588,  147,
 /*  4680 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4690 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4700 */   588,  588,  588,  588,  588,  588,  588,  588,  628,  588,
 /*  4710 */   588,  588,  588,  588,  588,  588,  110,  109,  107,  588,
 /*  4720 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4730 */   588,  588,   53,  588,  120,  113,  100,  117,  102,  114,
 /*  4740 */    94,  119,  116,   57,   58,   56,   55,   99,  103,  101,
 /*  4750 */   106,   98,  112,  108,  111,  892,  147,  110,  109,  107,
 /*  4760 */    46,  104,   88,   97,   69,   93,   91,   92,   83,   82,
 /*  4770 */    74,   73,  588,   53,  588,  120,  113,  100,  117,  102,
 /*  4780 */   114,   94,  119,  116,   57,   58,   56,   55,   99,  103,
 /*  4790 */   101,  106,   98,  112,  108,  111,  588,  147,  932,  932,
 /*  4800 */   588,  588,  588,  588,  549,  588,  588,  588,  588,  588,
 /*  4810 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4820 */   145,  557,  892,  610,   45,  588,  588,  588,  588,  588,
 /*  4830 */   588,  110,  109,  107,  588,  588,  588,  588,  588,  588,
 /*  4840 */   333,  588,  588,  604,  588,  588,  588,   53,  588,  120,
 /*  4850 */   113,  100,  117,  102,  114,   94,  119,  116,   57,   58,
 /*  4860 */    56,   55,   99,  103,  101,  106,   98,  112,  108,  111,
 /*  4870 */   588,  147,  558,  552,  578,  577,  551,  550,   90,  588,
 /*  4880 */   588,  588,  574,  588,  588,  588,  588,  588,  588,  588,
 /*  4890 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4900 */   658,  588,  588,  588,  588,  588,  588,  588,  110,  109,
 /*  4910 */   107,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4920 */   588,  588,  588,  588,   53,  588,  120,  113,  100,  117,
 /*  4930 */   102,  114,   94,  119,  116,   57,   58,   56,   55,   99,
 /*  4940 */   103,  101,  106,   98,  112,  108,  111,  588,  147,  588,
 /*  4950 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4960 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  4970 */   588,  588,  588,  588,  588,  682,  588,  588,  588,  588,
 /*  4980 */   588,  588,  588,  110,  109,  107,  588,  588,  588,  588,
 /*  4990 */   588,  588,  588,  588,  588,  588,  588,  588,  588,   53,
 /*  5000 */   588,  120,  113,  100,  117,  102,  114,   94,  119,  116,
 /*  5010 */    57,   58,   56,   55,   99,  103,  101,  106,   98,  112,
 /*  5020 */   108,  111,  588,  147,  588,  588,  588,  588,  588,  588,
 /*  5030 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5040 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5050 */   646,  588,  588,  588,  588,  588,  588,  588,  110,  109,
 /*  5060 */   107,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5070 */   588,  588,  588,  588,   53,  588,  120,  113,  100,  117,
 /*  5080 */   102,  114,   94,  119,  116,   57,   58,   56,   55,   99,
 /*  5090 */   103,  101,  106,   98,  112,  108,  111,  588,  147,  588,
 /*  5100 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5110 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5120 */   588,  588,  588,  588,  197,  588,  588,  588,  588,  588,
 /*  5130 */   588,  588,  110,  109,  107,  588,  588,  588,  588,  588,
 /*  5140 */   588,  588,  588,  588,  588,  588,  588,  588,   53,  588,
 /*  5150 */   120,  113,  100,  117,  102,  114,   94,  119,  116,   57,
 /*  5160 */    58,   56,   55,   99,  103,  101,  106,   98,  112,  108,
 /*  5170 */   111,  588,  147,  588,  588,  588,  588,  588,  588,  588,
 /*  5180 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5190 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  678,
 /*  5200 */   588,  588,  588,  588,  588,  588,  588,  110,  109,  107,
 /*  5210 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5220 */   588,  588,  588,   53,   54,  120,  113,  100,  117,  102,
 /*  5230 */   114,   94,  119,  116,   57,   58,   56,   55,   99,  103,
 /*  5240 */   101,  106,   98,  112,  108,  111,  588,  147,  110,  109,
 /*  5250 */   107,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5260 */   588,  588,  588,  588,   53,  588,  120,  113,  100,  117,
 /*  5270 */   102,  114,   94,  119,  116,   57,   58,   56,   55,   99,
 /*  5280 */   103,  101,  106,   98,  112,  108,  111,  588,  147,  110,
 /*  5290 */   109,  107,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5300 */   588,  588,  588,  588,  588,   53,  588,  120,  113,  100,
 /*  5310 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*  5320 */    99,  103,  101,  106,   98,  112,  108,  111,  588,  147,
 /*  5330 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5340 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5350 */   588,  588,  588,  588,  588,   24,   44,  588,  588,  588,
 /*  5360 */   588,  588,  588,  110,  109,  107,  588,  588,  588,  588,
 /*  5370 */   588,  588,  588,  588,  588,  588,  588,  588,  588,   53,
 /*  5380 */   588,  120,  113,  100,  117,  102,  114,   94,  119,  116,
 /*  5390 */    57,   58,   56,   55,   99,  103,  101,  106,   98,  112,
 /*  5400 */   108,  111,  588,  147,  588,  588,  588,  588,  588,  588,
 /*  5410 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5420 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5430 */   588,  588,  672,  588,  588,  588,  588,  588,  588,  588,
 /*  5440 */   110,  109,  107,  588,  588,  588,  588,  588,  588,  588,
 /*  5450 */   588,  588,  588,  588,  588,  588,   53,  588,  120,  113,
 /*  5460 */   100,  117,  102,  114,   94,  119,  116,   57,   58,   56,
 /*  5470 */    55,   99,  103,  101,  106,   98,  112,  108,  111,  588,
 /*  5480 */   147,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5490 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5500 */   588,  588,  638,  641,  642,  596,  543,  266,  588,  588,
 /*  5510 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  5520 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  423,
 /*  5530 */   588,  588,  588,  639,  644,  643,  588,  588,  436,  588,
 /*  5540 */   588,  588,  456,  588,  588,  588,  588,  588,  588,  352,
 /*  5550 */   609,  588,  603,  588,  588,  544,  588,  588,  588,  588,
 /*  5560 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5570 */   588,  588,  588,  588,  588,  588,  407,  588,  588,  588,
 /*  5580 */   588,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  5590 */   588,  588,  588,  588,  549,  588,  588,  545,  588,  588,
 /*  5600 */   588,  591,  590,  589,  592,  596,  588,  266,  588,  588,
 /*  5610 */   145,  557,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  5620 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  423,
 /*  5630 */   333,  588,  588,  604,  644,  643,  588,  588,  436,  588,
 /*  5640 */   588,  606,  456,  588,  588,  588,  588,  588,  588,  352,
 /*  5650 */   609,  588,  603,  588,  588,  544,  588,  588,  588,  588,
 /*  5660 */   588,  588,  558,  552,  578,  577,  551,  550,   90,  588,
 /*  5670 */   588,  588,  588,  588,  588,  588,  407,  588,  588,  588,
 /*  5680 */   588,  404,  326,  177,  541,  548,  547,  588,  553,  110,
 /*  5690 */   109,  107,  588,  588,  588,  588,  588,  545,  588,  588,
 /*  5700 */   588,  588,  588,  588,  588,   53,  588,  120,  113,  100,
 /*  5710 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*  5720 */    99,  103,  101,  106,   98,  112,  108,  111,  588,  147,
 /*  5730 */   109,  107,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5740 */   588,  588,  588,  588,  588,   53,  588,  120,  113,  100,
 /*  5750 */   117,  102,  114,   94,  119,  116,   57,   58,   56,   55,
 /*  5760 */    99,  103,  101,  106,   98,  112,  108,  111,  107,  147,
 /*  5770 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5780 */   588,  588,   53,  588,  120,  113,  100,  117,  102,  114,
 /*  5790 */    94,  119,  116,   57,   58,   56,   55,   99,  103,  101,
 /*  5800 */   106,   98,  112,  108,  111,  588,  147,  588,  588,  588,
 /*  5810 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5820 */   588,  588,  494,  588,  588,  596,  588,  266,  588,  588,
 /*  5830 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  5840 */   588,  588,  588,  588,  588,  652,  588,  588,  588,  423,
 /*  5850 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5860 */   588,  588,  588,  588,  588,  588,  588,  588,  505,  352,
 /*  5870 */   609,  596,  603,  266,  588,  544,  588,  588,  588,  588,
 /*  5880 */   694,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  5890 */   588,  588,  588,  588,  588,  423,  407,  588,  588,  588,
 /*  5900 */   588,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  5910 */   588,  588,  588,  588,  588,  352,  609,  545,  603,  588,
 /*  5920 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  5930 */   507,  588,  588,  596,  588,  266,  588,  588,  588,  588,
 /*  5940 */   691,  588,  407,  588,  587,  314,  588,  404,  326,  177,
 /*  5950 */   541,  548,  547,  588,  553,  588,  588,  423,  588,  588,
 /*  5960 */   588,  588,  588,  545,  588,  588,  588,  588,  588,  588,
 /*  5970 */   588,  588,  588,  588,  588,  588,  588,  352,  609,  588,
 /*  5980 */   603,  588,  588,  544,  588,  588,  588,  588,  588,  588,
 /*  5990 */   588,  501,  588,  588,  596,  588,  266,  588,  588,  588,
 /*  6000 */   588,  588,  588,  588,  407,  587,  314,  588,  588,  404,
 /*  6010 */   326,  177,  541,  548,  547,  588,  553,  655,  423,  588,
 /*  6020 */   588,  588,  588,  588,  588,  545,  588,  588,  588,  588,
 /*  6030 */   588,  588,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  6040 */   588,  603,  588,  588,  544,  588,  588,  588,  588,  588,
 /*  6050 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6060 */   588,  588,  588,  588,  494,  407,  588,  596,  588,  266,
 /*  6070 */   404,  326,  177,  541,  548,  547,  588,  553,  587,  314,
 /*  6080 */   588,  588,  588,  588,  588,  588,  545,  513,  588,  588,
 /*  6090 */   588,  423,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6100 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6110 */   588,  352,  609,  588,  603,  588,  588,  544,  588,  588,
 /*  6120 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6130 */   588,  277,  588,  588,  588,  588,  588,  588,  407,  588,
 /*  6140 */   349,  310,  588,  404,  326,  177,  541,  548,  547,  588,
 /*  6150 */   553,  588,  588,  423,  588,  588,  251,  588,  588,  545,
 /*  6160 */   588,  588,  588,  588,  588,  587,  314,  588,  588,  588,
 /*  6170 */   588,  588,  588,  352,  609,  588,  603,  588,  423,  544,
 /*  6180 */   588,  588,  588,  588,  588,  588,  588,  588,  473,  431,
 /*  6190 */   588,  588,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  6200 */   407,  603,  468,  588,  544,  404,  326,  177,  541,  548,
 /*  6210 */   547,  588,  553,  588,  588,  588,  588,  588,  274,  588,
 /*  6220 */   588,  545,  588,  588,  464,  407,  588,  587,  314,  588,
 /*  6230 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  6240 */   423,  214,  588,  588,  588,  588,  545,  588,  588,  588,
 /*  6250 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6260 */   352,  609,  274,  603,  588,  588,  544,  588,  461,  588,
 /*  6270 */   588,  587,  314,  588,  588,  588,  588,  588,  588,  588,
 /*  6280 */   588,  588,  588,  588,  423,  588,  588,  407,  588,  588,
 /*  6290 */   588,  588,  404,  326,  177,  541,  548,  547,  588,  553,
 /*  6300 */   588,  588,  588,  588,  352,  609,  588,  603,  545,  588,
 /*  6310 */   544,  588,  429,  588,  588,  588,  588,  588,  588,  588,
 /*  6320 */   277,  588,  588,  588,  588,  588,  588,  588,  588,  349,
 /*  6330 */   310,  407,  588,  588,  588,  588,  404,  326,  177,  541,
 /*  6340 */   548,  547,  423,  553,  588,  277,  588,  588,  588,  588,
 /*  6350 */   588,  588,  545,  588,  349,  310,  429,  588,  588,  588,
 /*  6360 */   588,  588,  352,  609,  588,  603,  588,  423,  544,  588,
 /*  6370 */   588,  588,  588,  588,  588,  588,  588,  453,  431,  588,
 /*  6380 */   588,  588,  588,  588,  588,  588,  588,  352,  609,  407,
 /*  6390 */   603,  588,  588,  544,  404,  326,  177,  541,  548,  547,
 /*  6400 */   588,  553,  412,  431,  588,  588,  588,  277,  588,  588,
 /*  6410 */   545,  588,  588,  588,  407,  588,  349,  310,  588,  404,
 /*  6420 */   326,  177,  541,  548,  547,  588,  553,  588,  588,  423,
 /*  6430 */   588,  588,  588,  588,  588,  545,  588,  588,  588,  588,
 /*  6440 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  352,
 /*  6450 */   609,  588,  603,  446,  588,  544,  596,  588,  266,  588,
 /*  6460 */   588,  588,  588,  588,  451,  431,  588,  587,  314,  588,
 /*  6470 */   588,  588,  588,  588,  588,  588,  407,  588,  588,  588,
 /*  6480 */   423,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  6490 */   588,  588,  588,  588,  588,  588,  588,  545,  588,  588,
 /*  6500 */   352,  609,  237,  603,  588,  596,  544,  266,  588,  588,
 /*  6510 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  6520 */   588,  588,  588,  588,  588,  588,  588,  407,  588,  423,
 /*  6530 */   588,  588,  404,  326,  177,  541,  548,  547,  588,  553,
 /*  6540 */   588,  588,  588,  588,  588,  588,  588,  588,  545,  352,
 /*  6550 */   609,  588,  603,  496,  588,  544,  596,  588,  266,  588,
 /*  6560 */   588,  588,  588,  588,  588,  588,  588,  587,  314,  588,
 /*  6570 */   588,  588,  588,  588,  588,  588,  407,  588,  588,  588,
 /*  6580 */   423,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  6590 */   588,  588,  588,  588,  588,  588,  588,  545,  588,  502,
 /*  6600 */   352,  609,  596,  603,  266,  588,  544,  588,  588,  588,
 /*  6610 */   588,  588,  588,  587,  314,  588,  588,  588,  588,  588,
 /*  6620 */   588,  588,  588,  588,  588,  588,  423,  407,  588,  588,
 /*  6630 */   588,  588,  404,  326,  177,  541,  548,  547,  588,  553,
 /*  6640 */   588,  588,  588,  588,  588,  588,  352,  609,  545,  603,
 /*  6650 */   588,  588,  544,  277,  588,  588,  588,  588,  588,  588,
 /*  6660 */   588,  588,  349,  310,  588,  588,  588,  588,  588,  588,
 /*  6670 */   588,  588,  588,  407,  588,  423,  588,  588,  404,  326,
 /*  6680 */   177,  541,  548,  547,  588,  553,  588,  588,  588,  588,
 /*  6690 */   588,  588,  588,  588,  545,  352,  609,  588,  603,  277,
 /*  6700 */   588,  544,  588,  588,  588,  588,  588,  588,  349,  310,
 /*  6710 */   409,  431,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6720 */   588,  423,  407,  588,  588,  588,  588,  404,  326,  177,
 /*  6730 */   541,  548,  547,  588,  553,  588,  588,  588,  588,  588,
 /*  6740 */   588,  352,  609,  545,  603,  588,  588,  544,  588,  588,
 /*  6750 */   588,  588,  588,  588,  588,  588,  410,  431,  588,  588,
 /*  6760 */   588,  588,  588,  588,  588,  588,  588,  588,  407,  588,
 /*  6770 */   588,  588,  588,  404,  326,  177,  541,  548,  547,  588,
 /*  6780 */   553,  588,  588,  588,  274,  588,  588,  588,  588,  545,
 /*  6790 */   463,  588,  588,  587,  314,  588,  588,  588,  588,  588,
 /*  6800 */   588,  588,  588,  588,  588,  588,  423,  588,  588,  588,
 /*  6810 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  6820 */   588,  588,  588,  588,  588,  588,  352,  609,  588,  603,
 /*  6830 */   588,  588,  544,  588,  272,  588,  588,  588,  588,  588,
 /*  6840 */   588,  588,  588,  587,  314,  588,  588,  588,  588,  588,
 /*  6850 */   588,  588,  588,  407,  588,  588,  423,  588,  404,  326,
 /*  6860 */   177,  541,  548,  547,  588,  553,  588,  588,  588,  588,
 /*  6870 */   588,  588,  588,  588,  545,  588,  352,  609,  429,  603,
 /*  6880 */   275,  588,  544,  588,  588,  588,  588,  588,  588,  587,
 /*  6890 */   314,  588,  588,  336,  588,  588,  588,  588,  588,  588,
 /*  6900 */   588,  588,  423,  407,  588,  588,  588,  588,  404,  326,
 /*  6910 */   177,  541,  548,  547,  480,  553,  588,  588,  588,  588,
 /*  6920 */   588,  588,  352,  609,  545,  603,  272,  588,  544,  588,
 /*  6930 */   588,  588,  588,  588,  588,  587,  314,  588,  588,  588,
 /*  6940 */   588,  588,  588,  588,  588,  588,  588,  588,  423,  407,
 /*  6950 */   588,  588,  588,  588,  404,  326,  177,  541,  548,  547,
 /*  6960 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  6970 */   545,  603,  588,  588,  544,  588,  588,  254,  588,  588,
 /*  6980 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  6990 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7000 */   404,  326,  177,  541,  548,  547,  466,  553,  588,  588,
 /*  7010 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7020 */   609,  588,  603,  263,  588,  544,  588,  588,  588,  588,
 /*  7030 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  7040 */   269,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  7050 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  7060 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  7070 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  7080 */   588,  588,  352,  609,  588,  603,  316,  588,  544,  588,
 /*  7090 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  7100 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  7110 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  7120 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  7130 */   545,  603,  588,  588,  544,  588,  588,  317,  588,  588,
 /*  7140 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  7150 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7160 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  7170 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7180 */   609,  588,  603,  315,  588,  544,  588,  588,  588,  588,
 /*  7190 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  7200 */   249,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  7210 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  7220 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  7230 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  7240 */   588,  588,  352,  609,  588,  603,  282,  588,  544,  588,
 /*  7250 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  7260 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  7270 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  7280 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  7290 */   545,  603,  588,  588,  544,  588,  588,  289,  588,  588,
 /*  7300 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  7310 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7320 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  7330 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7340 */   609,  588,  603,  268,  588,  544,  588,  588,  588,  588,
 /*  7350 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  7360 */   259,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  7370 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  7380 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  7390 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  7400 */   588,  588,  352,  609,  588,  603,  261,  588,  544,  588,
 /*  7410 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  7420 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  7430 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  7440 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  7450 */   545,  603,  588,  588,  544,  588,  588,  299,  588,  588,
 /*  7460 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  7470 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7480 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  7490 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7500 */   609,  588,  603,  323,  588,  544,  588,  588,  588,  588,
 /*  7510 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  7520 */   298,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  7530 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  7540 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  7550 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  7560 */   588,  588,  352,  609,  588,  603,  305,  588,  544,  588,
 /*  7570 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  7580 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  7590 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  7600 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  7610 */   545,  603,  588,  588,  544,  588,  588,  257,  588,  588,
 /*  7620 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  7630 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7640 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  7650 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7660 */   609,  588,  603,  292,  588,  544,  588,  588,  588,  588,
 /*  7670 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  7680 */   286,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  7690 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  7700 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  7710 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  7720 */   588,  588,  352,  609,  588,  603,  300,  588,  544,  588,
 /*  7730 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  7740 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  7750 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  7760 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  7770 */   545,  603,  588,  588,  544,  588,  588,  318,  588,  588,
 /*  7780 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  7790 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7800 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  7810 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7820 */   609,  588,  603,  281,  588,  544,  588,  588,  588,  588,
 /*  7830 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  7840 */   262,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  7850 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  7860 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  7870 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  7880 */   588,  588,  352,  609,  588,  603,  613,  588,  544,  588,
 /*  7890 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  7900 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  7910 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  7920 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  7930 */   545,  603,  588,  588,  544,  588,  588,  442,  588,  588,
 /*  7940 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  7950 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  7960 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  7970 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  7980 */   609,  588,  603,  290,  588,  544,  588,  588,  588,  588,
 /*  7990 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8000 */   615,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8010 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8020 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8030 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  8040 */   588,  588,  352,  609,  588,  603,  250,  588,  544,  588,
 /*  8050 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  8060 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  8070 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  8080 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  8090 */   545,  603,  588,  588,  544,  588,  588,  183,  588,  588,
 /*  8100 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  8110 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  8120 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  8130 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  8140 */   609,  588,  603,  612,  588,  544,  588,  588,  588,  588,
 /*  8150 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8160 */   296,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8170 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8180 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8190 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  8200 */   588,  588,  352,  609,  588,  603,  280,  588,  544,  588,
 /*  8210 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  8220 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  8230 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  8240 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  8250 */   545,  603,  588,  588,  544,  588,  588,  271,  588,  588,
 /*  8260 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  8270 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  8280 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  8290 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  8300 */   609,  588,  603,  614,  588,  544,  588,  588,  588,  588,
 /*  8310 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8320 */   278,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8330 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8340 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8350 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  8360 */   588,  588,  352,  609,  588,  603,  277,  588,  544,  588,
 /*  8370 */   588,  588,  407,  588,  588,  438,  313,  404,  326,  177,
 /*  8380 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  8390 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  8400 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  8410 */   545,  603,  588,  588,  544,  588,  588,  252,  588,  588,
 /*  8420 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  8430 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  8440 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  8450 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  8460 */   609,  588,  603,  322,  588,  544,  588,  588,  588,  588,
 /*  8470 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8480 */   253,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8490 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8500 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8510 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  8520 */   588,  588,  352,  609,  588,  603,  265,  588,  544,  588,
 /*  8530 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  8540 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  8550 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  8560 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  8570 */   545,  603,  588,  588,  544,  588,  588,  611,  588,  588,
 /*  8580 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  8590 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  8600 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  8610 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  8620 */   609,  588,  603,  279,  588,  544,  588,  588,  588,  588,
 /*  8630 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8640 */   297,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8650 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8660 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8670 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  8680 */   588,  588,  352,  609,  588,  603,  288,  588,  544,  588,
 /*  8690 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  8700 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  8710 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  8720 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  8730 */   545,  603,  588,  588,  544,  588,  588,  248,  588,  588,
 /*  8740 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  8750 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  8760 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  8770 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  8780 */   609,  588,  603,  401,  588,  544,  588,  588,  588,  588,
 /*  8790 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8800 */   284,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8810 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8820 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8830 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  8840 */   588,  588,  352,  609,  588,  603,  470,  588,  544,  588,
 /*  8850 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  8860 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  8870 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  8880 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  8890 */   545,  603,  588,  588,  544,  588,  588,  285,  588,  588,
 /*  8900 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  8910 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  8920 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  8930 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  8940 */   609,  588,  603,  267,  588,  544,  588,  588,  588,  588,
 /*  8950 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  8960 */   580,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  8970 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  8980 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  8990 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9000 */   588,  588,  352,  609,  588,  603,  277,  588,  544,  588,
 /*  9010 */   588,  588,  407,  588,  588,  372,  312,  404,  326,  177,
 /*  9020 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9030 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  9040 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  9050 */   545,  603,  588,  588,  544,  588,  588,  324,  588,  588,
 /*  9060 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  9070 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  9080 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  9090 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  9100 */   609,  588,  603,  419,  588,  544,  588,  588,  588,  588,
 /*  9110 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  9120 */   302,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  9130 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  9140 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  9150 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9160 */   588,  588,  352,  609,  588,  603,  307,  588,  544,  588,
 /*  9170 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  9180 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9190 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  9200 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  9210 */   545,  603,  588,  588,  544,  588,  588,  301,  588,  588,
 /*  9220 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  9230 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  9240 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  9250 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  9260 */   609,  588,  603,  294,  588,  544,  588,  588,  588,  588,
 /*  9270 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  9280 */   270,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  9290 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  9300 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  9310 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9320 */   588,  588,  352,  609,  588,  603,  304,  588,  544,  588,
 /*  9330 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  9340 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9350 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  9360 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  9370 */   545,  603,  588,  588,  544,  588,  588,  308,  588,  588,
 /*  9380 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  9390 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  9400 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  9410 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  9420 */   609,  588,  603,  260,  588,  544,  588,  588,  588,  588,
 /*  9430 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  9440 */   309,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  9450 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  9460 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  9470 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9480 */   588,  588,  352,  609,  588,  603,  258,  588,  544,  588,
 /*  9490 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  9500 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9510 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  9520 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  9530 */   545,  603,  588,  588,  544,  588,  588,  291,  588,  588,
 /*  9540 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  9550 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  9560 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  9570 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  9580 */   609,  588,  603,  602,  588,  544,  588,  588,  588,  588,
 /*  9590 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  9600 */   321,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  9610 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  9620 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  9630 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9640 */   588,  588,  352,  609,  588,  603,  607,  588,  544,  588,
 /*  9650 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  9660 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9670 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  9680 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  9690 */   545,  603,  588,  588,  544,  588,  588,  293,  588,  588,
 /*  9700 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  9710 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  9720 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  9730 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  9740 */   609,  588,  603,  608,  588,  544,  588,  588,  588,  588,
 /*  9750 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  9760 */   264,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  9770 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  9780 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  9790 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9800 */   588,  588,  352,  609,  588,  603,  601,  588,  544,  588,
 /*  9810 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /*  9820 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9830 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /*  9840 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /*  9850 */   545,  603,  588,  588,  544,  588,  588,  287,  588,  588,
 /*  9860 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /*  9870 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /*  9880 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /*  9890 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /*  9900 */   609,  588,  603,  320,  588,  544,  588,  588,  588,  588,
 /*  9910 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /*  9920 */   295,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /*  9930 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /*  9940 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /*  9950 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /*  9960 */   588,  588,  352,  609,  588,  603,  277,  588,  544,  588,
 /*  9970 */   588,  588,  407,  588,  588,  338,  311,  404,  326,  177,
 /*  9980 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /*  9990 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /* 10000 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /* 10010 */   545,  603,  588,  588,  544,  588,  588,  319,  588,  588,
 /* 10020 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /* 10030 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /* 10040 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /* 10050 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /* 10060 */   609,  588,  603,  256,  588,  544,  588,  588,  588,  588,
 /* 10070 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /* 10080 */   306,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /* 10090 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /* 10100 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /* 10110 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /* 10120 */   588,  588,  352,  609,  588,  603,  276,  588,  544,  588,
 /* 10130 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /* 10140 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /* 10150 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /* 10160 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /* 10170 */   545,  603,  588,  588,  544,  588,  588,  303,  588,  588,
 /* 10180 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /* 10190 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /* 10200 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /* 10210 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /* 10220 */   609,  588,  603,  273,  588,  544,  588,  588,  588,  588,
 /* 10230 */   588,  588,  587,  314,  588,  588,  588,  588,  588,  588,
 /* 10240 */   325,  588,  588,  588,  588,  423,  407,  588,  588,  587,
 /* 10250 */   314,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /* 10260 */   588,  588,  423,  588,  588,  352,  609,  545,  603,  588,
 /* 10270 */   588,  544,  588,  588,  588,  588,  588,  588,  588,  588,
 /* 10280 */   588,  588,  352,  609,  588,  603,  255,  588,  544,  588,
 /* 10290 */   588,  588,  407,  588,  588,  587,  314,  404,  326,  177,
 /* 10300 */   541,  548,  547,  588,  553,  588,  588,  588,  423,  407,
 /* 10310 */   588,  588,  588,  545,  404,  326,  177,  541,  548,  547,
 /* 10320 */   588,  553,  588,  588,  588,  588,  588,  588,  352,  609,
 /* 10330 */   545,  603,  588,  588,  544,  588,  588,  283,  588,  588,
 /* 10340 */   588,  588,  588,  588,  588,  588,  587,  314,  588,  588,
 /* 10350 */   588,  588,  588,  588,  588,  407,  588,  588,  588,  423,
 /* 10360 */   404,  326,  177,  541,  548,  547,  588,  553,  588,  588,
 /* 10370 */   588,  588,  588,  588,  588,  588,  545,  588,  588,  352,
 /* 10380 */   609,  588,  603,  588,  588,  544,  588,  588,  588,  588,
 /* 10390 */   588,  588,  588,  588,  588,  588,  588,  588,  588,  588,
 /* 10400 */   588,  588,  588,  588,  588,  588,  407,  588,  588,  588,
 /* 10410 */   588,  404,  326,  177,  541,  548,  547,  588,  553,  588,
 /* 10420 */   588,  588,  588,  588,  588,  588,  588,  545,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    2,    3,    4,    5,   95,   29,   24,   23,   10,
 /*    10 */    25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
 /*    20 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*    30 */    45,  220,   47,   29,  124,  224,  225,  226,   95,   40,
 /*    40 */    41,   98,  231,  232,  233,   46,  103,   48,   49,   50,
 /*    50 */    51,   52,   53,   54,   55,   56,   57,   58,   75,   60,
 /*    60 */    61,  224,  225,  226,   65,   66,   67,  124,  231,   76,
 /*    70 */    71,   72,   95,   74,   75,   98,   77,   78,   79,   80,
 /*    80 */    81,   82,   83,   84,   85,   86,   87,   88,   89,   90,
 /*    90 */    95,   92,   93,   98,   95,   96,   97,   98,   99,   95,
 /*   100 */   101,  124,  103,  104,  105,  106,  107,  108,  109,  110,
 /*   110 */   111,  112,  113,  114,  121,  122,  117,   59,    1,    2,
 /*   120 */     3,    4,    5,  124,  129,  210,  211,   10,  213,  214,
 /*   130 */    76,  216,  217,  134,  135,  136,  137,  138,  139,   30,
 /*   140 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*   150 */    41,   42,   43,   44,   45,   60,   47,   40,   41,  120,
 /*   160 */   121,  122,   74,   46,    6,   48,   49,   50,   51,   52,
 /*   170 */    53,   54,   55,   56,   57,   58,  109,   60,   61,  224,
 /*   180 */   225,  226,   65,   66,   67,  127,  231,   72,   71,   72,
 /*   190 */    95,   74,   75,   98,   77,   78,   79,   80,   81,   82,
 /*   200 */    83,   84,   85,   86,   87,   88,   89,   90,   95,   92,
 /*   210 */    93,   98,   95,   96,   97,   98,   99,   11,  101,  124,
 /*   220 */   103,  104,  105,  106,  107,  108,  109,  110,  111,  112,
 /*   230 */   113,  114,   74,   98,   59,  118,   95,  124,   24,   98,
 /*   240 */   105,  124,  107,  108,  109,  110,  111,  112,  113,  114,
 /*   250 */    75,  134,  135,  136,  137,  138,  139,    1,    2,    3,
 /*   260 */     4,    5,  120,  121,  122,  124,   10,   25,   26,   27,
 /*   270 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*   280 */    38,   39,   40,   41,   42,   43,   44,   45,   74,   47,
 /*   290 */   198,  199,  200,  201,  202,   75,   40,   41,   11,  180,
 /*   300 */   198,  199,   46,  201,   48,   49,   50,   51,   52,   53,
 /*   310 */    54,   55,   56,   57,   58,   98,   60,   61,  173,  174,
 /*   320 */   175,   65,   66,   67,  205,  206,   73,   71,   72,  109,
 /*   330 */    74,   75,   76,   77,   78,   79,   80,   81,   82,   83,
 /*   340 */    84,   85,   86,   87,   88,   89,   90,   11,   92,   93,
 /*   350 */     6,   95,   96,   97,   98,   99,  172,  101,   73,  103,
 /*   360 */   104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
 /*   370 */   114,  187,    1,    2,    3,    4,    5,   72,   74,   75,
 /*   380 */   124,   10,   40,   41,   42,   43,   44,   45,   76,   47,
 /*   390 */   134,  135,  136,  137,  138,  139,   34,   35,   36,   37,
 /*   400 */    38,   39,   40,   41,   42,   43,   44,   45,   98,   47,
 /*   410 */    72,   40,   41,  198,  199,  105,  201,   46,   74,   48,
 /*   420 */    49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   430 */    73,   60,   61,  121,  122,  225,   65,   66,   67,   62,
 /*   440 */    63,  231,   71,   72,  172,   74,   75,   24,   77,   78,
 /*   450 */    79,   80,   81,   82,   83,   84,   85,   86,   87,   88,
 /*   460 */    89,   90,  190,   92,   93,    6,   95,   96,   97,   98,
 /*   470 */    99,   72,  101,   73,  103,  104,  105,  106,  107,  108,
 /*   480 */   109,  110,  111,  112,  113,  114,  180,    1,    2,    3,
 /*   490 */     4,    5,  142,  143,  123,  124,   10,  225,  226,  227,
 /*   500 */   228,  198,  199,  231,  201,  134,  135,  136,  137,  138,
 /*   510 */   139,  205,  206,  241,   43,   44,   45,  220,   47,    6,
 /*   520 */     6,  224,  225,  226,   73,   95,   40,   41,  231,  232,
 /*   530 */   233,   72,   46,   72,   48,   49,   50,   51,   52,   53,
 /*   540 */    54,   55,   56,   57,   58,   72,   60,   61,   73,   98,
 /*   550 */     6,   65,   66,   67,  124,   72,  105,   71,   72,  161,
 /*   560 */    74,   75,   76,   77,   78,   79,   80,   81,   82,   83,
 /*   570 */    84,   85,   86,   87,   88,   89,   90,  116,   92,   93,
 /*   580 */    95,   95,   96,   97,   98,   99,   73,  101,   74,  103,
 /*   590 */   104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
 /*   600 */   114,    6,    1,    2,    3,    4,    5,  209,   29,  124,
 /*   610 */   124,   10,   65,   66,   67,   68,   69,   70,   74,    6,
 /*   620 */   134,  135,  136,  137,  138,  139,  220,   59,    6,  225,
 /*   630 */   224,  225,  226,  198,  199,  231,  201,  231,  232,  233,
 /*   640 */    72,   40,   41,   75,   97,  198,  199,   46,  201,   48,
 /*   650 */    49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   660 */   236,   60,   61,  182,  225,  243,   65,   66,   67,   74,
 /*   670 */   231,  203,   71,   72,   95,   74,   75,   76,   77,   78,
 /*   680 */    79,   80,   81,   82,   83,   84,   85,   86,   87,   88,
 /*   690 */    89,   90,   72,   92,   93,   73,   95,   96,   97,   98,
 /*   700 */    99,  172,  101,   24,  103,  104,  105,  106,  107,  108,
 /*   710 */   109,  110,  111,  112,  113,  114,  187,    1,    2,    3,
 /*   720 */     4,    5,   49,   50,   29,  124,   10,   59,   59,   75,
 /*   730 */    95,  198,  199,   98,  201,  134,  135,  136,  137,  138,
 /*   740 */   139,   72,  220,   75,   75,   11,  224,  225,  226,   95,
 /*   750 */   170,    6,   98,  231,  232,  233,   40,   41,   98,  124,
 /*   760 */   198,  199,   46,  201,   48,   49,   50,   51,   52,   53,
 /*   770 */    54,   55,   56,   57,   58,  179,   60,   61,  124,   62,
 /*   780 */    63,   65,   66,   67,  179,   99,   74,   71,   72,    6,
 /*   790 */    74,   75,   76,   77,   78,   79,   80,   81,   82,   83,
 /*   800 */    84,   85,   86,   87,   88,   89,   90,    6,   92,   93,
 /*   810 */    47,   95,   96,   97,   98,   99,  102,  101,   73,  103,
 /*   820 */   104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
 /*   830 */   114,   24,    1,    2,    3,    4,    5,   94,  128,   98,
 /*   840 */   124,   10,  198,  199,   75,  201,  198,  199,   95,  201,
 /*   850 */   134,  135,  136,  137,  138,  139,  198,  199,    6,  201,
 /*   860 */   198,  199,   72,  201,   95,   95,    6,   98,   98,  191,
 /*   870 */   183,   40,   41,   73,   73,  198,  199,   46,  201,   48,
 /*   880 */    49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*   890 */   167,   60,   61,  124,  124,   76,   65,   66,   67,  115,
 /*   900 */    72,   74,   71,   72,   72,   74,   75,   76,   77,   78,
 /*   910 */    79,   80,   81,   82,   83,   84,   85,   86,   87,   88,
 /*   920 */    89,   90,   75,   92,   93,   73,   95,   96,   97,   98,
 /*   930 */    99,   72,  101,   73,  103,  104,  105,  106,  107,  108,
 /*   940 */   109,  110,  111,  112,  113,  114,   73,    1,    2,    3,
 /*   950 */     4,    5,   98,   72,   74,  124,   10,  127,  198,  199,
 /*   960 */    11,  201,   98,   74,  116,  134,  135,  136,  137,  138,
 /*   970 */   139,  198,  199,   72,  201,  198,  199,   11,  201,   91,
 /*   980 */    74,  128,   98,   72,  116,   73,   40,   41,   73,   72,
 /*   990 */    74,   11,   46,   73,   48,   49,   50,   51,   52,   53,
 /*  1000 */    54,   55,   56,   57,   58,   74,   60,   61,  116,   75,
 /*  1010 */    73,   65,   66,   67,   75,   72,   76,   71,   72,   75,
 /*  1020 */    74,   75,    6,   77,   78,   79,   80,   81,   82,   83,
 /*  1030 */    84,   85,   86,   87,   88,   89,   90,   73,   92,   93,
 /*  1040 */    73,   95,   96,   97,   98,   99,   72,  101,   98,  103,
 /*  1050 */   104,  105,  106,  107,  108,  109,  110,  111,  112,  113,
 /*  1060 */   114,   59,    6,   72,  116,  119,   72,   74,   72,   74,
 /*  1070 */   124,   73,   72,   72,   98,   11,   72,   95,   11,   98,
 /*  1080 */   134,  135,  136,  137,  138,  139,    1,    2,    3,    4,
 /*  1090 */     5,   11,   72,   72,   11,   10,   73,   26,   27,   28,
 /*  1100 */    29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
 /*  1110 */    39,   40,   41,   42,   43,   44,   45,   73,   47,   95,
 /*  1120 */    75,   72,   11,  115,   95,   40,   41,   75,   24,   74,
 /*  1130 */    98,   46,   72,   48,   49,   50,   51,   52,   53,   54,
 /*  1140 */    55,   56,   57,   58,   74,   60,   61,  116,   64,   95,
 /*  1150 */    65,   66,   67,   78,  115,    6,   71,   72,   72,   74,
 /*  1160 */    75,   76,   77,   78,   79,   80,   81,   82,   83,   84,
 /*  1170 */    85,   86,   87,   88,   89,   90,    6,   92,   93,   11,
 /*  1180 */    95,   96,   97,   98,   99,   97,  101,   73,  103,  104,
 /*  1190 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  1200 */    74,    1,    2,    3,    4,    5,   94,  100,  222,  124,
 /*  1210 */    10,  154,  149,  204,  203,  167,  151,  158,  184,  134,
 /*  1220 */   135,  136,  137,  138,  139,  149,  149,  209,  206,  203,
 /*  1230 */   149,  149,  164,  197,  215,  238,  149,   72,  149,   98,
 /*  1240 */    40,   41,  152,  127,  191,   74,   46,   74,   48,   49,
 /*  1250 */    50,   51,   52,   53,   54,   55,   56,   57,   58,   95,
 /*  1260 */    60,   61,  162,  223,  172,   65,   66,   67,  221,  149,
 /*  1270 */    72,   71,   72,  172,   74,   75,  197,   77,   78,   79,
 /*  1280 */    80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
 /*  1290 */    90,  190,   92,   93,  221,   95,   96,   97,   98,   99,
 /*  1300 */   194,  101,  149,  103,  104,  105,  106,  107,  108,  109,
 /*  1310 */   110,  111,  112,  113,  114,  149,    1,    2,    3,    4,
 /*  1320 */     5,  127,  172,  149,  124,   10,  225,  226,  227,  228,
 /*  1330 */   127,  172,  231,  186,  134,  135,  136,  137,  138,  139,
 /*  1340 */   100,  204,  241,  197,   73,  237,  149,   75,  197,   99,
 /*  1350 */   212,  184,  242,  172,   95,   40,   41,  175,  149,  217,
 /*  1360 */   128,   46,  149,   48,   49,   50,   51,   52,   53,   54,
 /*  1370 */    55,   56,   57,   58,   95,   60,   61,  245,  203,  245,
 /*  1380 */    65,   66,   67,  245,  245,  245,   71,   72,  245,   74,
 /*  1390 */    75,  245,   77,   78,   79,   80,   81,   82,   83,   84,
 /*  1400 */    85,   86,   87,   88,   89,   90,  245,   92,   93,  245,
 /*  1410 */    95,   96,   97,   98,   99,  245,  101,  245,  103,  104,
 /*  1420 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  1430 */    65,   66,   67,   68,   69,   70,  245,  245,  245,  124,
 /*  1440 */   245,   76,  245,  245,  245,  245,  245,  245,  245,  134,
 /*  1450 */   135,  136,  137,  138,  139,    1,    2,    3,    4,    5,
 /*  1460 */   245,  245,  245,  245,   10,  245,  245,  245,  245,  245,
 /*  1470 */   245,  245,  245,  245,  245,  245,  245,  245,   24,  245,
 /*  1480 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  1490 */   125,  126,  245,  245,   40,   41,  245,  245,  245,  245,
 /*  1500 */    46,  245,   48,   49,   50,   51,   52,   53,   54,   55,
 /*  1510 */    56,   57,   58,  245,   60,   61,  245,  245,  245,   65,
 /*  1520 */   245,  245,  245,  245,  245,  245,   72,  245,   74,   75,
 /*  1530 */   245,   77,   78,   79,   80,   81,   82,   83,   84,   85,
 /*  1540 */    86,   87,   88,   89,   90,  245,   92,   93,  245,   95,
 /*  1550 */    96,  245,   98,  245,  245,  245,  245,  103,  104,  105,
 /*  1560 */   106,  107,  108,  109,  110,  111,  112,  113,  114,   65,
 /*  1570 */    66,   67,   68,   69,   70,  245,  245,  245,  124,  245,
 /*  1580 */    76,  245,  245,  245,  245,  245,  245,  245,  134,  135,
 /*  1590 */   136,  137,  138,  139,    1,    2,    3,    4,    5,  245,
 /*  1600 */   245,  245,  245,   10,  245,  245,  245,  245,  245,  245,
 /*  1610 */   245,  245,  245,  245,  245,  245,  245,   24,  245,  245,
 /*  1620 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  125,
 /*  1630 */   126,  245,  245,   40,   41,  245,  245,  245,  245,   46,
 /*  1640 */   245,   48,   49,   50,   51,   52,   53,   54,   55,   56,
 /*  1650 */    57,   58,  245,   60,   61,  245,  245,  245,   65,  245,
 /*  1660 */   245,  245,  245,  245,  245,   72,  245,   74,   75,  245,
 /*  1670 */    77,   78,   79,   80,   81,   82,   83,   84,   85,   86,
 /*  1680 */    87,   88,   89,   90,  245,   92,   93,  245,   95,   96,
 /*  1690 */   245,   98,  172,  245,  245,  245,  103,  104,  105,  106,
 /*  1700 */   107,  108,  109,  110,  111,  112,  113,  114,  245,  245,
 /*  1710 */   190,  245,  245,  245,  245,  245,  245,  124,  245,  245,
 /*  1720 */   245,  245,  245,  245,  245,  245,  245,  134,  135,  136,
 /*  1730 */   137,  138,  139,    1,    2,    3,    4,    5,  245,  245,
 /*  1740 */   245,  245,   10,  245,  245,  225,  226,  227,  228,  245,
 /*  1750 */   245,  231,  245,  245,  245,  245,   24,  245,  245,  245,
 /*  1760 */   245,  241,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  1770 */   245,  245,   40,   41,  245,  245,  245,  245,   46,  245,
 /*  1780 */    48,   49,   50,   51,   52,   53,   54,   55,   56,   57,
 /*  1790 */    58,  245,   60,   61,  245,  245,  245,   65,  245,  245,
 /*  1800 */   245,  245,  245,  245,   72,  245,   74,   75,  245,   77,
 /*  1810 */    78,   79,   80,   81,   82,   83,   84,   85,   86,   87,
 /*  1820 */    88,   89,   90,  245,   92,   93,  245,   95,   96,  245,
 /*  1830 */    98,  245,  245,  245,  245,  103,  104,  105,  106,  107,
 /*  1840 */   108,  109,  110,  111,  112,  113,  114,  245,  245,  245,
 /*  1850 */   245,  245,  245,  245,  245,  245,  124,  245,  245,  245,
 /*  1860 */   245,  245,  245,  245,  245,  245,  134,  135,  136,  137,
 /*  1870 */   138,  139,    1,    2,    3,    4,    5,  245,  245,  245,
 /*  1880 */   245,   10,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  1890 */   245,  245,  245,  245,  245,   24,  245,  245,  245,  245,
 /*  1900 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  1910 */   245,   40,   41,  245,  245,  245,  245,   46,  245,   48,
 /*  1920 */    49,   50,   51,   52,   53,   54,   55,   56,   57,   58,
 /*  1930 */   245,   60,   61,  245,  245,  245,   65,  245,  245,  245,
 /*  1940 */   245,  245,  245,   72,  245,   74,   75,  245,   77,   78,
 /*  1950 */    79,   80,   81,   82,   83,   84,   85,   86,   87,   88,
 /*  1960 */    89,   90,  245,   92,   93,  245,   95,   96,  245,   98,
 /*  1970 */   245,  245,  245,  245,  103,  104,  105,  106,  107,  108,
 /*  1980 */   109,  110,  111,  112,  113,  114,  245,  245,  245,  245,
 /*  1990 */   245,  245,  245,  245,  245,  124,  245,  245,  245,  245,
 /*  2000 */   245,  245,  245,  245,  245,  134,  135,  136,  137,  138,
 /*  2010 */   139,    1,    2,    3,    4,    5,  245,  245,  245,  245,
 /*  2020 */    10,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2030 */   245,  245,  245,  245,   24,  245,  245,  245,  245,  245,
 /*  2040 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2050 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  2060 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  2070 */    60,   61,  245,  245,  245,   65,  245,  245,  245,  245,
 /*  2080 */   245,  245,   72,  245,   74,   75,  245,   77,   78,   79,
 /*  2090 */    80,   81,   82,   83,   84,   85,   86,   87,   88,   89,
 /*  2100 */    90,  245,   92,   93,  245,   95,   96,  245,   98,  245,
 /*  2110 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  2120 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  2130 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  245,
 /*  2140 */   245,  245,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  2150 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2160 */   245,  245,  245,  245,  245,   40,   41,  245,  245,  245,
 /*  2170 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  2180 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  2190 */    65,  245,  245,  245,  245,  245,  245,   72,  245,   74,
 /*  2200 */    75,  245,   77,   78,   79,   80,   81,   82,   83,   84,
 /*  2210 */    85,   86,   87,   88,   89,   90,  245,   92,   93,  245,
 /*  2220 */    95,   96,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  2230 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  2240 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  2250 */    10,  245,  245,  245,  245,  245,  245,  245,  245,  134,
 /*  2260 */   135,  136,  137,  138,  139,  245,  245,  245,  245,   29,
 /*  2270 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2280 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  2290 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  2300 */    60,   61,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2310 */   245,  245,   72,  245,   27,   28,   29,   30,   31,   32,
 /*  2320 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*  2330 */    43,   44,   45,  245,   47,   95,  245,  245,   98,  245,
 /*  2340 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  2350 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  2360 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  245,
 /*  2370 */   245,  245,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  2380 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2390 */   245,  245,  245,  245,  245,   40,   41,  245,  245,  245,
 /*  2400 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  2410 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  2420 */   245,  245,  245,  245,  245,  245,  245,   72,  245,   74,
 /*  2430 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  2440 */    38,   39,   40,   41,   42,   43,   44,   45,  245,   47,
 /*  2450 */    95,  245,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  2460 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  2470 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  2480 */    10,  245,  245,  245,  245,  245,  245,  245,  245,  134,
 /*  2490 */   135,  136,  137,  138,  139,  245,  245,  245,  245,   29,
 /*  2500 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2510 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  2520 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  2530 */    60,   61,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2540 */   245,  245,   72,  245,  245,  245,   29,   30,   31,   32,
 /*  2550 */    33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
 /*  2560 */    43,   44,   45,  245,   47,   95,  245,  245,   98,  245,
 /*  2570 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  2580 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  2590 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  245,
 /*  2600 */   245,  245,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  2610 */   160,  245,  245,  245,  245,  245,  166,  245,  245,  169,
 /*  2620 */   245,  245,  172,  245,  245,   40,   41,  245,  245,  245,
 /*  2630 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  2640 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  2650 */   245,  245,  245,  245,  245,  245,  245,   72,   73,  245,
 /*  2660 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  219,
 /*  2670 */   245,  245,  245,  245,  224,  225,  226,  227,  228,  229,
 /*  2680 */    95,  231,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  2690 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  2700 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  2710 */    10,  245,  245,  245,  160,  245,  245,  245,  245,  134,
 /*  2720 */   135,  136,  137,  138,  139,  160,  172,  245,  245,  245,
 /*  2730 */   245,  166,  245,  245,  169,  245,  245,  172,  245,  245,
 /*  2740 */    40,   41,  245,  189,  245,  245,   46,  245,   48,   49,
 /*  2750 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  2760 */    60,   61,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  2770 */   245,  245,   72,  219,   74,  245,  245,  245,  224,  225,
 /*  2780 */   226,  227,  228,  229,  219,  231,  245,  245,  234,  224,
 /*  2790 */   225,  226,  227,  228,  229,   95,  231,  245,   98,  245,
 /*  2800 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  2810 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  2820 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  245,
 /*  2830 */   160,  245,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  2840 */   245,  245,  172,  245,   29,  245,  245,  245,  245,  245,
 /*  2850 */   245,  245,  245,  245,  245,   40,   41,  245,  245,  189,
 /*  2860 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  2870 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  2880 */   245,  245,  245,  245,  245,  245,  245,   72,  245,  219,
 /*  2890 */   245,  245,  245,  245,  224,  225,  226,  227,  228,  229,
 /*  2900 */   245,  231,  245,  245,  234,  245,  245,  245,  245,  245,
 /*  2910 */    95,  245,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  2920 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  2930 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  2940 */    10,  245,  245,  245,  245,  245,  245,  245,  245,  134,
 /*  2950 */   135,  136,  137,  138,  139,  160,  245,  245,  245,   29,
 /*  2960 */   165,  245,  245,  245,  245,  245,  245,  172,  245,  245,
 /*  2970 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  2980 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  2990 */    60,   61,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  3000 */   245,  245,   72,  245,  245,  245,  245,  245,  245,  245,
 /*  3010 */   245,  245,  245,  218,  219,  245,  245,  245,  245,  224,
 /*  3020 */   225,  226,  227,  228,  229,   95,  231,  245,   98,  245,
 /*  3030 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  3040 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  3050 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  160,
 /*  3060 */   245,  245,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  3070 */   245,  172,  245,  245,   29,  245,  245,  245,  245,  245,
 /*  3080 */   245,  245,  245,  245,  245,   40,   41,  188,  245,  245,
 /*  3090 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  3100 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  3110 */   245,  245,  245,  245,  245,  245,  245,   72,  219,  245,
 /*  3120 */   245,  245,  245,  224,  225,  226,  227,  228,  229,  245,
 /*  3130 */   231,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  3140 */    95,  245,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  3150 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  3160 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  3170 */    10,  245,  245,  245,  160,  245,  245,  245,  245,  134,
 /*  3180 */   135,  136,  137,  138,  139,  160,  172,  245,  245,   29,
 /*  3190 */   245,  245,  245,  245,  169,  245,  245,  172,  245,  245,
 /*  3200 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  3210 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  3220 */    60,   61,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  3230 */   245,  245,   72,  219,  245,  245,  245,  245,  224,  225,
 /*  3240 */   226,  227,  228,  229,  219,  231,  245,  245,  234,  224,
 /*  3250 */   225,  226,  227,  228,  229,   95,  231,  245,   98,  245,
 /*  3260 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  3270 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  3280 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  160,
 /*  3290 */   245,  245,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  3300 */   245,  172,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  3310 */   245,  245,  245,  245,  245,   40,   41,  245,  245,  245,
 /*  3320 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  3330 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  3340 */   245,  245,  245,  245,  245,  245,  245,   72,  219,   74,
 /*  3350 */   245,  245,  245,  224,  225,  226,  227,  228,  229,  245,
 /*  3360 */   231,  245,  245,  245,  245,  245,  245,  245,  239,  245,
 /*  3370 */    95,  245,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  3380 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  3390 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  3400 */    10,  245,  245,  245,  160,  245,  245,  245,  245,  134,
 /*  3410 */   135,  136,  137,  138,  139,  160,  172,  245,  245,   29,
 /*  3420 */   245,  245,  245,  245,  169,  245,  245,  172,  245,  245,
 /*  3430 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  3440 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  3450 */    60,   61,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  3460 */   245,  245,   72,  219,  245,  245,  245,  245,  224,  225,
 /*  3470 */   226,  227,  228,  229,  219,  231,  245,  245,  245,  224,
 /*  3480 */   225,  226,  227,  228,  229,   95,  231,  245,   98,  245,
 /*  3490 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  3500 */   110,  111,  112,  113,  114,  245,    1,    2,    3,    4,
 /*  3510 */     5,  245,  245,  245,  124,   10,  245,  245,  245,  245,
 /*  3520 */   245,  160,  245,  245,  134,  135,  136,  137,  138,  139,
 /*  3530 */   169,  245,  245,  172,  245,  245,  245,  245,  245,  245,
 /*  3540 */   245,  245,  245,  245,  245,   40,   41,  245,  245,  245,
 /*  3550 */   245,   46,  245,   48,   49,   50,   51,   52,   53,   54,
 /*  3560 */    55,   56,   57,   58,  245,   60,   61,  245,  245,  245,
 /*  3570 */   245,  245,  245,  245,  245,  245,  245,   72,  245,  245,
 /*  3580 */   219,  245,  245,  245,  245,  224,  225,  226,  227,  228,
 /*  3590 */   229,  245,  231,  245,  245,  245,  245,  245,  245,  245,
 /*  3600 */    95,  245,  245,   98,  245,  245,  245,  245,  103,  104,
 /*  3610 */   105,  106,  107,  108,  109,  110,  111,  112,  113,  114,
 /*  3620 */   245,    1,    2,    3,    4,    5,  245,  245,  245,  124,
 /*  3630 */    10,  245,  245,  245,  160,  245,  245,  245,  245,  134,
 /*  3640 */   135,  136,  137,  138,  139,  160,  172,  245,  245,  245,
 /*  3650 */   245,  245,  245,  245,  169,  245,  245,  172,  245,  245,
 /*  3660 */    40,   41,  245,  245,  245,  245,   46,  245,   48,   49,
 /*  3670 */    50,   51,   52,   53,   54,   55,   56,   57,   58,  245,
 /*  3680 */    60,   61,  160,  245,  245,  245,  245,  245,  245,  245,
 /*  3690 */   245,  245,   72,  219,  172,  245,  245,  245,  224,  225,
 /*  3700 */   226,  227,  228,  229,  219,  231,  245,  245,  245,  224,
 /*  3710 */   225,  226,  227,  228,  229,   95,  231,  245,   98,  245,
 /*  3720 */   245,  245,  245,  103,  104,  105,  106,  107,  108,  109,
 /*  3730 */   110,  111,  112,  113,  114,  245,  245,  245,  245,  245,
 /*  3740 */   218,  219,  245,  245,  124,  245,  224,  225,  226,  227,
 /*  3750 */   228,  229,  245,  231,  134,  135,  136,  137,  138,  139,
 /*  3760 */   145,  146,  147,  148,  245,  150,  245,  245,  153,  245,
 /*  3770 */   245,  245,  245,  245,  159,  160,  245,  245,  245,  245,
 /*  3780 */   245,  245,  245,  245,  245,  245,  245,  172,  245,  245,
 /*  3790 */   245,  176,  177,  178,  245,  245,  181,  245,  245,  245,
 /*  3800 */   185,  245,  245,  188,  245,  245,  245,  192,  193,  245,
 /*  3810 */   195,  245,  245,  198,  245,   11,   12,   13,   14,   15,
 /*  3820 */    16,   17,   18,   19,   20,   21,   22,  245,  245,  245,
 /*  3830 */   245,  245,  245,  245,  219,  245,  245,  245,  245,  224,
 /*  3840 */   225,  226,  227,  228,  229,  245,  231,    7,    8,    9,
 /*  3850 */   245,  245,  245,   49,   50,  240,  245,  245,  245,  245,
 /*  3860 */   245,  245,  245,   23,   24,   25,   26,   27,   28,   29,
 /*  3870 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  3880 */    40,   41,   42,   43,   44,   45,  245,   47,  245,  245,
 /*  3890 */   245,  245,  245,  245,  245,   91,   11,   12,   13,   14,
 /*  3900 */    15,   16,   17,   18,   19,   20,   21,   22,  160,  245,
 /*  3910 */   245,  245,  245,  245,   74,  245,  245,  169,  245,  160,
 /*  3920 */   172,  245,    7,    8,    9,  245,  245,  245,  169,  245,
 /*  3930 */   245,  172,  245,  245,   49,   50,  245,  245,   23,  245,
 /*  3940 */    25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
 /*  3950 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  3960 */    45,  245,   47,  245,  245,  245,  245,  219,  245,  245,
 /*  3970 */   245,  245,  224,  225,  226,  227,  228,  229,  219,  231,
 /*  3980 */   245,  245,  245,  224,  225,  226,  227,  228,  229,  245,
 /*  3990 */   231,   76,  245,  245,  245,  245,  245,  245,  245,    7,
 /*  4000 */     8,    9,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4010 */   245,  245,  245,  245,  245,   23,  245,   25,   26,   27,
 /*  4020 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  4030 */    38,   39,   40,   41,   42,   43,   44,   45,    6,   47,
 /*  4040 */     7,    8,    9,   11,   12,   13,   14,   15,   16,   17,
 /*  4050 */    18,   19,   20,   21,   22,  245,   23,  245,   25,   26,
 /*  4060 */    27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
 /*  4070 */    37,   38,   39,   40,   41,   42,   43,   44,   45,  245,
 /*  4080 */    47,   49,   50,  245,  245,  245,  245,  245,  245,  245,
 /*  4090 */    59,  245,  245,   11,   12,   13,   14,   15,   16,   17,
 /*  4100 */    18,   19,   20,   21,   22,   73,   75,   76,  245,   76,
 /*  4110 */   245,  245,  245,  245,  245,  245,  245,    7,    8,    9,
 /*  4120 */   128,  245,  245,  245,  245,  245,   95,  245,  245,   98,
 /*  4130 */   245,   49,   50,   23,  245,   25,   26,   27,   28,   29,
 /*  4140 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  4150 */    40,   41,   42,   43,   44,   45,   74,   47,  127,  128,
 /*  4160 */   129,  130,  131,  132,  133,   59,  245,  245,  245,  245,
 /*  4170 */   245,  140,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4180 */   245,   75,   76,  245,   74,  245,  245,  245,  160,  245,
 /*  4190 */   245,  245,    7,    8,    9,  245,  245,  169,  245,  245,
 /*  4200 */   172,   95,  245,  245,   98,  245,  245,  245,   23,  245,
 /*  4210 */    25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
 /*  4220 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  4230 */    45,  245,   47,  127,  128,  129,  130,  131,  132,  133,
 /*  4240 */   245,  245,  245,  245,  138,  245,  245,  219,  245,  245,
 /*  4250 */   245,  160,  224,  225,  226,  227,  228,  229,   73,  231,
 /*  4260 */   245,  245,  160,  172,  245,  245,    7,    8,    9,  245,
 /*  4270 */   245,  169,  245,  245,  172,  245,  245,  245,  245,  245,
 /*  4280 */   245,  245,   23,  192,   25,   26,   27,   28,   29,   30,
 /*  4290 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*  4300 */    41,   42,   43,   44,   45,  245,   47,  245,  245,  245,
 /*  4310 */   219,  245,  245,  245,  245,  224,  225,  226,  227,  228,
 /*  4320 */   229,  219,  231,  160,  245,  245,  224,  225,  226,  227,
 /*  4330 */   228,  229,   73,  231,  245,  172,  245,  245,  245,  245,
 /*  4340 */     7,    8,    9,  245,  245,  245,  245,  245,  245,  245,
 /*  4350 */   245,  245,  245,  245,  245,  192,   23,  245,   25,   26,
 /*  4360 */    27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
 /*  4370 */    37,   38,   39,   40,   41,   42,   43,   44,   45,  245,
 /*  4380 */    47,  245,  219,  245,  245,  245,  245,  224,  225,  226,
 /*  4390 */   227,  228,  229,  245,  231,  245,  245,  245,  245,  160,
 /*  4400 */   245,  245,  245,  245,  245,  245,  245,  245,  245,   76,
 /*  4410 */   245,  172,  245,  160,  245,  245,  245,    7,    8,    9,
 /*  4420 */   245,  245,  245,  245,  245,  172,  245,  245,  245,  245,
 /*  4430 */   245,  245,  245,   23,  245,   25,   26,   27,   28,   29,
 /*  4440 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  4450 */    40,   41,   42,   43,   44,   45,  245,   47,  219,  245,
 /*  4460 */   245,  245,  245,  224,  225,  226,  227,  228,  229,  245,
 /*  4470 */   231,  245,  219,  245,  245,  245,  245,  224,  225,  226,
 /*  4480 */   227,  228,  229,   73,  231,  245,  245,  245,  245,  245,
 /*  4490 */   245,    7,    8,    9,  245,  245,  245,  245,  245,  245,
 /*  4500 */   245,  245,  245,  245,  245,  245,  245,   23,  245,   25,
 /*  4510 */    26,   27,   28,   29,   30,   31,   32,   33,   34,   35,
 /*  4520 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*  4530 */   245,   47,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4540 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4550 */   245,  245,  245,  245,  245,  245,  245,   73,  245,  245,
 /*  4560 */   245,  245,  245,  245,  245,    7,    8,    9,  245,  245,
 /*  4570 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4580 */   245,   23,  245,   25,   26,   27,   28,   29,   30,   31,
 /*  4590 */    32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
 /*  4600 */    42,   43,   44,   45,  245,   47,  245,  245,  245,  245,
 /*  4610 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4620 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4630 */   245,   73,  245,  245,  245,  245,  245,  245,  245,    7,
 /*  4640 */     8,    9,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4650 */   245,  245,  245,  245,  245,   23,  245,   25,   26,   27,
 /*  4660 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  4670 */    38,   39,   40,   41,   42,   43,   44,   45,  245,   47,
 /*  4680 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4690 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4700 */   245,  245,  245,  245,  245,  245,  245,  245,   76,  245,
 /*  4710 */   245,  245,  245,  245,  245,  245,    7,    8,    9,  245,
 /*  4720 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4730 */   245,  245,   23,  245,   25,   26,   27,   28,   29,   30,
 /*  4740 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*  4750 */    41,   42,   43,   44,   45,    6,   47,    7,    8,    9,
 /*  4760 */    11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
 /*  4770 */    21,   22,  245,   23,  245,   25,   26,   27,   28,   29,
 /*  4780 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  4790 */    40,   41,   42,   43,   44,   45,  245,   47,   49,   50,
 /*  4800 */   245,  245,  245,  245,   59,  245,  245,  245,  245,  245,
 /*  4810 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4820 */    75,   76,   73,   73,  115,  245,  245,  245,  245,  245,
 /*  4830 */   245,    7,    8,    9,  245,  245,  245,  245,  245,  245,
 /*  4840 */    95,  245,  245,   98,  245,  245,  245,   23,  245,   25,
 /*  4850 */    26,   27,   28,   29,   30,   31,   32,   33,   34,   35,
 /*  4860 */    36,   37,   38,   39,   40,   41,   42,   43,   44,   45,
 /*  4870 */   245,   47,  127,  128,  129,  130,  131,  132,  133,  245,
 /*  4880 */   245,  245,  137,  245,  245,  245,  245,  245,  245,  245,
 /*  4890 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4900 */    76,  245,  245,  245,  245,  245,  245,  245,    7,    8,
 /*  4910 */     9,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4920 */   245,  245,  245,  245,   23,  245,   25,   26,   27,   28,
 /*  4930 */    29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
 /*  4940 */    39,   40,   41,   42,   43,   44,   45,  245,   47,  245,
 /*  4950 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4960 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  4970 */   245,  245,  245,  245,  245,   74,  245,  245,  245,  245,
 /*  4980 */   245,  245,  245,    7,    8,    9,  245,  245,  245,  245,
 /*  4990 */   245,  245,  245,  245,  245,  245,  245,  245,  245,   23,
 /*  5000 */   245,   25,   26,   27,   28,   29,   30,   31,   32,   33,
 /*  5010 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*  5020 */    44,   45,  245,   47,  245,  245,  245,  245,  245,  245,
 /*  5030 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5040 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5050 */    74,  245,  245,  245,  245,  245,  245,  245,    7,    8,
 /*  5060 */     9,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5070 */   245,  245,  245,  245,   23,  245,   25,   26,   27,   28,
 /*  5080 */    29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
 /*  5090 */    39,   40,   41,   42,   43,   44,   45,  245,   47,  245,
 /*  5100 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5110 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5120 */   245,  245,  245,  245,   73,  245,  245,  245,  245,  245,
 /*  5130 */   245,  245,    7,    8,    9,  245,  245,  245,  245,  245,
 /*  5140 */   245,  245,  245,  245,  245,  245,  245,  245,   23,  245,
 /*  5150 */    25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
 /*  5160 */    35,   36,   37,   38,   39,   40,   41,   42,   43,   44,
 /*  5170 */    45,  245,   47,  245,  245,  245,  245,  245,  245,  245,
 /*  5180 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5190 */   245,  245,  245,  245,  245,  245,  245,  245,  245,   74,
 /*  5200 */   245,  245,  245,  245,  245,  245,  245,    7,    8,    9,
 /*  5210 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5220 */   245,  245,  245,   23,   24,   25,   26,   27,   28,   29,
 /*  5230 */    30,   31,   32,   33,   34,   35,   36,   37,   38,   39,
 /*  5240 */    40,   41,   42,   43,   44,   45,  245,   47,    7,    8,
 /*  5250 */     9,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5260 */   245,  245,  245,  245,   23,  245,   25,   26,   27,   28,
 /*  5270 */    29,   30,   31,   32,   33,   34,   35,   36,   37,   38,
 /*  5280 */    39,   40,   41,   42,   43,   44,   45,  245,   47,    7,
 /*  5290 */     8,    9,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5300 */   245,  245,  245,  245,  245,   23,  245,   25,   26,   27,
 /*  5310 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  5320 */    38,   39,   40,   41,   42,   43,   44,   45,  245,   47,
 /*  5330 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5340 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5350 */   245,  245,  245,  245,  245,   73,  115,  245,  245,  245,
 /*  5360 */   245,  245,  245,    7,    8,    9,  245,  245,  245,  245,
 /*  5370 */   245,  245,  245,  245,  245,  245,  245,  245,  245,   23,
 /*  5380 */   245,   25,   26,   27,   28,   29,   30,   31,   32,   33,
 /*  5390 */    34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
 /*  5400 */    44,   45,  245,   47,  245,  245,  245,  245,  245,  245,
 /*  5410 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5420 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5430 */   245,  245,   76,  245,  245,  245,  245,  245,  245,  245,
 /*  5440 */     7,    8,    9,  245,  245,  245,  245,  245,  245,  245,
 /*  5450 */   245,  245,  245,  245,  245,  245,   23,  245,   25,   26,
 /*  5460 */    27,   28,   29,   30,   31,   32,   33,   34,   35,   36,
 /*  5470 */    37,   38,   39,   40,   41,   42,   43,   44,   45,  245,
 /*  5480 */    47,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5490 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5500 */   245,  245,  145,  146,  147,  148,   73,  150,  245,  245,
 /*  5510 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  5520 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  172,
 /*  5530 */   245,  245,  245,  176,  177,  178,  245,  245,  181,  245,
 /*  5540 */   245,  245,  185,  245,  245,  188,  245,  245,  245,  192,
 /*  5550 */   193,  245,  195,  245,  245,  198,  245,  245,  245,  245,
 /*  5560 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5570 */   245,  245,  245,  245,  245,  245,  219,  245,  245,  245,
 /*  5580 */   245,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  5590 */   245,  245,  245,  245,   59,  245,  245,  240,  245,  245,
 /*  5600 */   245,  144,  145,  146,  147,  148,  245,  150,  245,  245,
 /*  5610 */    75,   76,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  5620 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  172,
 /*  5630 */    95,  245,  245,   98,  177,  178,  245,  245,  181,  245,
 /*  5640 */   245,  106,  185,  245,  245,  188,  245,  245,  245,  192,
 /*  5650 */   193,  245,  195,  245,  245,  198,  245,  245,  245,  245,
 /*  5660 */   245,  245,  127,  128,  129,  130,  131,  132,  133,  245,
 /*  5670 */   245,  245,  245,  245,  245,  245,  219,  245,  245,  245,
 /*  5680 */   245,  224,  225,  226,  227,  228,  229,  245,  231,    7,
 /*  5690 */     8,    9,  245,  245,  245,  245,  245,  240,  245,  245,
 /*  5700 */   245,  245,  245,  245,  245,   23,  245,   25,   26,   27,
 /*  5710 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  5720 */    38,   39,   40,   41,   42,   43,   44,   45,  245,   47,
 /*  5730 */     8,    9,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5740 */   245,  245,  245,  245,  245,   23,  245,   25,   26,   27,
 /*  5750 */    28,   29,   30,   31,   32,   33,   34,   35,   36,   37,
 /*  5760 */    38,   39,   40,   41,   42,   43,   44,   45,    9,   47,
 /*  5770 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5780 */   245,  245,   23,  245,   25,   26,   27,   28,   29,   30,
 /*  5790 */    31,   32,   33,   34,   35,   36,   37,   38,   39,   40,
 /*  5800 */    41,   42,   43,   44,   45,  245,   47,  245,  245,  245,
 /*  5810 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5820 */   245,  245,  145,  245,  245,  148,  245,  150,  245,  245,
 /*  5830 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  5840 */   245,  245,  245,  245,  245,  168,  245,  245,  245,  172,
 /*  5850 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5860 */   245,  245,  245,  245,  245,  188,  245,  245,  145,  192,
 /*  5870 */   193,  148,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  5880 */   157,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  5890 */   245,  245,  245,  245,  245,  172,  219,  245,  245,  245,
 /*  5900 */   245,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  5910 */   245,  188,  245,  245,  245,  192,  193,  240,  195,  245,
 /*  5920 */   245,  198,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  5930 */   145,  245,  245,  148,  245,  150,  245,  245,  245,  245,
 /*  5940 */   155,  245,  219,  245,  159,  160,  245,  224,  225,  226,
 /*  5950 */   227,  228,  229,  245,  231,  245,  245,  172,  245,  245,
 /*  5960 */   245,  245,  245,  240,  245,  245,  245,  245,  245,  245,
 /*  5970 */   245,  245,  245,  188,  245,  245,  245,  192,  193,  245,
 /*  5980 */   195,  245,  245,  198,  245,  245,  245,  245,  245,  245,
 /*  5990 */   245,  145,  245,  245,  148,  245,  150,  245,  245,  245,
 /*  6000 */   245,  245,  245,  245,  219,  159,  160,  245,  245,  224,
 /*  6010 */   225,  226,  227,  228,  229,  245,  231,  171,  172,  245,
 /*  6020 */   245,  245,  245,  245,  245,  240,  245,  245,  245,  245,
 /*  6030 */   245,  245,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  6040 */   245,  195,  245,  245,  198,  245,  245,  245,  245,  245,
 /*  6050 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  6060 */   245,  245,  245,  245,  145,  219,  245,  148,  245,  150,
 /*  6070 */   224,  225,  226,  227,  228,  229,  245,  231,  159,  160,
 /*  6080 */   245,  245,  245,  245,  245,  245,  240,  168,  245,  245,
 /*  6090 */   245,  172,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  6100 */   245,  245,  245,  245,  245,  245,  245,  188,  245,  245,
 /*  6110 */   245,  192,  193,  245,  195,  245,  245,  198,  245,  245,
 /*  6120 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  6130 */   245,  150,  245,  245,  245,  245,  245,  245,  219,  245,
 /*  6140 */   159,  160,  245,  224,  225,  226,  227,  228,  229,  245,
 /*  6150 */   231,  245,  245,  172,  245,  245,  150,  245,  245,  240,
 /*  6160 */   245,  245,  245,  245,  245,  159,  160,  245,  245,  188,
 /*  6170 */   245,  245,  245,  192,  193,  245,  195,  245,  172,  198,
 /*  6180 */   245,  245,  245,  245,  245,  245,  245,  245,  207,  208,
 /*  6190 */   245,  245,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  6200 */   219,  195,  196,  245,  198,  224,  225,  226,  227,  228,
 /*  6210 */   229,  245,  231,  245,  245,  245,  245,  245,  150,  245,
 /*  6220 */   245,  240,  245,  245,  156,  219,  245,  159,  160,  245,
 /*  6230 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  6240 */   172,  235,  245,  245,  245,  245,  240,  245,  245,  245,
 /*  6250 */   245,  245,  245,  245,  245,  245,  188,  245,  245,  245,
 /*  6260 */   192,  193,  150,  195,  245,  245,  198,  245,  156,  245,
 /*  6270 */   245,  159,  160,  245,  245,  245,  245,  245,  245,  245,
 /*  6280 */   245,  245,  245,  245,  172,  245,  245,  219,  245,  245,
 /*  6290 */   245,  245,  224,  225,  226,  227,  228,  229,  245,  231,
 /*  6300 */   188,  245,  245,  245,  192,  193,  245,  195,  240,  245,
 /*  6310 */   198,  245,  244,  245,  245,  245,  245,  245,  245,  245,
 /*  6320 */   150,  245,  245,  245,  245,  245,  245,  245,  245,  159,
 /*  6330 */   160,  219,  245,  245,  245,  245,  224,  225,  226,  227,
 /*  6340 */   228,  229,  172,  231,  245,  150,  245,  245,  245,  245,
 /*  6350 */   245,  245,  240,  245,  159,  160,  244,  245,  188,  245,
 /*  6360 */   245,  245,  192,  193,  245,  195,  245,  172,  198,  245,
 /*  6370 */   245,  245,  245,  245,  245,  245,  245,  207,  208,  245,
 /*  6380 */   245,  245,  245,  188,  245,  245,  245,  192,  193,  219,
 /*  6390 */   195,  245,  245,  198,  224,  225,  226,  227,  228,  229,
 /*  6400 */   245,  231,  207,  208,  245,  245,  245,  150,  245,  245,
 /*  6410 */   240,  245,  245,  245,  219,  245,  159,  160,  245,  224,
 /*  6420 */   225,  226,  227,  228,  229,  245,  231,  245,  245,  172,
 /*  6430 */   245,  245,  245,  245,  245,  240,  245,  245,  245,  245,
 /*  6440 */   245,  245,  245,  245,  245,  188,  245,  245,  245,  192,
 /*  6450 */   193,  245,  195,  145,  245,  198,  148,  245,  150,  245,
 /*  6460 */   245,  245,  245,  245,  207,  208,  245,  159,  160,  245,
 /*  6470 */   245,  245,  245,  245,  245,  245,  219,  245,  245,  245,
 /*  6480 */   172,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  6490 */   245,  245,  245,  245,  245,  245,  188,  240,  245,  245,
 /*  6500 */   192,  193,  145,  195,  245,  148,  198,  150,  245,  245,
 /*  6510 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  6520 */   245,  245,  245,  245,  245,  245,  245,  219,  245,  172,
 /*  6530 */   245,  245,  224,  225,  226,  227,  228,  229,  245,  231,
 /*  6540 */   245,  245,  245,  245,  245,  188,  245,  245,  240,  192,
 /*  6550 */   193,  245,  195,  145,  245,  198,  148,  245,  150,  245,
 /*  6560 */   245,  245,  245,  245,  245,  245,  245,  159,  160,  245,
 /*  6570 */   245,  245,  245,  245,  245,  245,  219,  245,  245,  245,
 /*  6580 */   172,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  6590 */   245,  245,  245,  245,  245,  245,  188,  240,  245,  145,
 /*  6600 */   192,  193,  148,  195,  150,  245,  198,  245,  245,  245,
 /*  6610 */   245,  245,  245,  159,  160,  245,  245,  245,  245,  245,
 /*  6620 */   245,  245,  245,  245,  245,  245,  172,  219,  245,  245,
 /*  6630 */   245,  245,  224,  225,  226,  227,  228,  229,  245,  231,
 /*  6640 */   245,  245,  188,  245,  245,  245,  192,  193,  240,  195,
 /*  6650 */   245,  245,  198,  150,  245,  245,  245,  245,  245,  245,
 /*  6660 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  6670 */   245,  245,  245,  219,  245,  172,  245,  245,  224,  225,
 /*  6680 */   226,  227,  228,  229,  245,  231,  245,  245,  245,  245,
 /*  6690 */   245,  188,  245,  245,  240,  192,  193,  245,  195,  150,
 /*  6700 */   245,  198,  245,  245,  245,  245,  245,  245,  159,  160,
 /*  6710 */   207,  208,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  6720 */   245,  172,  219,  245,  245,  245,  245,  224,  225,  226,
 /*  6730 */   227,  228,  229,  245,  231,  245,  245,  188,  245,  245,
 /*  6740 */   245,  192,  193,  240,  195,  245,  245,  198,  245,  245,
 /*  6750 */   245,  245,  245,  245,  245,  245,  207,  208,  245,  245,
 /*  6760 */   245,  245,  245,  245,  245,  245,  245,  245,  219,  245,
 /*  6770 */   245,  245,  245,  224,  225,  226,  227,  228,  229,  245,
 /*  6780 */   231,  245,  245,  245,  150,  245,  245,  245,  245,  240,
 /*  6790 */   156,  245,  245,  159,  160,  245,  245,  245,  245,  245,
 /*  6800 */   245,  245,  245,  245,  245,  245,  172,  245,  245,  245,
 /*  6810 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /*  6820 */   245,  245,  188,  245,  245,  245,  192,  193,  245,  195,
 /*  6830 */   245,  245,  198,  245,  150,  245,  245,  245,  245,  245,
 /*  6840 */   245,  245,  245,  159,  160,  245,  245,  245,  245,  245,
 /*  6850 */   245,  245,  245,  219,  245,  245,  172,  245,  224,  225,
 /*  6860 */   226,  227,  228,  229,  245,  231,  245,  245,  245,  245,
 /*  6870 */   245,  245,  188,  245,  240,  245,  192,  193,  244,  195,
 /*  6880 */   150,  245,  198,  245,  245,  245,  245,  245,  245,  159,
 /*  6890 */   160,  245,  245,  163,  245,  245,  245,  245,  245,  245,
 /*  6900 */   245,  245,  172,  219,  245,  245,  245,  245,  224,  225,
 /*  6910 */   226,  227,  228,  229,  230,  231,  245,  245,  188,  245,
 /*  6920 */   245,  245,  192,  193,  240,  195,  150,  245,  198,  245,
 /*  6930 */   245,  245,  245,  245,  245,  159,  160,  245,  245,  245,
 /*  6940 */   245,  245,  245,  245,  245,  245,  245,  245,  172,  219,
 /*  6950 */   245,  245,  245,  245,  224,  225,  226,  227,  228,  229,
 /*  6960 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  6970 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  6980 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  6990 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7000 */   224,  225,  226,  227,  228,  229,  230,  231,  245,  245,
 /*  7010 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7020 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7030 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  7040 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  7050 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  7060 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  7070 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  7080 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  7090 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  7100 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  7110 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  7120 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  7130 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  7140 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  7150 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7160 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  7170 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7180 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7190 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  7200 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  7210 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  7220 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  7230 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  7240 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  7250 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  7260 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  7270 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  7280 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  7290 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  7300 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  7310 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7320 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  7330 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7340 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7350 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  7360 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  7370 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  7380 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  7390 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  7400 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  7410 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  7420 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  7430 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  7440 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  7450 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  7460 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  7470 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7480 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  7490 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7500 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7510 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  7520 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  7530 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  7540 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  7550 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  7560 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  7570 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  7580 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  7590 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  7600 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  7610 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  7620 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  7630 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7640 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  7650 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7660 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7670 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  7680 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  7690 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  7700 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  7710 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  7720 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  7730 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  7740 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  7750 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  7760 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  7770 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  7780 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  7790 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7800 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  7810 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7820 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7830 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  7840 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  7850 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  7860 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  7870 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  7880 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  7890 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  7900 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  7910 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  7920 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  7930 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  7940 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  7950 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  7960 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  7970 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  7980 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  7990 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8000 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8010 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8020 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8030 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  8040 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  8050 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  8060 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  8070 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  8080 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  8090 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  8100 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  8110 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  8120 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  8130 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  8140 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  8150 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8160 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8170 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8180 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8190 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  8200 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  8210 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  8220 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  8230 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  8240 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  8250 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  8260 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  8270 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  8280 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  8290 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  8300 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  8310 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8320 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8330 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8340 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8350 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  8360 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  8370 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  8380 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  8390 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  8400 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  8410 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  8420 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  8430 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  8440 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  8450 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  8460 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  8470 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8480 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8490 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8500 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8510 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  8520 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  8530 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  8540 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  8550 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  8560 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  8570 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  8580 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  8590 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  8600 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  8610 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  8620 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  8630 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8640 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8650 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8660 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8670 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  8680 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  8690 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  8700 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  8710 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  8720 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  8730 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  8740 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  8750 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  8760 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  8770 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  8780 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  8790 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8800 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8810 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8820 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8830 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  8840 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  8850 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  8860 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  8870 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  8880 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  8890 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  8900 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  8910 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  8920 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  8930 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  8940 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  8950 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  8960 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  8970 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  8980 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  8990 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9000 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9010 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9020 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9030 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  9040 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  9050 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  9060 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  9070 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  9080 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  9090 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  9100 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  9110 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  9120 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  9130 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  9140 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  9150 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9160 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9170 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9180 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9190 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  9200 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  9210 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  9220 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  9230 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  9240 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  9250 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  9260 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  9270 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  9280 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  9290 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  9300 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  9310 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9320 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9330 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9340 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9350 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  9360 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  9370 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  9380 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  9390 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  9400 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  9410 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  9420 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  9430 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  9440 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  9450 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  9460 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  9470 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9480 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9490 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9500 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9510 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  9520 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  9530 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  9540 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  9550 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  9560 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  9570 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  9580 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  9590 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  9600 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  9610 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  9620 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  9630 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9640 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9650 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9660 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9670 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  9680 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  9690 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  9700 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  9710 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  9720 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  9730 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  9740 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  9750 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  9760 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  9770 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  9780 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  9790 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9800 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9810 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9820 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9830 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /*  9840 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /*  9850 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /*  9860 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /*  9870 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /*  9880 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /*  9890 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /*  9900 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /*  9910 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /*  9920 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /*  9930 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /*  9940 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /*  9950 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /*  9960 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /*  9970 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /*  9980 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /*  9990 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /* 10000 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /* 10010 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /* 10020 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /* 10030 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /* 10040 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /* 10050 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /* 10060 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /* 10070 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /* 10080 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /* 10090 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /* 10100 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /* 10110 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /* 10120 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /* 10130 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /* 10140 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /* 10150 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /* 10160 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /* 10170 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /* 10180 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /* 10190 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /* 10200 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /* 10210 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /* 10220 */   193,  245,  195,  150,  245,  198,  245,  245,  245,  245,
 /* 10230 */   245,  245,  159,  160,  245,  245,  245,  245,  245,  245,
 /* 10240 */   150,  245,  245,  245,  245,  172,  219,  245,  245,  159,
 /* 10250 */   160,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /* 10260 */   245,  188,  172,  245,  245,  192,  193,  240,  195,  245,
 /* 10270 */   245,  198,  245,  245,  245,  245,  245,  245,  188,  245,
 /* 10280 */   245,  245,  192,  193,  245,  195,  150,  245,  198,  245,
 /* 10290 */   245,  245,  219,  245,  245,  159,  160,  224,  225,  226,
 /* 10300 */   227,  228,  229,  245,  231,  245,  245,  245,  172,  219,
 /* 10310 */   245,  245,  245,  240,  224,  225,  226,  227,  228,  229,
 /* 10320 */   245,  231,  245,  245,  188,  245,  245,  245,  192,  193,
 /* 10330 */   240,  195,  245,  245,  198,  245,  245,  150,  245,  245,
 /* 10340 */   245,  245,  245,  245,  245,  245,  159,  160,  245,  245,
 /* 10350 */   245,  245,  245,  245,  245,  219,  245,  245,  245,  172,
 /* 10360 */   224,  225,  226,  227,  228,  229,  245,  231,  245,  245,
 /* 10370 */   245,  245,  245,  245,  245,  188,  240,  245,  245,  192,
 /* 10380 */   193,  245,  195,  245,  245,  198,  245,  245,  245,  245,
 /* 10390 */   245,  245,  245,  245,  245,  245,  245,  245,  245,  245,
 /* 10400 */   245,  245,  245,  245,  245,  245,  219,  245,  245,  245,
 /* 10410 */   245,  224,  225,  226,  227,  228,  229,  245,  231,  245,
 /* 10420 */   245,  245,  245,  245,  245,  245,  245,  240,
);
    const YY_SHIFT_USE_DFLT = -91;
    const YY_SHIFT_MAX = 486;
    static public $yy_shift_ofst = array(
 /*     0 */   -91, 1200,  946,  486,  117,  371,  831,  716,   -1,  256,
 /*    10 */   601, 1085, 1315, 1200, 1200, 1200, 1732, 2010, 1454, 1871,
 /*    20 */  1454, 1593, 2125, 2125, 2125, 2240, 2240, 2240, 2240, 2240,
 /*    30 */  2470, 2240, 3505, 3505, 3505, 3505, 3505, 3505, 2355, 2585,
 /*    40 */  2700, 3275, 3390, 3160, 3045, 2815, 2930, 3505, 3505, 3505,
 /*    50 */  3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*    60 */  3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*    70 */  3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*    80 */  3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*    90 */  3620, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*   100 */  3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*   110 */  3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505, 3505,
 /*   120 */  3505, 3505, 3505,  -23,  -23,  -57,  -57,  113,  769,  -57,
 /*   130 */   113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
 /*   140 */   113,  113,   95,  113,  113,  113,  141,  141,  141,  654,
 /*   150 */   654,  654,  654, 1504, 1365,  135,  770,  635,  -90,  135,
 /*   160 */   135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
 /*   170 */   135,  135,  135,  135,  451,  451, 1112,  485,  485,  485,
 /*   180 */   430, 1141, 1141, 3840, 5535, 4031, 4745, 4106,  547,   -5,
 /*   190 */   430,  377,  304,  220,  310,  214,  717,  -17,  784, 1165,
 /*   200 */  1198, 1141, 1198, 1116, 1141, 1173, 1164,  790,  695,  714,
 /*   210 */   784,  790,  712, 1107,  613,  695,  660, 1112, 1141, 1141,
 /*   220 */  1194, 1259, 1240,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
 /*   230 */   -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91,
 /*   240 */   -91,  -91,  -91,  -91,  -91,  -91,  -91,  -91, 4901, 4824,
 /*   250 */  4750, 4709, 4632, 4976, 5051, 5282, 5241, 5200, 5125, 5356,
 /*   260 */  4484, 4033, 5433, 4185, 3992, 3915, 4110, 4259, 4410, 4333,
 /*   270 */  4558, 5682, 5682, 5682, 5682, 5682, 5682, 5682, 5682, 5682,
 /*   280 */  5682, 5682, 5682, 5722, 5759,  -15,  -15,  -15,  -15,  -15,
 /*   290 */   -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,  -15,
 /*   300 */   242, 1071, 2287, 2402, 2517,  109,  109,  109,  109,  109,
 /*   310 */  4032, 4749, 4082, 3804, 3885,  362,  362,  362,  362,  342,
 /*   320 */   342,  471,  471,  471,  471,  471,  568,   39,  669,  142,
 /*   330 */   312,   -7,  622,   58,  513,  175,  344,  801,  852,  175,
 /*   340 */   595,  459,  461,  514,  544,  860,  175,  158,    4,  745,
 /*   350 */   668,  175,  673,  579,  338,  357,  336,  287,   67,  206,
 /*   360 */   253,   54,  743, 1021, 1020, 1067, 1023, 1024, 1045,  981,
 /*   370 */   982,  995,  993,  996, 1000, 1064,  976, 1049, 1111, 1149,
 /*   380 */  1039, 1170, 1168, 1114, 1088, 1054, 1104, 1029, 1008, 1055,
 /*   390 */  1070, 1060, 1032,  948,  966,  848,  889,  853,  912,  884,
 /*   400 */   906,  763,  873,  847,  832,  881,  949,  830,  880,  915,
 /*   410 */   967,  944,  964,  950,  991, 1002,  940,  980,  917,  763,
 /*   420 */   920,  939,  937,  892, 1171,  934,  931,  916,  943, 1056,
 /*   430 */   974, 1016,  868,  620,  854,  859,  864,  911,  888,  901,
 /*   440 */   939, 1084,  763, 1052, 1031, 1126, 1075, 1086, 1001, 1004,
 /*   450 */   994,  998, 1083, 1044, 1080,  827,  217,  115,  473,  305,
 /*   460 */   285,  400,  399,  423,   88,  828,  710,  741,  475,  807,
 /*   470 */   763,  753,  819,  800,  783,  620,  483,  679,  686,  734,
 /*   480 */  1232, 1279, 1203, 1271, 1272,  783, 1250,
);
    const YY_REDUCE_USE_DFLT = -190;
    const YY_REDUCE_MAX = 247;
    static public $yy_reduce_ofst = array(
 /*     0 */   350, 3615, 5357, 5357, 5357, 5357, 5357, 5357, 5357, 5357,
 /*    10 */  5357, 5357, 5457, 5357, 5357, 5357, 5785, 5723, 5677, 5846,
 /*    20 */  5919, 6357, 6308, 6408, 6454, 6503, 6257, 6549, 6170, 5981,
 /*    30 */  6006, 6195, 6068, 6112, 6634, 6730, 6684, 6776, 8587, 8793,
 /*    40 */  8856, 9336, 9913, 9816, 9976, 10073, 9770, 9496, 9433, 9593,
 /*    50 */  9656, 7353, 7210, 7467, 7576, 6936, 6987, 7033, 7627, 8313,
 /*    60 */  8376, 7736, 7673, 7850, 7993, 7896, 7787, 8427, 8153, 8490,
 /*    70 */  7050, 6873, 7256, 7307, 7370, 7193, 6827, 8216, 8330, 8107,
 /*    80 */  8267, 7947, 8010, 7833, 7690, 8056, 8473, 8170, 7530, 7096,
 /*    90 */  6890, 7147, 8536, 7513, 7416, 9610, 9707, 9547, 9450, 9753,
 /*   100 */  10027, 10090, 9930, 9867, 9387, 8810, 8907, 8747, 8633, 8650,
 /*   110 */  10187, 8696, 8953, 8970, 9227, 9273, 9290, 9176, 9130, 9016,
 /*   120 */  9067, 9113, 10136, 2450, 2565, 2554, 2670, 2795, 2899, 3014,
 /*   130 */  3255, 4102, 3759, 3485, 3522, 3748, 4091, 4028, 3361, 4163,
 /*   140 */  3129, 3025, 4253, 3244, 3474, 4239, 1101,  272, 1520, -189,
 /*   150 */   297,  522,  406,  -85,  -85,   92, -163, -163,  -45,  644,
 /*   160 */   562,  648,  658,  773,  760,  677,  662,  533,  447,  435,
 /*   170 */   303,  777,  215,  102,  119,  306,  145,  439,  210,  404,
 /*   180 */   398,  529,  184, 1137, 1108, 1108, 1108, 1108, 1142,  997,
 /*   190 */  1018, 1090, 1019, 1068, 1022, 1009, 1057, 1059, 1048, 1106,
 /*   200 */  1073, 1150, 1047, 1040, 1092, 1026, 1100, 1053,  596,  687,
 /*   210 */   723,  678,  468,  481,  424,  605,  580, 1182, 1181, 1159,
 /*   220 */   422, 1138, 1147, 1167, 1197, 1151, 1146, 1110, 1175, 1213,
 /*   230 */  1209, 1082, 1081, 1087, 1036, 1174, 1077, 1065, 1063,  986,
 /*   240 */  1011, 1076, 1034, 1089, 1120, 1079, 1166, 1153,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(),
        /* 1 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 2 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 124, 134, 135, 136, 137, 138, 139, ),
        /* 3 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 4 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 118, 124, 134, 135, 136, 137, 138, 139, ),
        /* 5 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 134, 135, 136, 137, 138, 139, ),
        /* 6 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 7 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 8 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 124, 134, 135, 136, 137, 138, 139, ),
        /* 9 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 10 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 11 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 12 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 13 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 14 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 15 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 67, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 16 */ array(1, 2, 3, 4, 5, 10, 24, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 17 */ array(1, 2, 3, 4, 5, 10, 24, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 18 */ array(1, 2, 3, 4, 5, 10, 24, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 19 */ array(1, 2, 3, 4, 5, 10, 24, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 20 */ array(1, 2, 3, 4, 5, 10, 24, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 21 */ array(1, 2, 3, 4, 5, 10, 24, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 22 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 23 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 24 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 25 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 26 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 27 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 28 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 29 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 30 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 31 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 32 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 33 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 34 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 35 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 36 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 37 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 38 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 39 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 73, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 40 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 41 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 42 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 43 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 44 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 45 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 46 */ array(1, 2, 3, 4, 5, 10, 29, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 47 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 48 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 49 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 50 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 51 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 52 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 53 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 54 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 55 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 56 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 57 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 58 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 59 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 60 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 61 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 62 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 63 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 64 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 65 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 66 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 67 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 68 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 69 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 70 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 71 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 72 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 73 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 74 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 75 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 76 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 77 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 78 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 79 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 80 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 81 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 82 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 83 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 84 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 85 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 86 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 87 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 88 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 89 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 90 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 91 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 92 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 93 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 94 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 95 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 96 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 97 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 98 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 99 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 100 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 101 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 102 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 103 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 104 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 105 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 106 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 107 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 108 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 109 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 110 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 111 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 112 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 113 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 114 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 115 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 116 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 117 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 118 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 119 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 120 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 121 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 122 */ array(1, 2, 3, 4, 5, 10, 40, 41, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 95, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 124, 134, 135, 136, 137, 138, 139, ),
        /* 123 */ array(29, 95, 98, 124, ),
        /* 124 */ array(29, 95, 98, 124, ),
        /* 125 */ array(95, 98, 103, 124, ),
        /* 126 */ array(95, 98, 103, 124, ),
        /* 127 */ array(95, 98, 124, ),
        /* 128 */ array(75, 95, 98, 124, ),
        /* 129 */ array(95, 98, 103, 124, ),
        /* 130 */ array(95, 98, 124, ),
        /* 131 */ array(95, 98, 124, ),
        /* 132 */ array(95, 98, 124, ),
        /* 133 */ array(95, 98, 124, ),
        /* 134 */ array(95, 98, 124, ),
        /* 135 */ array(95, 98, 124, ),
        /* 136 */ array(95, 98, 124, ),
        /* 137 */ array(95, 98, 124, ),
        /* 138 */ array(95, 98, 124, ),
        /* 139 */ array(95, 98, 124, ),
        /* 140 */ array(95, 98, 124, ),
        /* 141 */ array(95, 98, 124, ),
        /* 142 */ array(60, 95, 98, 124, ),
        /* 143 */ array(95, 98, 124, ),
        /* 144 */ array(95, 98, 124, ),
        /* 145 */ array(95, 98, 124, ),
        /* 146 */ array(95, 98, 124, ),
        /* 147 */ array(95, 98, 124, ),
        /* 148 */ array(95, 98, 124, ),
        /* 149 */ array(75, 95, 98, 124, ),
        /* 150 */ array(75, 95, 98, 124, ),
        /* 151 */ array(75, 95, 98, 124, ),
        /* 152 */ array(75, 95, 98, 124, ),
        /* 153 */ array(65, 66, 67, 68, 69, 70, 76, 125, 126, ),
        /* 154 */ array(65, 66, 67, 68, 69, 70, 76, 125, 126, ),
        /* 155 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 156 */ array(95, 98, 124, ),
        /* 157 */ array(95, 98, 124, ),
        /* 158 */ array(95, 124, ),
        /* 159 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 160 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 161 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 162 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 163 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 164 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 165 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 166 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 167 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 168 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 169 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 170 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 171 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 172 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 173 */ array(98, 105, 107, 108, 109, 110, 111, 112, 113, 114, ),
        /* 174 */ array(73, 98, 105, ),
        /* 175 */ array(73, 98, 105, ),
        /* 176 */ array(94, ),
        /* 177 */ array(95, 124, ),
        /* 178 */ array(95, 124, ),
        /* 179 */ array(95, 124, ),
        /* 180 */ array(95, 124, ),
        /* 181 */ array(98, ),
        /* 182 */ array(98, ),
        /* 183 */ array(7, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 74, ),
        /* 184 */ array(59, 75, 76, 95, 98, 106, 127, 128, 129, 130, 131, 132, 133, ),
        /* 185 */ array(59, 75, 76, 95, 98, 127, 128, 129, 130, 131, 132, 133, 140, ),
        /* 186 */ array(59, 75, 76, 95, 98, 127, 128, 129, 130, 131, 132, 133, 137, ),
        /* 187 */ array(59, 75, 76, 95, 98, 127, 128, 129, 130, 131, 132, 133, 138, ),
        /* 188 */ array(65, 66, 67, 68, 69, 70, 97, ),
        /* 189 */ array(95, 98, 129, ),
        /* 190 */ array(95, 124, ),
        /* 191 */ array(62, 63, ),
        /* 192 */ array(74, 75, ),
        /* 193 */ array(75, 109, ),
        /* 194 */ array(98, 105, ),
        /* 195 */ array(24, 74, ),
        /* 196 */ array(62, 63, ),
        /* 197 */ array(24, 75, ),
        /* 198 */ array(115, ),
        /* 199 */ array(72, ),
        /* 200 */ array(72, ),
        /* 201 */ array(98, ),
        /* 202 */ array(72, ),
        /* 203 */ array(127, ),
        /* 204 */ array(98, ),
        /* 205 */ array(74, ),
        /* 206 */ array(95, ),
        /* 207 */ array(72, ),
        /* 208 */ array(29, ),
        /* 209 */ array(102, ),
        /* 210 */ array(115, ),
        /* 211 */ array(72, ),
        /* 212 */ array(74, ),
        /* 213 */ array(100, ),
        /* 214 */ array(6, ),
        /* 215 */ array(29, ),
        /* 216 */ array(98, ),
        /* 217 */ array(94, ),
        /* 218 */ array(98, ),
        /* 219 */ array(98, ),
        /* 220 */ array(127, ),
        /* 221 */ array(95, ),
        /* 222 */ array(100, ),
        /* 223 */ array(),
        /* 224 */ array(),
        /* 225 */ array(),
        /* 226 */ array(),
        /* 227 */ array(),
        /* 228 */ array(),
        /* 229 */ array(),
        /* 230 */ array(),
        /* 231 */ array(),
        /* 232 */ array(),
        /* 233 */ array(),
        /* 234 */ array(),
        /* 235 */ array(),
        /* 236 */ array(),
        /* 237 */ array(),
        /* 238 */ array(),
        /* 239 */ array(),
        /* 240 */ array(),
        /* 241 */ array(),
        /* 242 */ array(),
        /* 243 */ array(),
        /* 244 */ array(),
        /* 245 */ array(),
        /* 246 */ array(),
        /* 247 */ array(),
        /* 248 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 74, ),
        /* 249 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 76, ),
        /* 250 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 251 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 115, ),
        /* 252 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 76, ),
        /* 253 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 74, ),
        /* 254 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 255 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 256 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 115, ),
        /* 257 */ array(7, 8, 9, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 258 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 74, ),
        /* 259 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 76, ),
        /* 260 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 261 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 76, ),
        /* 262 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 263 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 264 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 128, ),
        /* 265 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 76, ),
        /* 266 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 74, ),
        /* 267 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 268 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 269 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 76, ),
        /* 270 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 73, ),
        /* 271 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 272 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 273 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 274 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 275 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 276 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 277 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 278 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 279 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 280 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 281 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 282 */ array(7, 8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 283 */ array(8, 9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 284 */ array(9, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 285 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 286 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 287 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 288 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 289 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 290 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 291 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 292 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 293 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 294 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 295 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 296 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 297 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 298 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 299 */ array(23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 300 */ array(25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 301 */ array(26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 302 */ array(27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 303 */ array(28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 304 */ array(29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 305 */ array(30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 306 */ array(30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 307 */ array(30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 308 */ array(30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 309 */ array(30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 310 */ array(6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 50, 73, ),
        /* 311 */ array(6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 50, 73, ),
        /* 312 */ array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 50, 74, ),
        /* 313 */ array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 50, 91, ),
        /* 314 */ array(11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 50, ),
        /* 315 */ array(34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 316 */ array(34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 317 */ array(34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 318 */ array(34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, ),
        /* 319 */ array(40, 41, 42, 43, 44, 45, 47, ),
        /* 320 */ array(40, 41, 42, 43, 44, 45, 47, ),
        /* 321 */ array(43, 44, 45, 47, ),
        /* 322 */ array(43, 44, 45, 47, ),
        /* 323 */ array(43, 44, 45, 47, ),
        /* 324 */ array(43, 44, 45, 47, ),
        /* 325 */ array(43, 44, 45, 47, ),
        /* 326 */ array(59, 72, 75, ),
        /* 327 */ array(120, 121, 122, ),
        /* 328 */ array(59, 72, 75, ),
        /* 329 */ array(120, 121, 122, ),
        /* 330 */ array(76, 121, 122, ),
        /* 331 */ array(76, 121, 122, ),
        /* 332 */ array(6, 73, ),
        /* 333 */ array(59, 127, ),
        /* 334 */ array(6, 73, ),
        /* 335 */ array(59, 75, ),
        /* 336 */ array(6, 74, ),
        /* 337 */ array(6, 73, ),
        /* 338 */ array(6, 73, ),
        /* 339 */ array(59, 75, ),
        /* 340 */ array(6, 74, ),
        /* 341 */ array(6, 72, ),
        /* 342 */ array(72, 116, ),
        /* 343 */ array(6, 74, ),
        /* 344 */ array(6, 74, ),
        /* 345 */ array(6, 73, ),
        /* 346 */ array(59, 75, ),
        /* 347 */ array(6, 74, ),
        /* 348 */ array(29, 95, ),
        /* 349 */ array(6, 73, ),
        /* 350 */ array(59, 75, ),
        /* 351 */ array(59, 75, ),
        /* 352 */ array(49, 50, ),
        /* 353 */ array(29, 95, ),
        /* 354 */ array(72, ),
        /* 355 */ array(73, ),
        /* 356 */ array(11, ),
        /* 357 */ array(11, ),
        /* 358 */ array(109, ),
        /* 359 */ array(11, ),
        /* 360 */ array(73, ),
        /* 361 */ array(76, ),
        /* 362 */ array(94, ),
        /* 363 */ array(72, ),
        /* 364 */ array(72, ),
        /* 365 */ array(11, ),
        /* 366 */ array(73, ),
        /* 367 */ array(95, ),
        /* 368 */ array(75, ),
        /* 369 */ array(98, ),
        /* 370 */ array(95, ),
        /* 371 */ array(74, ),
        /* 372 */ array(74, ),
        /* 373 */ array(72, ),
        /* 374 */ array(72, ),
        /* 375 */ array(11, ),
        /* 376 */ array(98, ),
        /* 377 */ array(72, ),
        /* 378 */ array(11, ),
        /* 379 */ array(6, ),
        /* 380 */ array(115, ),
        /* 381 */ array(6, ),
        /* 382 */ array(11, ),
        /* 383 */ array(73, ),
        /* 384 */ array(97, ),
        /* 385 */ array(95, ),
        /* 386 */ array(24, ),
        /* 387 */ array(95, ),
        /* 388 */ array(115, ),
        /* 389 */ array(74, ),
        /* 390 */ array(74, ),
        /* 391 */ array(72, ),
        /* 392 */ array(98, ),
        /* 393 */ array(116, ),
        /* 394 */ array(11, ),
        /* 395 */ array(116, ),
        /* 396 */ array(74, ),
        /* 397 */ array(128, ),
        /* 398 */ array(73, ),
        /* 399 */ array(98, ),
        /* 400 */ array(74, ),
        /* 401 */ array(47, ),
        /* 402 */ array(73, ),
        /* 403 */ array(75, ),
        /* 404 */ array(72, ),
        /* 405 */ array(72, ),
        /* 406 */ array(11, ),
        /* 407 */ array(127, ),
        /* 408 */ array(74, ),
        /* 409 */ array(73, ),
        /* 410 */ array(73, ),
        /* 411 */ array(75, ),
        /* 412 */ array(73, ),
        /* 413 */ array(98, ),
        /* 414 */ array(72, ),
        /* 415 */ array(59, ),
        /* 416 */ array(76, ),
        /* 417 */ array(11, ),
        /* 418 */ array(72, ),
        /* 419 */ array(47, ),
        /* 420 */ array(73, ),
        /* 421 */ array(75, ),
        /* 422 */ array(73, ),
        /* 423 */ array(116, ),
        /* 424 */ array(74, ),
        /* 425 */ array(75, ),
        /* 426 */ array(74, ),
        /* 427 */ array(74, ),
        /* 428 */ array(72, ),
        /* 429 */ array(6, ),
        /* 430 */ array(72, ),
        /* 431 */ array(6, ),
        /* 432 */ array(116, ),
        /* 433 */ array(72, ),
        /* 434 */ array(98, ),
        /* 435 */ array(72, ),
        /* 436 */ array(98, ),
        /* 437 */ array(72, ),
        /* 438 */ array(91, ),
        /* 439 */ array(72, ),
        /* 440 */ array(75, ),
        /* 441 */ array(64, ),
        /* 442 */ array(47, ),
        /* 443 */ array(75, ),
        /* 444 */ array(116, ),
        /* 445 */ array(74, ),
        /* 446 */ array(78, ),
        /* 447 */ array(72, ),
        /* 448 */ array(72, ),
        /* 449 */ array(72, ),
        /* 450 */ array(72, ),
        /* 451 */ array(73, ),
        /* 452 */ array(11, ),
        /* 453 */ array(73, ),
        /* 454 */ array(11, ),
        /* 455 */ array(74, ),
        /* 456 */ array(98, ),
        /* 457 */ array(72, ),
        /* 458 */ array(72, ),
        /* 459 */ array(72, ),
        /* 460 */ array(73, ),
        /* 461 */ array(73, ),
        /* 462 */ array(72, ),
        /* 463 */ array(24, ),
        /* 464 */ array(74, ),
        /* 465 */ array(72, ),
        /* 466 */ array(128, ),
        /* 467 */ array(98, ),
        /* 468 */ array(73, ),
        /* 469 */ array(24, ),
        /* 470 */ array(47, ),
        /* 471 */ array(95, ),
        /* 472 */ array(76, ),
        /* 473 */ array(73, ),
        /* 474 */ array(6, ),
        /* 475 */ array(72, ),
        /* 476 */ array(72, ),
        /* 477 */ array(24, ),
        /* 478 */ array(99, ),
        /* 479 */ array(11, ),
        /* 480 */ array(128, ),
        /* 481 */ array(95, ),
        /* 482 */ array(127, ),
        /* 483 */ array(73, ),
        /* 484 */ array(75, ),
        /* 485 */ array(6, ),
        /* 486 */ array(99, ),
        /* 487 */ array(),
        /* 488 */ array(),
        /* 489 */ array(),
        /* 490 */ array(),
        /* 491 */ array(),
        /* 492 */ array(),
        /* 493 */ array(),
        /* 494 */ array(),
        /* 495 */ array(),
        /* 496 */ array(),
        /* 497 */ array(),
        /* 498 */ array(),
        /* 499 */ array(),
        /* 500 */ array(),
        /* 501 */ array(),
        /* 502 */ array(),
        /* 503 */ array(),
        /* 504 */ array(),
        /* 505 */ array(),
        /* 506 */ array(),
        /* 507 */ array(),
        /* 508 */ array(),
        /* 509 */ array(),
        /* 510 */ array(),
        /* 511 */ array(),
        /* 512 */ array(),
        /* 513 */ array(),
        /* 514 */ array(),
        /* 515 */ array(),
        /* 516 */ array(),
        /* 517 */ array(),
        /* 518 */ array(),
        /* 519 */ array(),
        /* 520 */ array(),
        /* 521 */ array(),
        /* 522 */ array(),
        /* 523 */ array(),
        /* 524 */ array(),
        /* 525 */ array(),
        /* 526 */ array(),
        /* 527 */ array(),
        /* 528 */ array(),
        /* 529 */ array(),
        /* 530 */ array(),
        /* 531 */ array(),
        /* 532 */ array(),
        /* 533 */ array(),
        /* 534 */ array(),
        /* 535 */ array(),
        /* 536 */ array(),
        /* 537 */ array(),
        /* 538 */ array(),
        /* 539 */ array(),
        /* 540 */ array(),
        /* 541 */ array(),
        /* 542 */ array(),
        /* 543 */ array(),
        /* 544 */ array(),
        /* 545 */ array(),
        /* 546 */ array(),
        /* 547 */ array(),
        /* 548 */ array(),
        /* 549 */ array(),
        /* 550 */ array(),
        /* 551 */ array(),
        /* 552 */ array(),
        /* 553 */ array(),
        /* 554 */ array(),
        /* 555 */ array(),
        /* 556 */ array(),
        /* 557 */ array(),
        /* 558 */ array(),
        /* 559 */ array(),
        /* 560 */ array(),
        /* 561 */ array(),
        /* 562 */ array(),
        /* 563 */ array(),
        /* 564 */ array(),
        /* 565 */ array(),
        /* 566 */ array(),
        /* 567 */ array(),
        /* 568 */ array(),
        /* 569 */ array(),
        /* 570 */ array(),
        /* 571 */ array(),
        /* 572 */ array(),
        /* 573 */ array(),
        /* 574 */ array(),
        /* 575 */ array(),
        /* 576 */ array(),
        /* 577 */ array(),
        /* 578 */ array(),
        /* 579 */ array(),
        /* 580 */ array(),
        /* 581 */ array(),
        /* 582 */ array(),
        /* 583 */ array(),
        /* 584 */ array(),
        /* 585 */ array(),
        /* 586 */ array(),
        /* 587 */ array(),
        /* 588 */ array(),
        /* 589 */ array(),
        /* 590 */ array(),
        /* 591 */ array(),
        /* 592 */ array(),
        /* 593 */ array(),
        /* 594 */ array(),
        /* 595 */ array(),
        /* 596 */ array(),
        /* 597 */ array(),
        /* 598 */ array(),
        /* 599 */ array(),
        /* 600 */ array(),
        /* 601 */ array(),
        /* 602 */ array(),
        /* 603 */ array(),
        /* 604 */ array(),
        /* 605 */ array(),
        /* 606 */ array(),
        /* 607 */ array(),
        /* 608 */ array(),
        /* 609 */ array(),
        /* 610 */ array(),
        /* 611 */ array(),
        /* 612 */ array(),
        /* 613 */ array(),
        /* 614 */ array(),
        /* 615 */ array(),
        /* 616 */ array(),
        /* 617 */ array(),
        /* 618 */ array(),
        /* 619 */ array(),
        /* 620 */ array(),
        /* 621 */ array(),
        /* 622 */ array(),
        /* 623 */ array(),
        /* 624 */ array(),
        /* 625 */ array(),
        /* 626 */ array(),
        /* 627 */ array(),
        /* 628 */ array(),
        /* 629 */ array(),
        /* 630 */ array(),
        /* 631 */ array(),
        /* 632 */ array(),
        /* 633 */ array(),
        /* 634 */ array(),
        /* 635 */ array(),
        /* 636 */ array(),
        /* 637 */ array(),
        /* 638 */ array(),
        /* 639 */ array(),
        /* 640 */ array(),
        /* 641 */ array(),
        /* 642 */ array(),
        /* 643 */ array(),
        /* 644 */ array(),
        /* 645 */ array(),
        /* 646 */ array(),
        /* 647 */ array(),
        /* 648 */ array(),
        /* 649 */ array(),
        /* 650 */ array(),
        /* 651 */ array(),
        /* 652 */ array(),
        /* 653 */ array(),
        /* 654 */ array(),
        /* 655 */ array(),
        /* 656 */ array(),
        /* 657 */ array(),
        /* 658 */ array(),
        /* 659 */ array(),
        /* 660 */ array(),
        /* 661 */ array(),
        /* 662 */ array(),
        /* 663 */ array(),
        /* 664 */ array(),
        /* 665 */ array(),
        /* 666 */ array(),
        /* 667 */ array(),
        /* 668 */ array(),
        /* 669 */ array(),
        /* 670 */ array(),
        /* 671 */ array(),
        /* 672 */ array(),
        /* 673 */ array(),
        /* 674 */ array(),
        /* 675 */ array(),
        /* 676 */ array(),
        /* 677 */ array(),
        /* 678 */ array(),
        /* 679 */ array(),
        /* 680 */ array(),
        /* 681 */ array(),
        /* 682 */ array(),
        /* 683 */ array(),
        /* 684 */ array(),
        /* 685 */ array(),
        /* 686 */ array(),
        /* 687 */ array(),
        /* 688 */ array(),
        /* 689 */ array(),
        /* 690 */ array(),
        /* 691 */ array(),
        /* 692 */ array(),
        /* 693 */ array(),
        /* 694 */ array(),
        /* 695 */ array(),
);
    static public $yy_default = array(
 /*     0 */   698,  869, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*    10 */  1037, 1037,  696,  868,  861,  872, 1037, 1037, 1037, 1037,
 /*    20 */  1037, 1037, 1037, 1037, 1037,  887,  887,  887,  887,  887,
 /*    30 */   970,  887, 1032, 1032, 1032, 1037,  954,  954, 1037, 1037,
 /*    40 */  1037, 1037, 1029, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*    50 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*    60 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*    70 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*    80 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*    90 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   100 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   110 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   120 */  1037, 1037, 1037, 1037, 1037,  968,  968, 1037, 1037,  968,
 /*   130 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   140 */  1037, 1037, 1037, 1037, 1037,  987, 1037, 1037, 1037, 1037,
 /*   150 */  1037, 1037, 1037,  913,  913,  838, 1037, 1037, 1037, 1037,
 /*   160 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,  837,
 /*   170 */  1037, 1037, 1037, 1037,  885,  885,  732, 1037, 1037, 1037,
 /*   180 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,  910, 1037,
 /*   190 */  1037,  871, 1037, 1037,  885, 1037,  873, 1037,  845,  830,
 /*   200 */   939, 1037,  939,  933, 1037,  862, 1037, 1028, 1036,  756,
 /*   210 */   845, 1028,  862,  752, 1030, 1036, 1037,  731, 1037, 1037,
 /*   220 */  1022, 1037,  755,  904,  737,  990,  990, 1025,  862,  737,
 /*   230 */   737,  737,  737,  737,  990,  737,  737,  867,  737,  936,
 /*   240 */   862,  737,  904,  737,  737,  990,  737,  737, 1037, 1037,
 /*   250 */  1037,  974, 1037, 1037, 1037, 1037,  972, 1037, 1037, 1037,
 /*   260 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   270 */  1037,  923,  953,  973, 1034,  924,  971, 1037, 1000, 1001,
 /*   280 */  1003, 1033, 1004,  785,  787,  786,  769,  827,  774,  773,
 /*   290 */   775,  768,  772,  770,  762,  763,  776,  771,  777,  778,
 /*   300 */   813,  783,  784,  788,  790,  806,  789,  803,  805,  804,
 /*   310 */   930,  930,  930,  930,  930,  807,  810,  809,  808,  798,
 /*   320 */   797,  791,  799,  800,  793,  792,  945, 1037,  946, 1037,
 /*   330 */  1037, 1037, 1037,  991, 1037,  940, 1037, 1037,  761,  941,
 /*   340 */  1037, 1037, 1013, 1037, 1037, 1037,  946, 1037, 1037,  761,
 /*   350 */   955,  945, 1037, 1037, 1037, 1037,  899,  919, 1037, 1037,
 /*   360 */  1037, 1037, 1037, 1037, 1037,  881, 1037, 1037, 1037, 1037,
 /*   370 */  1037, 1037,  761, 1037, 1037,  880, 1037, 1037,  876,  836,
 /*   380 */   842,  874,  901, 1037, 1037, 1037, 1037, 1037,  840, 1037,
 /*   390 */  1037, 1037, 1037,  833,  877, 1020, 1037, 1037, 1037, 1037,
 /*   400 */  1037,  795, 1037, 1037, 1037, 1037, 1037,  934, 1037, 1037,
 /*   410 */  1037, 1037, 1037, 1037, 1037, 1014, 1037, 1037, 1037,  794,
 /*   420 */  1037,  963, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1031,
 /*   430 */   942,  886, 1037, 1037, 1037, 1008, 1037, 1037,  761, 1037,
 /*   440 */   962, 1037,  801, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   450 */  1037, 1037,  917, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   460 */  1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
 /*   470 */   796, 1037, 1037, 1037,  757, 1007, 1037, 1037, 1037, 1037,
 /*   480 */  1037, 1037, 1023, 1037, 1037,  754, 1037,  905,  918,  746,
 /*   490 */   903, 1008,  855,  854,  850,  851,  870,  853, 1035,  751,
 /*   500 */   733,  852,  866,  844,  859,  848,  849,  864,  858,  857,
 /*   510 */   846,  865,  847,  726,  909,  753,  878,  907,  908,  706,
 /*   520 */   879,  884,  906,  921,  883,  882,  747,  915,  758,  748,
 /*   530 */   749,  750,  759,  922,  916,  911,  914,  920,  764,  931,
 /*   540 */   890,  947,  999, 1002, 1016, 1015, 1014,  944,  943,  985,
 /*   550 */   984,  983,  986,  950,  831,  952,  951,  988,  989, 1006,
 /*   560 */   998, 1010, 1005,  893,  977,  996, 1011, 1009, 1012,  993,
 /*   570 */   997,  992,  994,  995, 1017, 1019, 1018,  982,  981,  779,
 /*   580 */   767,  766,  781,  780,  937,  935,  932,  761,  760,  700,
 /*   590 */   699,  697,  701,  702,  705,  704,  703,  782,  811,  829,
 /*   600 */   822,  821,  823,  824,  980,  979,  826,  820,  819,  814,
 /*   610 */   812,  802,  815,  816,  818,  817,  825,  969,  900,  841,
 /*   620 */   839,  902,  720,  723,  722,  721,  835,  834,  898,  897,
 /*   630 */   896,  930,  895,  843,  832,  719,  928,  929,  738,  736,
 /*   640 */   735,  739,  740,  744,  743,  741,  730,  734,  927,  926,
 /*   650 */   724,  925,  725,  729,  728,  727,  894,  718,  961,  960,
 /*   660 */   959, 1024, 1026, 1027,  938,  948,  956,  958,  978,  976,
 /*   670 */   975,  828,  949,  957, 1021,  942,  765,  964,  712,  711,
 /*   680 */   863,  713,  714,  717,  716,  715,  860,  856,  965,  967,
 /*   690 */   966,  707,  708,  710,  709,  745,
);
/* The next thing included is series of defines which control
** various aspects of the generated parser.
**    self::YYNOCODE      is a number which corresponds
**                        to no legal terminal or nonterminal number.  This
**                        number is used to fill in empty slots of the hash 
**                        table.
**    self::YYFALLBACK    If defined, this indicates that one or more tokens
**                        have fall-back values which should be used if the
**                        original value of the token will not parse.
**    self::YYSTACKDEPTH  is the maximum depth of the parser's stack.
**    self::YYNSTATE      the combined number of states.
**    self::YYNRULE       the number of rules in the grammar
**    self::YYERRORSYMBOL is the code number of the error symbol.  If not
**                        defined, then do no error processing.
*/
    const YYNOCODE = 246;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 696;
    const YYNRULE = 341;
    const YYERRORSYMBOL = 141;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    /** The next table maps tokens into fallback tokens.  If a construct
     * like the following:
     * 
     *      %fallback ID X Y Z.
     *
     * appears in the grammer, then ID becomes a fallback token for X, Y,
     * and Z.  Whenever one of the tokens X, Y, or Z is input to the parser
     * but it does not parse, the type of the token is changed to ID and
     * the parse is retried before an error is thrown.
     */
    static public $yyFallback = array(
    );
    /**
     * Turn parser tracing on by giving a stream to which to write the trace
     * and a prompt to preface each trace message.  Tracing is turned off
     * by making either argument NULL 
     *
     * Inputs:
     * 
     * - A stream resource to which trace output should be written.
     *   If NULL, then tracing is turned off.
     * - A prefix string written at the beginning of every
     *   line of trace output.  If NULL, then tracing is
     *   turned off.
     *
     * Outputs:
     * 
     * - None.
     * @param resource
     * @param string
     */
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    /**
     * Output debug information to output (php://output stream)
     */
    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '';
    }

    /**
     * @var resource|0
     */
    static public $yyTraceFILE;
    /**
     * String to prepend to debug output
     * @var string|0
     */
    static public $yyTracePrompt;
    /**
     * @var int
     */
    public $yyidx = -1;                    /* Index of top element in stack */
    /**
     * @var int
     */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    /**
     * @var array
     */
    public $yystack = array();  /* The parser's stack */

    /**
     * For tracing shifts, the names of all terminals and nonterminals
     * are required.  The following table supplies these names
     * @var array
     */
    static public $yyTokenName = array( 
  '$',             'T_INCLUDE',     'T_INCLUDE_ONCE',  'T_EVAL',      
  'T_REQUIRE',     'T_REQUIRE_ONCE',  'T_COMMA',       'T_LOGICAL_OR',
  'T_LOGICAL_XOR',  'T_LOGICAL_AND',  'T_PRINT',       'T_EQUAL',     
  'T_T_PLUS_EQUAL',  'T_T_MINUS_EQUAL',  'T_MUL_EQUAL',   'T_DIV_EQUAL', 
  'T_CONCAT_EQUAL',  'T_MOD_EQUAL',   'T_AND_EQUAL',   'T_OR_EQUAL',  
  'T_XOR_EQUAL',   'T_SL_EQUAL',    'T_SR_EQUAL',    'T_QUESTION',  
  'T_COLON',       'T_BOOLEAN_OR',  'T_BOOLEAN_AND',  'T_PIPE',      
  'T_CIRCUMFLEX',  'T_AMPERSAND',   'T_IS_EQUAL',    'T_IS_NOT_EQUAL',
  'T_IS_IDENTICAL',  'T_IS_NOT_IDENTICAL',  'T_SMALLER',     'T_IS_SMALLER_OR_EQUAL',
  'T_GREATER',     'T_IS_GREATER_OR_EQUAL',  'T_SL',          'T_SR',        
  'T_PLUS',        'T_MINUS',       'T_DOT',         'T_STAR',      
  'T_SLASH',       'T_PERCENT',     'T_EXCLAMATION',  'T_INSTANCEOF',
  'T_TILDE',       'T_INC',         'T_DEC',         'T_INT_CAST',  
  'T_DOUBLE_CAST',  'T_STRING_CAST',  'T_ARRAY_CAST',  'T_OBJECT_CAST',
  'T_BOOL_CAST',   'T_UNSET_CAST',  'T_AT',          'T_SQUARE_OPEN',
  'T_NEW',         'T_CLONE',       'T_ELSEIF',      'T_ELSE',      
  'T_ENDIF',       'T_STATIC',      'T_ABSTRACT',    'T_FINAL',     
  'T_PRIVATE',     'T_PROTECTED',   'T_PUBLIC',      'T_HALT_COMPILER',
  'T_PAREN_OPEN',  'T_PAREN_CLOSE',  'T_SEMI_COLON',  'T_CURLY_OPEN',
  'T_CURLY_CLOSE',  'T_IF',          'T_WHILE',       'T_DO',        
  'T_FOR',         'T_SWITCH',      'T_BREAK',       'T_CONTINUE',  
  'T_RETURN',      'T_GLOBAL',      'T_ECHO',        'T_INLINE_HTML',
  'T_USE',         'T_UNSET',       'T_FOREACH',     'T_AS',        
  'T_DECLARE',     'T_TRY',         'T_CATCH',       'T_VARIABLE',  
  'T_THROW',       'T_FUNCTION',    'T_STRING',      'T_CLASS',     
  'T_EXTENDS',     'T_INTERFACE',   'T_IMPLEMENTS',  'T_LIST',      
  'T_EXIT',        'T_ARRAY',       'T_BACKQUOTE',   'T_LNUMBER',   
  'T_DNUMBER',     'T_CONSTANT_ENCAPSED_STRING',  'T_LINE',        'T_FILE',      
  'T_CLASS_C',     'T_METHOD_C',    'T_FUNC_C',      'T_DOUBLE_ARROW',
  'T_PAAMAYIM_NEKUT_DOTAYIM',  'T_ENDFOR',      'T_ENDFOREACH',  'T_ENDDECLARE',
  'T_ENDSWITCH',   'T_CASE',        'T_DEFAULT',     'T_ENDWHILE',  
  'T_DOLLAR',      'T_VAR',         'T_CONST',       'T_OBJECT_OPERATOR',
  'T_SQUARE_CLOSE',  'T_NUM_STRING',  'T_ENCAPSED_AND_WHITESPACE',  'T_CHARACTER', 
  'T_BAD_CHARACTER',  'T_T_DOLLAR_OPEN_CURLY_BRACES',  'T_STRING_VARNAME',  'T_ISSET',     
  'T_EMPTY',       'T_DQUOTE',      'T_SQUOTE',      'T_START_HEREDOC',
  'T_END_HEREDOC',  'error',         'start',         'top_statement_list',
  'top_statement',  'statement',     'function_declaration_statement',  'class_declaration_statement',
  'unticked_statement',  'inner_statement_list',  'expr',          'elseif_list', 
  'else_single',   'new_elseif_list',  'new_else_single',  'while_statement',
  'for_expr',      'for_statement',  'switch_case_list',  'expr_without_variable',
  'variable',      'global_var_list',  'static_var_list',  'echo_expr_list',
  'use_filename',  'unset_variables',  'foreach_variable',  'foreach_optional_arg',
  'foreach_statement',  'w_variable',    'declare_list',  'declare_statement',
  'fully_qualified_class_name',  'additional_catches',  'non_empty_additional_catches',  'additional_catch',
  'inner_statement',  'unticked_function_declaration_statement',  'unticked_class_declaration_statement',  'is_reference',
  'parameter_list',  'class_entry_type',  'extends_from',  'implements_list',
  'class_statement_list',  'interface_entry',  'interface_extends_list',  'interface_list',
  'r_variable',    'assignment_list',  'class_name_reference',  'ctor_arguments',
  'rw_variable',   'internal_functions_in_yacc',  'exit_expr',     'scalar',      
  'array_pair_list',  'encaps_list',   'common_scalar',  'static_scalar',
  'static_array_pair_list',  'static_class_constant',  'non_empty_static_array_pair_list',  'case_list',   
  'case_separator',  'non_empty_parameter_list',  'optional_class_type',  'function_call_parameter_list',
  'non_empty_function_call_parameter_list',  'global_var',    'class_statement',  'variable_modifiers',
  'class_variable_declaration',  'class_constant_declaration',  'method_modifiers',  'method_body', 
  'non_empty_member_modifiers',  'member_modifier',  'unset_variable',  'base_variable_with_function_calls',
  'object_property',  'method_or_not',  'variable_properties',  'variable_property',
  'variable_without_objects',  'reference_variable',  'simple_indirect_reference',  'static_member',
  'base_variable',  'function_call',  'dim_offset',    'compound_variable',
  'object_dim_list',  'variable_name',  'assignment_list_element',  'non_empty_array_pair_list',
  'possible_comma',  'encaps_var',    'encaps_var_offset',  'isset_variables',
  'class_constant',  'dynamic_class_name_reference',  'dynamic_class_name_variable_properties',  'dynamic_class_name_variable_property',
  'non_empty_for_expr',
    );

    /**
     * For tracing reduce actions, the names of all rules are required.
     * @var array
     */
    static public $yyRuleName = array(
 /*   0 */ "start ::= top_statement_list",
 /*   1 */ "top_statement_list ::= top_statement_list top_statement",
 /*   2 */ "top_statement_list ::=",
 /*   3 */ "top_statement ::= statement",
 /*   4 */ "top_statement ::= function_declaration_statement",
 /*   5 */ "top_statement ::= class_declaration_statement",
 /*   6 */ "top_statement ::= T_HALT_COMPILER T_PAREN_OPEN T_PAREN_CLOSE T_SEMI_COLON",
 /*   7 */ "statement ::= unticked_statement",
 /*   8 */ "unticked_statement ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE",
 /*   9 */ "unticked_statement ::= T_IF T_PAREN_OPEN expr T_PAREN_CLOSE statement elseif_list else_single",
 /*  10 */ "unticked_statement ::= T_IF T_PAREN_OPEN expr T_PAREN_CLOSE T_COLON inner_statement_list new_elseif_list new_else_single T_ENDIF T_COLON",
 /*  11 */ "unticked_statement ::= T_WHILE T_PAREN_OPEN expr T_PAREN_CLOSE while_statement",
 /*  12 */ "unticked_statement ::= T_DO statement T_WHILE T_PAREN_OPEN expr T_PAREN_CLOSE T_SEMI_COLON",
 /*  13 */ "unticked_statement ::= T_FOR T_PAREN_OPEN for_expr T_COLON for_expr T_SEMI_COLON for_expr T_PAREN_CLOSE for_statement",
 /*  14 */ "unticked_statement ::= T_SWITCH T_PAREN_OPEN expr T_PAREN_CLOSE switch_case_list",
 /*  15 */ "unticked_statement ::= T_BREAK T_SEMI_COLON",
 /*  16 */ "unticked_statement ::= T_BREAK expr T_SEMI_COLON",
 /*  17 */ "unticked_statement ::= T_CONTINUE T_SEMI_COLON",
 /*  18 */ "unticked_statement ::= T_CONTINUE expr T_SEMI_COLON",
 /*  19 */ "unticked_statement ::= T_RETURN T_SEMI_COLON",
 /*  20 */ "unticked_statement ::= T_RETURN expr_without_variable T_SEMI_COLON",
 /*  21 */ "unticked_statement ::= T_RETURN variable T_SEMI_COLON",
 /*  22 */ "unticked_statement ::= T_GLOBAL global_var_list T_SEMI_COLON",
 /*  23 */ "unticked_statement ::= T_STATIC static_var_list T_SEMI_COLON",
 /*  24 */ "unticked_statement ::= T_ECHO echo_expr_list T_SEMI_COLON",
 /*  25 */ "unticked_statement ::= T_INLINE_HTML",
 /*  26 */ "unticked_statement ::= expr T_SEMI_COLON",
 /*  27 */ "unticked_statement ::= T_USE use_filename T_SEMI_COLON",
 /*  28 */ "unticked_statement ::= T_UNSET T_PAREN_OPEN unset_variables T_PAREN_OPEN T_SEMI_COLON",
 /*  29 */ "unticked_statement ::= T_FOREACH T_PAREN_OPEN variable T_AS foreach_variable foreach_optional_arg T_PAREN_CLOSE foreach_statement",
 /*  30 */ "unticked_statement ::= T_FOREACH T_PAREN_OPEN expr_without_variable T_AS w_variable foreach_optional_arg T_PAREN_CLOSE foreach_statement",
 /*  31 */ "unticked_statement ::= T_DECLARE T_PAREN_OPEN declare_list T_PAREN_CLOSE declare_statement",
 /*  32 */ "unticked_statement ::= T_SEMI_COLON",
 /*  33 */ "unticked_statement ::= T_TRY T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE T_CATCH T_PAREN_OPEN fully_qualified_class_name T_VARIABLE T_PAREN_CLOSE T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE additional_catches",
 /*  34 */ "unticked_statement ::= T_THROW expr T_SEMI_COLON",
 /*  35 */ "additional_catches ::= non_empty_additional_catches",
 /*  36 */ "additional_catches ::=",
 /*  37 */ "non_empty_additional_catches ::= additional_catch",
 /*  38 */ "non_empty_additional_catches ::= non_empty_additional_catches additional_catch",
 /*  39 */ "additional_catch ::= T_CATCH T_PAREN_OPEN fully_qualified_class_name T_VARIABLE T_PAREN_CLOSE T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE",
 /*  40 */ "inner_statement_list ::= inner_statement_list inner_statement",
 /*  41 */ "inner_statement_list ::=",
 /*  42 */ "inner_statement ::= statement",
 /*  43 */ "inner_statement ::= function_declaration_statement",
 /*  44 */ "inner_statement ::= class_declaration_statement",
 /*  45 */ "inner_statement ::= T_HALT_COMPILER T_PAREN_OPEN T_PAREN_CLOSE T_SEMI_COLON",
 /*  46 */ "statement ::= unticked_statement",
 /*  47 */ "function_declaration_statement ::= unticked_function_declaration_statement",
 /*  48 */ "class_declaration_statement ::= unticked_class_declaration_statement",
 /*  49 */ "unticked_function_declaration_statement ::= T_FUNCTION is_reference T_STRING T_PAREN_OPEN parameter_list T_PAREN_CLOSE T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE",
 /*  50 */ "unticked_class_declaration_statement ::= class_entry_type T_STRING extends_from implements_list T_CURLY_OPEN class_statement_list T_CURLY_CLOSE",
 /*  51 */ "unticked_class_declaration_statement ::= interface_entry T_STRING interface_extends_list T_CURLY_OPEN class_statement_list T_CURLY_CLOSE",
 /*  52 */ "class_entry_type ::= T_CLASS",
 /*  53 */ "class_entry_type ::= T_ABSTRACT T_CLASS",
 /*  54 */ "class_entry_type ::= T_FINAL T_CLASS",
 /*  55 */ "extends_from ::= T_EXTENDS fully_qualified_class_name",
 /*  56 */ "extends_from ::=",
 /*  57 */ "interface_entry ::= T_INTERFACE",
 /*  58 */ "interface_extends_list ::= T_EXTENDS interface_list",
 /*  59 */ "interface_extends_list ::=",
 /*  60 */ "implements_list ::=",
 /*  61 */ "implements_list ::= T_IMPLEMENTS interface_list",
 /*  62 */ "interface_list ::= fully_qualified_class_name",
 /*  63 */ "interface_list ::= interface_list T_COMMA fully_qualified_class_name",
 /*  64 */ "expr ::= r_variable",
 /*  65 */ "expr ::= expr_without_variable",
 /*  66 */ "expr_without_variable ::= T_LIST T_PAREN_OPEN assignment_list T_PAREN_CLOSE T_EQUAL expr",
 /*  67 */ "expr_without_variable ::= variable T_EQUAL expr",
 /*  68 */ "expr_without_variable ::= variable T_EQUAL T_AMPERSAND variable",
 /*  69 */ "expr_without_variable ::= variable T_EQUAL T_AMPERSAND T_NEW class_name_reference ctor_arguments",
 /*  70 */ "expr_without_variable ::= T_NEW class_name_reference ctor_arguments",
 /*  71 */ "expr_without_variable ::= T_CLONE expr",
 /*  72 */ "expr_without_variable ::= variable T_T_PLUS_EQUAL expr",
 /*  73 */ "expr_without_variable ::= variable T_T_MINUS_EQUAL expr",
 /*  74 */ "expr_without_variable ::= variable T_MUL_EQUAL expr",
 /*  75 */ "expr_without_variable ::= variable T_DIV_EQUAL expr",
 /*  76 */ "expr_without_variable ::= variable T_CONCAT_EQUAL expr",
 /*  77 */ "expr_without_variable ::= variable T_MOD_EQUAL expr",
 /*  78 */ "expr_without_variable ::= variable T_AND_EQUAL expr",
 /*  79 */ "expr_without_variable ::= variable T_OR_EQUAL expr",
 /*  80 */ "expr_without_variable ::= variable T_XOR_EQUAL expr",
 /*  81 */ "expr_without_variable ::= variable T_SL_EQUAL expr",
 /*  82 */ "expr_without_variable ::= variable T_SR_EQUAL expr",
 /*  83 */ "expr_without_variable ::= rw_variable T_INC",
 /*  84 */ "expr_without_variable ::= T_INC rw_variable",
 /*  85 */ "expr_without_variable ::= rw_variable T_DEC",
 /*  86 */ "expr_without_variable ::= T_DEC rw_variable",
 /*  87 */ "expr_without_variable ::= expr T_BOOLEAN_OR expr",
 /*  88 */ "expr_without_variable ::= expr T_BOOLEAN_AND expr",
 /*  89 */ "expr_without_variable ::= expr T_LOGICAL_OR expr",
 /*  90 */ "expr_without_variable ::= expr T_LOGICAL_AND expr",
 /*  91 */ "expr_without_variable ::= expr T_LOGICAL_XOR expr",
 /*  92 */ "expr_without_variable ::= expr T_PIPE expr",
 /*  93 */ "expr_without_variable ::= expr T_AMPERSAND expr",
 /*  94 */ "expr_without_variable ::= expr T_CIRCUMFLEX expr",
 /*  95 */ "expr_without_variable ::= expr T_DOT expr",
 /*  96 */ "expr_without_variable ::= expr T_PLUS expr",
 /*  97 */ "expr_without_variable ::= expr T_MINUS expr",
 /*  98 */ "expr_without_variable ::= expr T_STAR expr",
 /*  99 */ "expr_without_variable ::= expr T_SLASH expr",
 /* 100 */ "expr_without_variable ::= expr T_PERCENT expr",
 /* 101 */ "expr_without_variable ::= expr T_SL expr",
 /* 102 */ "expr_without_variable ::= expr T_SR expr",
 /* 103 */ "expr_without_variable ::= T_PLUS expr",
 /* 104 */ "expr_without_variable ::= T_MINUS expr",
 /* 105 */ "expr_without_variable ::= T_EXCLAMATION expr",
 /* 106 */ "expr_without_variable ::= T_TILDE expr",
 /* 107 */ "expr_without_variable ::= expr T_IS_IDENTICAL expr",
 /* 108 */ "expr_without_variable ::= expr T_IS_NOT_IDENTICAL expr",
 /* 109 */ "expr_without_variable ::= expr T_IS_EQUAL expr",
 /* 110 */ "expr_without_variable ::= expr T_IS_NOT_EQUAL expr",
 /* 111 */ "expr_without_variable ::= expr T_SMALLER expr",
 /* 112 */ "expr_without_variable ::= expr T_IS_SMALLER_OR_EQUAL expr",
 /* 113 */ "expr_without_variable ::= expr T_GREATER expr",
 /* 114 */ "expr_without_variable ::= expr T_IS_GREATER_OR_EQUAL expr",
 /* 115 */ "expr_without_variable ::= expr T_INSTANCEOF class_name_reference",
 /* 116 */ "expr_without_variable ::= T_PAREN_OPEN expr T_PAREN_CLOSE",
 /* 117 */ "expr_without_variable ::= expr T_QUESTION expr T_COLON expr",
 /* 118 */ "expr_without_variable ::= internal_functions_in_yacc",
 /* 119 */ "expr_without_variable ::= T_INT_CAST expr",
 /* 120 */ "expr_without_variable ::= T_DOUBLE_CAST expr",
 /* 121 */ "expr_without_variable ::= T_STRING_CAST expr",
 /* 122 */ "expr_without_variable ::= T_ARRAY_CAST expr",
 /* 123 */ "expr_without_variable ::= T_OBJECT_CAST expr",
 /* 124 */ "expr_without_variable ::= T_BOOL_CAST expr",
 /* 125 */ "expr_without_variable ::= T_UNSET_CAST expr",
 /* 126 */ "expr_without_variable ::= T_EXIT exit_expr",
 /* 127 */ "expr_without_variable ::= T_AT expr",
 /* 128 */ "expr_without_variable ::= scalar",
 /* 129 */ "expr_without_variable ::= T_ARRAY T_PAREN_OPEN array_pair_list T_PAREN_CLOSE",
 /* 130 */ "expr_without_variable ::= T_BACKQUOTE encaps_list T_BACKQUOTE",
 /* 131 */ "expr_without_variable ::= T_PRINT expr",
 /* 132 */ "exit_expr ::= T_PAREN_OPEN T_PAREN_CLOSE",
 /* 133 */ "exit_expr ::= T_PAREN_OPEN expr T_PAREN_CLOSE",
 /* 134 */ "exit_expr ::=",
 /* 135 */ "common_scalar ::= T_LNUMBER|T_DNUMBER|T_CONSTANT_ENCAPSED_STRING|T_LINE|T_FILE|T_CLASS_C|T_METHOD_C|T_FUNC_C",
 /* 136 */ "static_scalar ::= common_scalar",
 /* 137 */ "static_scalar ::= T_STRING",
 /* 138 */ "static_scalar ::= T_ARRAY T_PAREN_OPEN static_array_pair_list T_PAREN_CLOSE",
 /* 139 */ "static_scalar ::= static_class_constant",
 /* 140 */ "static_array_pair_list ::= non_empty_static_array_pair_list",
 /* 141 */ "static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA",
 /* 142 */ "static_array_pair_list ::=",
 /* 143 */ "non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar T_DOUBLE_ARROW static_scalar",
 /* 144 */ "non_empty_static_array_pair_list ::= non_empty_static_array_pair_list T_COMMA static_scalar",
 /* 145 */ "non_empty_static_array_pair_list ::= static_scalar T_DOUBLE_ARROW static_scalar",
 /* 146 */ "non_empty_static_array_pair_list ::= static_scalar",
 /* 147 */ "static_class_constant ::= T_STRING T_PAAMAYIM_NEKUT_DOTAYIM T_STRING",
 /* 148 */ "foreach_optional_arg ::= T_DOUBLE_ARROW foreach_variable",
 /* 149 */ "foreach_optional_arg ::=",
 /* 150 */ "foreach_variable ::= w_variable",
 /* 151 */ "foreach_variable ::= T_AMPERSAND w_variable",
 /* 152 */ "for_statement ::= statement",
 /* 153 */ "for_statement ::= T_COLON inner_statement_list T_ENDFOR T_SEMI_COLON",
 /* 154 */ "foreach_statement ::= statement",
 /* 155 */ "foreach_statement ::= T_COLON inner_statement_list T_ENDFOREACH T_SEMI_COLON",
 /* 156 */ "declare_statement ::= statement",
 /* 157 */ "declare_statement ::= T_COLON inner_statement_list T_ENDDECLARE T_SEMI_COLON",
 /* 158 */ "declare_list ::= T_STRING T_EQUAL static_scalar",
 /* 159 */ "declare_list ::= declare_list T_COMMA T_STRING T_EQUAL static_scalar",
 /* 160 */ "switch_case_list ::= T_CURLY_OPEN case_list T_CURLY_CLOSE",
 /* 161 */ "switch_case_list ::= T_CURLY_OPEN T_SEMI_COLON case_list T_CURLY_CLOSE",
 /* 162 */ "switch_case_list ::= T_COLON case_list T_ENDSWITCH T_SEMI_COLON",
 /* 163 */ "switch_case_list ::= T_COLON T_SEMI_COLON case_list T_ENDSWITCH T_SEMI_COLON",
 /* 164 */ "case_list ::= case_list T_CASE expr case_separator",
 /* 165 */ "case_list ::= case_list T_DEFAULT case_separator inner_statement_list",
 /* 166 */ "case_list ::=",
 /* 167 */ "case_separator ::= T_COLON|T_SEMI_COLON",
 /* 168 */ "while_statement ::= statement",
 /* 169 */ "while_statement ::= T_COLON inner_statement_list T_ENDWHILE T_SEMI_COLON",
 /* 170 */ "elseif_list ::= elseif_list T_ELSEIF T_PAREN_OPEN expr T_PAREN_CLOSE statement",
 /* 171 */ "elseif_list ::=",
 /* 172 */ "new_elseif_list ::= new_elseif_list T_ELSEIF T_PAREN_OPEN expr T_PAREN_CLOSE T_COLON inner_statement_list",
 /* 173 */ "new_elseif_list ::=",
 /* 174 */ "else_single ::= T_ELSE statement",
 /* 175 */ "else_single ::=",
 /* 176 */ "new_else_single ::= T_ELSE T_COLON inner_statement_list",
 /* 177 */ "new_else_single ::=",
 /* 178 */ "parameter_list ::= non_empty_parameter_list",
 /* 179 */ "parameter_list ::=",
 /* 180 */ "non_empty_parameter_list ::= optional_class_type T_VARIABLE",
 /* 181 */ "non_empty_parameter_list ::= optional_class_type T_AMPERSAND T_VARIABLE",
 /* 182 */ "non_empty_parameter_list ::= optional_class_type T_AMPERSAND T_VARIABLE T_EQUAL static_scalar",
 /* 183 */ "non_empty_parameter_list ::= optional_class_type T_VARIABLE T_EQUAL static_scalar",
 /* 184 */ "non_empty_parameter_list ::= non_empty_parameter_list T_COMMA optional_class_type T_VARIABLE",
 /* 185 */ "non_empty_parameter_list ::= non_empty_parameter_list T_COMMA optional_class_type T_AMPERSAND T_VARIABLE",
 /* 186 */ "non_empty_parameter_list ::= non_empty_parameter_list T_COMMA optional_class_type T_AMPERSAND T_VARIABLE T_EQUAL static_scalar",
 /* 187 */ "non_empty_parameter_list ::= non_empty_parameter_list T_COMMA optional_class_type T_VARIABLE T_EQUAL static_scalar",
 /* 188 */ "optional_class_type ::= T_STRING|T_ARRAY",
 /* 189 */ "optional_class_type ::=",
 /* 190 */ "function_call_parameter_list ::= non_empty_function_call_parameter_list",
 /* 191 */ "function_call_parameter_list ::=",
 /* 192 */ "non_empty_function_call_parameter_list ::= expr_without_variable",
 /* 193 */ "non_empty_function_call_parameter_list ::= variable",
 /* 194 */ "non_empty_function_call_parameter_list ::= T_AMPERSAND w_variable",
 /* 195 */ "non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA expr_without_variable",
 /* 196 */ "non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA variable",
 /* 197 */ "non_empty_function_call_parameter_list ::= non_empty_function_call_parameter_list T_COMMA T_AMPERSAND w_variable",
 /* 198 */ "global_var_list ::= global_var_list T_COMMA global_var",
 /* 199 */ "global_var_list ::= global_var",
 /* 200 */ "global_var ::= T_VARIABLE",
 /* 201 */ "global_var ::= T_DOLLAR r_variable",
 /* 202 */ "global_var ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE",
 /* 203 */ "static_var_list ::= static_var_list T_COMMA T_VARIABLE",
 /* 204 */ "static_var_list ::= static_var_list T_COMMA T_VARIABLE T_EQUAL static_scalar",
 /* 205 */ "static_var_list ::= T_VARIABLE",
 /* 206 */ "static_var_list ::= T_VARIABLE T_EQUAL static_scalar",
 /* 207 */ "class_statement_list ::= class_statement_list class_statement",
 /* 208 */ "class_statement_list ::=",
 /* 209 */ "class_statement ::= variable_modifiers class_variable_declaration T_SEMI_COLON",
 /* 210 */ "class_statement ::= class_constant_declaration T_SEMI_COLON",
 /* 211 */ "class_statement ::= method_modifiers T_FUNCTION is_reference T_STRING T_PAREN_OPEN parameter_list T_PAREN_CLOSE method_body",
 /* 212 */ "method_body ::= T_SEMI_COLON",
 /* 213 */ "method_body ::= T_CURLY_OPEN inner_statement_list T_CURLY_CLOSE",
 /* 214 */ "variable_modifiers ::= non_empty_member_modifiers",
 /* 215 */ "variable_modifiers ::= T_VAR",
 /* 216 */ "method_modifiers ::= non_empty_member_modifiers",
 /* 217 */ "method_modifiers ::=",
 /* 218 */ "non_empty_member_modifiers ::= member_modifier",
 /* 219 */ "non_empty_member_modifiers ::= non_empty_member_modifiers member_modifier",
 /* 220 */ "member_modifier ::= T_PUBLIC|T_PROTECTED|T_PRIVATE|T_STATIC|T_ABSTRACT|T_FINAL",
 /* 221 */ "class_variable_declaration ::= class_variable_declaration T_COMMA T_VARIABLE",
 /* 222 */ "class_variable_declaration ::= class_variable_declaration T_COMMA T_VARIABLE T_EQUAL static_scalar",
 /* 223 */ "class_variable_declaration ::= T_VARIABLE",
 /* 224 */ "class_variable_declaration ::= T_VARIABLE T_EQUAL static_scalar",
 /* 225 */ "class_constant_declaration ::= class_constant_declaration T_COMMA T_STRING T_EQUAL static_scalar",
 /* 226 */ "class_constant_declaration ::= T_CONST T_STRING T_EQUAL static_scalar",
 /* 227 */ "echo_expr_list ::= echo_expr_list T_COMMA expr",
 /* 228 */ "echo_expr_list ::= expr",
 /* 229 */ "unset_variables ::= unset_variable",
 /* 230 */ "unset_variables ::= unset_variables T_COMMA unset_variable",
 /* 231 */ "unset_variable ::= variable",
 /* 232 */ "use_filename ::= T_CONSTANT_ENCAPSED_STRING",
 /* 233 */ "use_filename ::= T_CURLY_OPEN T_CONSTANT_ENCAPSED_STRING T_CURLY_CLOSE",
 /* 234 */ "r_variable ::= variable",
 /* 235 */ "w_variable ::= variable",
 /* 236 */ "rw_variable ::= variable",
 /* 237 */ "variable ::= base_variable_with_function_calls T_OBJECT_OPERATOR object_property method_or_not variable_properties",
 /* 238 */ "variable ::= base_variable_with_function_calls",
 /* 239 */ "variable_properties ::= variable_properties variable_property",
 /* 240 */ "variable_properties ::=",
 /* 241 */ "variable_property ::= T_OBJECT_OPERATOR object_property method_or_not",
 /* 242 */ "method_or_not ::= T_PAREN_OPEN function_call_parameter_list T_PAREN_CLOSE",
 /* 243 */ "method_or_not ::=",
 /* 244 */ "variable_without_objects ::= reference_variable",
 /* 245 */ "variable_without_objects ::= simple_indirect_reference reference_variable",
 /* 246 */ "static_member ::= fully_qualified_class_name T_PAAMAYIM_NEKUT_DOTAYIM variable_without_objects",
 /* 247 */ "base_variable_with_function_calls ::= base_variable",
 /* 248 */ "base_variable_with_function_calls ::= function_call",
 /* 249 */ "base_variable ::= reference_variable",
 /* 250 */ "base_variable ::= simple_indirect_reference reference_variable",
 /* 251 */ "base_variable ::= static_member",
 /* 252 */ "reference_variable ::= reference_variable T_SQUARE_OPEN dim_offset T_SQUARE_CLOSE",
 /* 253 */ "reference_variable ::= reference_variable T_CURLY_OPEN expr T_CURLY_CLOSE",
 /* 254 */ "reference_variable ::= compound_variable",
 /* 255 */ "compound_variable ::= T_VARIABLE",
 /* 256 */ "compound_variable ::= T_DOLLAR T_CURLY_OPEN expr T_CURLY_CLOSE",
 /* 257 */ "dim_offset ::= expr",
 /* 258 */ "dim_offset ::=",
 /* 259 */ "object_property ::= object_dim_list",
 /* 260 */ "object_property ::= variable_without_objects",
 /* 261 */ "object_dim_list ::= object_dim_list T_SQUARE_OPEN dim_offset T_SQUARE_CLOSE",
 /* 262 */ "object_dim_list ::= object_dim_list T_CURLY_OPEN expr T_CURLY_CLOSE",
 /* 263 */ "object_dim_list ::= variable_name",
 /* 264 */ "variable_name ::= T_STRING",
 /* 265 */ "variable_name ::= T_CURLY_OPEN expr T_CURLY_CLOSE",
 /* 266 */ "simple_indirect_reference ::= T_DOLLAR",
 /* 267 */ "simple_indirect_reference ::= simple_indirect_reference T_DOLLAR",
 /* 268 */ "assignment_list ::= assignment_list T_COMMA assignment_list_element",
 /* 269 */ "assignment_list ::= assignment_list_element",
 /* 270 */ "assignment_list_element ::= variable",
 /* 271 */ "assignment_list_element ::= T_LIST T_PAREN_OPEN assignment_list T_PAREN_CLOSE",
 /* 272 */ "assignment_list_element ::=",
 /* 273 */ "array_pair_list ::= non_empty_array_pair_list possible_comma",
 /* 274 */ "array_pair_list ::=",
 /* 275 */ "non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW expr",
 /* 276 */ "non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr",
 /* 277 */ "non_empty_array_pair_list ::= expr T_DOUBLE_ARROW expr",
 /* 278 */ "non_empty_array_pair_list ::= expr",
 /* 279 */ "non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA expr T_DOUBLE_ARROW T_AMPERSAND w_variable",
 /* 280 */ "non_empty_array_pair_list ::= non_empty_array_pair_list T_COMMA T_AMPERSAND w_variable",
 /* 281 */ "non_empty_array_pair_list ::= expr T_DOUBLE_ARROW T_AMPERSAND w_variable",
 /* 282 */ "non_empty_array_pair_list ::= T_AMPERSAND w_variable",
 /* 283 */ "encaps_list ::= encaps_list encaps_var",
 /* 284 */ "encaps_list ::= encaps_list T_STRING",
 /* 285 */ "encaps_list ::= encaps_list T_NUM_STRING",
 /* 286 */ "encaps_list ::= encaps_list T_ENCAPSED_AND_WHITESPACE",
 /* 287 */ "encaps_list ::= encaps_list T_CHARACTER",
 /* 288 */ "encaps_list ::= encaps_list T_BAD_CHARACTER",
 /* 289 */ "encaps_list ::= encaps_list T_SQUARE_OPEN",
 /* 290 */ "encaps_list ::= encaps_list T_SQUARE_CLOSE",
 /* 291 */ "encaps_list ::= encaps_list T_CURLY_OPEN",
 /* 292 */ "encaps_list ::= encaps_list T_CURLY_CLOSE",
 /* 293 */ "encaps_list ::= encaps_list T_OBJECT_OPERATOR",
 /* 294 */ "encaps_list ::=",
 /* 295 */ "encaps_var ::= T_VARIABLE",
 /* 296 */ "encaps_var ::= T_VARIABLE T_SQUARE_OPEN encaps_var_offset T_SQUARE_CLOSE",
 /* 297 */ "encaps_var ::= T_VARIABLE T_OBJECT_OPERATOR T_STRING",
 /* 298 */ "encaps_var ::= T_T_DOLLAR_OPEN_CURLY_BRACES expr T_CURLY_CLOSE",
 /* 299 */ "encaps_var ::= T_T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME T_SQUARE_OPEN expr T_SQUARE_CLOSE T_CURLY_CLOSE",
 /* 300 */ "encaps_var ::= T_CURLY_OPEN variable T_CURLY_CLOSE",
 /* 301 */ "encaps_var_offset ::= T_STRING|T_NUM_STRING|T_VARIABLE",
 /* 302 */ "internal_functions_in_yacc ::= T_ISSET T_PAREN_OPEN isset_variables T_PAREN_CLOSE",
 /* 303 */ "internal_functions_in_yacc ::= T_EMPTY T_PAREN_OPEN variable T_PAREN_CLOSE",
 /* 304 */ "internal_functions_in_yacc ::= T_INCLUDE expr",
 /* 305 */ "internal_functions_in_yacc ::= T_INCLUDE_ONCE expr",
 /* 306 */ "internal_functions_in_yacc ::= T_EVAL T_PAREN_OPEN expr T_PAREN_CLOSE",
 /* 307 */ "internal_functions_in_yacc ::= T_REQUIRE expr",
 /* 308 */ "internal_functions_in_yacc ::= T_REQUIRE_ONCE expr",
 /* 309 */ "isset_variables ::= variable",
 /* 310 */ "isset_variables ::= isset_variables T_COMMA variable",
 /* 311 */ "class_constant ::= fully_qualified_class_name T_PAAMAYIM_NEKUT_DOTAYIM T_STRING",
 /* 312 */ "fully_qualified_class_name ::= T_STRING",
 /* 313 */ "function_call ::= T_STRING T_PAREN_OPEN function_call_parameter_list T_PAREN_CLOSE",
 /* 314 */ "function_call ::= fully_qualified_class_name T_PAAMAYIM_NEKUT_DOTAYIM T_STRING T_PAREN_OPEN function_call_parameter_list T_PAREN_CLOSE",
 /* 315 */ "function_call ::= fully_qualified_class_name T_PAAMAYIM_NEKUT_DOTAYIM variable_without_objects T_PAREN_OPEN function_call_parameter_list T_PAREN_CLOSE",
 /* 316 */ "function_call ::= variable_without_objects T_PAREN_OPEN function_call_parameter_list T_PAREN_CLOSE",
 /* 317 */ "scalar ::= T_STRING",
 /* 318 */ "scalar ::= T_STRING_VARNAME",
 /* 319 */ "scalar ::= class_constant",
 /* 320 */ "scalar ::= common_scalar",
 /* 321 */ "scalar ::= T_DQUOTE encaps_list T_DQUOTE",
 /* 322 */ "scalar ::= T_SQUOTE encaps_list T_SQUOTE",
 /* 323 */ "scalar ::= T_START_HEREDOC encaps_list T_END_HEREDOC",
 /* 324 */ "class_name_reference ::= T_STRING",
 /* 325 */ "class_name_reference ::= dynamic_class_name_reference",
 /* 326 */ "dynamic_class_name_reference ::= base_variable T_OBJECT_OPERATOR object_property dynamic_class_name_variable_properties",
 /* 327 */ "dynamic_class_name_reference ::= base_variable",
 /* 328 */ "dynamic_class_name_variable_properties ::= dynamic_class_name_variable_properties dynamic_class_name_variable_property",
 /* 329 */ "dynamic_class_name_variable_properties ::=",
 /* 330 */ "dynamic_class_name_variable_property ::= T_OBJECT_OPERATOR object_property",
 /* 331 */ "ctor_arguments ::= T_PAREN_OPEN function_call_parameter_list T_PAREN_CLOSE",
 /* 332 */ "ctor_arguments ::=",
 /* 333 */ "possible_comma ::= T_COMMA",
 /* 334 */ "possible_comma ::=",
 /* 335 */ "for_expr ::= non_empty_for_expr",
 /* 336 */ "for_expr ::=",
 /* 337 */ "non_empty_for_expr ::= non_empty_for_expr T_COMMA expr",
 /* 338 */ "non_empty_for_expr ::= expr",
 /* 339 */ "is_reference ::= T_AMPERSAND",
 /* 340 */ "is_reference ::=",
    );

    /**
     * This function returns the symbolic name associated with a token
     * value.
     * @param int
     * @return string
     */
    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count(self::$yyTokenName)) {
            return self::$yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    /**
     * The following function deletes the value associated with a
     * symbol.  The symbol can be either a terminal or nonterminal.
     * @param int the symbol code
     * @param mixed the symbol's value
     */
    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
        /* Here is inserted the actions which take place when a
        ** terminal or non-terminal is destroyed.  This can happen
        ** when the symbol is popped from the stack during a
        ** reduce or during error processing or when a parser is 
        ** being destroyed before it is finished parsing.
        **
        ** Note: during a reduce, the only symbols destroyed are those
        ** which appear on the RHS of the rule, but which are not used
        ** inside the C code.
        */
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    /**
     * Pop the parser's stack once.
     *
     * If there is a destructor routine associated with the token which
     * is popped from the stack, then call it.
     *
     * Return the major token number for the symbol popped.
     * @param PHPyyParser
     * @return int
     */
    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . self::$yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    /**
     * Deallocate and destroy a parser.  Destructors are all called for
     * all stack elements before shutting the parser down.
     */
    function __destruct()
    {
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    /**
     * Based on the current state and parser stack, get a list of all
     * possible lookahead tokens
     * @param int
     * @return array
     */
    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
                        $expected += self::$yyExpectedTokens[$nextstate];
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new PHPyyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        return array_unique($expected);
    }

    /**
     * Based on the parser state and current parser stack, determine whether
     * the lookahead token is possible.
     * 
     * The parser will convert the token value to an error token if not.  This
     * catches some unusual edge cases where the parser would fail.
     * @param int
     * @return bool
     */
    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new PHPyyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

    /**
     * Find the appropriate action for a parser given the terminal
     * look-ahead token iLookAhead.
     *
     * If the look-ahead token is YYNOCODE, then check to see if the action is
     * independent of the look-ahead.  If it is, return the action, otherwise
     * return YY_NO_ACTION.
     * @param int The look-ahead token
     */
    function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;
     
        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        self::$yyTokenName[$iLookAhead] . " => " .
                        self::$yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    /**
     * Find the appropriate action for a parser given the non-terminal
     * look-ahead token $iLookAhead.
     *
     * If the look-ahead token is self::YYNOCODE, then check to see if the action is
     * independent of the look-ahead.  If it is, return the action, otherwise
     * return self::YY_NO_ACTION.
     * @param int Current state number
     * @param int The look-ahead token
     */
    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    /**
     * Perform a shift action.
     * @param int The new state to shift in
     * @param int The major token to shift in
     * @param mixed the minor token to shift in
     */
    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
            /* Here code is inserted which will execute if the parser
            ** stack ever overflows */
            return;
        }
        $yytos = new PHPyyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for ($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    self::$yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    /**
     * The following table contains information about every rule that
     * is used during the reduce.
     *
     * <pre>
     * array(
     *  array(
     *   int $lhs;         Symbol on the left-hand side of the rule
     *   int $nrhs;     Number of right-hand side symbols in the rule
     *  ),...
     * );
     * </pre>
     */
    static public $yyRuleInfo = array(
  array( 'lhs' => 142, 'rhs' => 1 ),
  array( 'lhs' => 143, 'rhs' => 2 ),
  array( 'lhs' => 143, 'rhs' => 0 ),
  array( 'lhs' => 144, 'rhs' => 1 ),
  array( 'lhs' => 144, 'rhs' => 1 ),
  array( 'lhs' => 144, 'rhs' => 1 ),
  array( 'lhs' => 144, 'rhs' => 4 ),
  array( 'lhs' => 145, 'rhs' => 1 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 7 ),
  array( 'lhs' => 148, 'rhs' => 10 ),
  array( 'lhs' => 148, 'rhs' => 5 ),
  array( 'lhs' => 148, 'rhs' => 7 ),
  array( 'lhs' => 148, 'rhs' => 9 ),
  array( 'lhs' => 148, 'rhs' => 5 ),
  array( 'lhs' => 148, 'rhs' => 2 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 2 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 2 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 1 ),
  array( 'lhs' => 148, 'rhs' => 2 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 148, 'rhs' => 5 ),
  array( 'lhs' => 148, 'rhs' => 8 ),
  array( 'lhs' => 148, 'rhs' => 8 ),
  array( 'lhs' => 148, 'rhs' => 5 ),
  array( 'lhs' => 148, 'rhs' => 1 ),
  array( 'lhs' => 148, 'rhs' => 13 ),
  array( 'lhs' => 148, 'rhs' => 3 ),
  array( 'lhs' => 173, 'rhs' => 1 ),
  array( 'lhs' => 173, 'rhs' => 0 ),
  array( 'lhs' => 174, 'rhs' => 1 ),
  array( 'lhs' => 174, 'rhs' => 2 ),
  array( 'lhs' => 175, 'rhs' => 8 ),
  array( 'lhs' => 149, 'rhs' => 2 ),
  array( 'lhs' => 149, 'rhs' => 0 ),
  array( 'lhs' => 176, 'rhs' => 1 ),
  array( 'lhs' => 176, 'rhs' => 1 ),
  array( 'lhs' => 176, 'rhs' => 1 ),
  array( 'lhs' => 176, 'rhs' => 4 ),
  array( 'lhs' => 145, 'rhs' => 1 ),
  array( 'lhs' => 146, 'rhs' => 1 ),
  array( 'lhs' => 147, 'rhs' => 1 ),
  array( 'lhs' => 177, 'rhs' => 9 ),
  array( 'lhs' => 178, 'rhs' => 7 ),
  array( 'lhs' => 178, 'rhs' => 6 ),
  array( 'lhs' => 181, 'rhs' => 1 ),
  array( 'lhs' => 181, 'rhs' => 2 ),
  array( 'lhs' => 181, 'rhs' => 2 ),
  array( 'lhs' => 182, 'rhs' => 2 ),
  array( 'lhs' => 182, 'rhs' => 0 ),
  array( 'lhs' => 185, 'rhs' => 1 ),
  array( 'lhs' => 186, 'rhs' => 2 ),
  array( 'lhs' => 186, 'rhs' => 0 ),
  array( 'lhs' => 183, 'rhs' => 0 ),
  array( 'lhs' => 183, 'rhs' => 2 ),
  array( 'lhs' => 187, 'rhs' => 1 ),
  array( 'lhs' => 187, 'rhs' => 3 ),
  array( 'lhs' => 150, 'rhs' => 1 ),
  array( 'lhs' => 150, 'rhs' => 1 ),
  array( 'lhs' => 159, 'rhs' => 6 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 4 ),
  array( 'lhs' => 159, 'rhs' => 6 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 5 ),
  array( 'lhs' => 159, 'rhs' => 1 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 159, 'rhs' => 1 ),
  array( 'lhs' => 159, 'rhs' => 4 ),
  array( 'lhs' => 159, 'rhs' => 3 ),
  array( 'lhs' => 159, 'rhs' => 2 ),
  array( 'lhs' => 194, 'rhs' => 2 ),
  array( 'lhs' => 194, 'rhs' => 3 ),
  array( 'lhs' => 194, 'rhs' => 0 ),
  array( 'lhs' => 198, 'rhs' => 1 ),
  array( 'lhs' => 199, 'rhs' => 1 ),
  array( 'lhs' => 199, 'rhs' => 1 ),
  array( 'lhs' => 199, 'rhs' => 4 ),
  array( 'lhs' => 199, 'rhs' => 1 ),
  array( 'lhs' => 200, 'rhs' => 1 ),
  array( 'lhs' => 200, 'rhs' => 2 ),
  array( 'lhs' => 200, 'rhs' => 0 ),
  array( 'lhs' => 202, 'rhs' => 5 ),
  array( 'lhs' => 202, 'rhs' => 3 ),
  array( 'lhs' => 202, 'rhs' => 3 ),
  array( 'lhs' => 202, 'rhs' => 1 ),
  array( 'lhs' => 201, 'rhs' => 3 ),
  array( 'lhs' => 167, 'rhs' => 2 ),
  array( 'lhs' => 167, 'rhs' => 0 ),
  array( 'lhs' => 166, 'rhs' => 1 ),
  array( 'lhs' => 166, 'rhs' => 2 ),
  array( 'lhs' => 157, 'rhs' => 1 ),
  array( 'lhs' => 157, 'rhs' => 4 ),
  array( 'lhs' => 168, 'rhs' => 1 ),
  array( 'lhs' => 168, 'rhs' => 4 ),
  array( 'lhs' => 171, 'rhs' => 1 ),
  array( 'lhs' => 171, 'rhs' => 4 ),
  array( 'lhs' => 170, 'rhs' => 3 ),
  array( 'lhs' => 170, 'rhs' => 5 ),
  array( 'lhs' => 158, 'rhs' => 3 ),
  array( 'lhs' => 158, 'rhs' => 4 ),
  array( 'lhs' => 158, 'rhs' => 4 ),
  array( 'lhs' => 158, 'rhs' => 5 ),
  array( 'lhs' => 203, 'rhs' => 4 ),
  array( 'lhs' => 203, 'rhs' => 4 ),
  array( 'lhs' => 203, 'rhs' => 0 ),
  array( 'lhs' => 204, 'rhs' => 1 ),
  array( 'lhs' => 155, 'rhs' => 1 ),
  array( 'lhs' => 155, 'rhs' => 4 ),
  array( 'lhs' => 151, 'rhs' => 6 ),
  array( 'lhs' => 151, 'rhs' => 0 ),
  array( 'lhs' => 153, 'rhs' => 7 ),
  array( 'lhs' => 153, 'rhs' => 0 ),
  array( 'lhs' => 152, 'rhs' => 2 ),
  array( 'lhs' => 152, 'rhs' => 0 ),
  array( 'lhs' => 154, 'rhs' => 3 ),
  array( 'lhs' => 154, 'rhs' => 0 ),
  array( 'lhs' => 180, 'rhs' => 1 ),
  array( 'lhs' => 180, 'rhs' => 0 ),
  array( 'lhs' => 205, 'rhs' => 2 ),
  array( 'lhs' => 205, 'rhs' => 3 ),
  array( 'lhs' => 205, 'rhs' => 5 ),
  array( 'lhs' => 205, 'rhs' => 4 ),
  array( 'lhs' => 205, 'rhs' => 4 ),
  array( 'lhs' => 205, 'rhs' => 5 ),
  array( 'lhs' => 205, 'rhs' => 7 ),
  array( 'lhs' => 205, 'rhs' => 6 ),
  array( 'lhs' => 206, 'rhs' => 1 ),
  array( 'lhs' => 206, 'rhs' => 0 ),
  array( 'lhs' => 207, 'rhs' => 1 ),
  array( 'lhs' => 207, 'rhs' => 0 ),
  array( 'lhs' => 208, 'rhs' => 1 ),
  array( 'lhs' => 208, 'rhs' => 1 ),
  array( 'lhs' => 208, 'rhs' => 2 ),
  array( 'lhs' => 208, 'rhs' => 3 ),
  array( 'lhs' => 208, 'rhs' => 3 ),
  array( 'lhs' => 208, 'rhs' => 4 ),
  array( 'lhs' => 161, 'rhs' => 3 ),
  array( 'lhs' => 161, 'rhs' => 1 ),
  array( 'lhs' => 209, 'rhs' => 1 ),
  array( 'lhs' => 209, 'rhs' => 2 ),
  array( 'lhs' => 209, 'rhs' => 4 ),
  array( 'lhs' => 162, 'rhs' => 3 ),
  array( 'lhs' => 162, 'rhs' => 5 ),
  array( 'lhs' => 162, 'rhs' => 1 ),
  array( 'lhs' => 162, 'rhs' => 3 ),
  array( 'lhs' => 184, 'rhs' => 2 ),
  array( 'lhs' => 184, 'rhs' => 0 ),
  array( 'lhs' => 210, 'rhs' => 3 ),
  array( 'lhs' => 210, 'rhs' => 2 ),
  array( 'lhs' => 210, 'rhs' => 8 ),
  array( 'lhs' => 215, 'rhs' => 1 ),
  array( 'lhs' => 215, 'rhs' => 3 ),
  array( 'lhs' => 211, 'rhs' => 1 ),
  array( 'lhs' => 211, 'rhs' => 1 ),
  array( 'lhs' => 214, 'rhs' => 1 ),
  array( 'lhs' => 214, 'rhs' => 0 ),
  array( 'lhs' => 216, 'rhs' => 1 ),
  array( 'lhs' => 216, 'rhs' => 2 ),
  array( 'lhs' => 217, 'rhs' => 1 ),
  array( 'lhs' => 212, 'rhs' => 3 ),
  array( 'lhs' => 212, 'rhs' => 5 ),
  array( 'lhs' => 212, 'rhs' => 1 ),
  array( 'lhs' => 212, 'rhs' => 3 ),
  array( 'lhs' => 213, 'rhs' => 5 ),
  array( 'lhs' => 213, 'rhs' => 4 ),
  array( 'lhs' => 163, 'rhs' => 3 ),
  array( 'lhs' => 163, 'rhs' => 1 ),
  array( 'lhs' => 165, 'rhs' => 1 ),
  array( 'lhs' => 165, 'rhs' => 3 ),
  array( 'lhs' => 218, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 1 ),
  array( 'lhs' => 164, 'rhs' => 3 ),
  array( 'lhs' => 188, 'rhs' => 1 ),
  array( 'lhs' => 169, 'rhs' => 1 ),
  array( 'lhs' => 192, 'rhs' => 1 ),
  array( 'lhs' => 160, 'rhs' => 5 ),
  array( 'lhs' => 160, 'rhs' => 1 ),
  array( 'lhs' => 222, 'rhs' => 2 ),
  array( 'lhs' => 222, 'rhs' => 0 ),
  array( 'lhs' => 223, 'rhs' => 3 ),
  array( 'lhs' => 221, 'rhs' => 3 ),
  array( 'lhs' => 221, 'rhs' => 0 ),
  array( 'lhs' => 224, 'rhs' => 1 ),
  array( 'lhs' => 224, 'rhs' => 2 ),
  array( 'lhs' => 227, 'rhs' => 3 ),
  array( 'lhs' => 219, 'rhs' => 1 ),
  array( 'lhs' => 219, 'rhs' => 1 ),
  array( 'lhs' => 228, 'rhs' => 1 ),
  array( 'lhs' => 228, 'rhs' => 2 ),
  array( 'lhs' => 228, 'rhs' => 1 ),
  array( 'lhs' => 225, 'rhs' => 4 ),
  array( 'lhs' => 225, 'rhs' => 4 ),
  array( 'lhs' => 225, 'rhs' => 1 ),
  array( 'lhs' => 231, 'rhs' => 1 ),
  array( 'lhs' => 231, 'rhs' => 4 ),
  array( 'lhs' => 230, 'rhs' => 1 ),
  array( 'lhs' => 230, 'rhs' => 0 ),
  array( 'lhs' => 220, 'rhs' => 1 ),
  array( 'lhs' => 220, 'rhs' => 1 ),
  array( 'lhs' => 232, 'rhs' => 4 ),
  array( 'lhs' => 232, 'rhs' => 4 ),
  array( 'lhs' => 232, 'rhs' => 1 ),
  array( 'lhs' => 233, 'rhs' => 1 ),
  array( 'lhs' => 233, 'rhs' => 3 ),
  array( 'lhs' => 226, 'rhs' => 1 ),
  array( 'lhs' => 226, 'rhs' => 2 ),
  array( 'lhs' => 189, 'rhs' => 3 ),
  array( 'lhs' => 189, 'rhs' => 1 ),
  array( 'lhs' => 234, 'rhs' => 1 ),
  array( 'lhs' => 234, 'rhs' => 4 ),
  array( 'lhs' => 234, 'rhs' => 0 ),
  array( 'lhs' => 196, 'rhs' => 2 ),
  array( 'lhs' => 196, 'rhs' => 0 ),
  array( 'lhs' => 235, 'rhs' => 5 ),
  array( 'lhs' => 235, 'rhs' => 3 ),
  array( 'lhs' => 235, 'rhs' => 3 ),
  array( 'lhs' => 235, 'rhs' => 1 ),
  array( 'lhs' => 235, 'rhs' => 6 ),
  array( 'lhs' => 235, 'rhs' => 4 ),
  array( 'lhs' => 235, 'rhs' => 4 ),
  array( 'lhs' => 235, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 2 ),
  array( 'lhs' => 197, 'rhs' => 0 ),
  array( 'lhs' => 237, 'rhs' => 1 ),
  array( 'lhs' => 237, 'rhs' => 4 ),
  array( 'lhs' => 237, 'rhs' => 3 ),
  array( 'lhs' => 237, 'rhs' => 3 ),
  array( 'lhs' => 237, 'rhs' => 6 ),
  array( 'lhs' => 237, 'rhs' => 3 ),
  array( 'lhs' => 238, 'rhs' => 1 ),
  array( 'lhs' => 193, 'rhs' => 4 ),
  array( 'lhs' => 193, 'rhs' => 4 ),
  array( 'lhs' => 193, 'rhs' => 2 ),
  array( 'lhs' => 193, 'rhs' => 2 ),
  array( 'lhs' => 193, 'rhs' => 4 ),
  array( 'lhs' => 193, 'rhs' => 2 ),
  array( 'lhs' => 193, 'rhs' => 2 ),
  array( 'lhs' => 239, 'rhs' => 1 ),
  array( 'lhs' => 239, 'rhs' => 3 ),
  array( 'lhs' => 240, 'rhs' => 3 ),
  array( 'lhs' => 172, 'rhs' => 1 ),
  array( 'lhs' => 229, 'rhs' => 4 ),
  array( 'lhs' => 229, 'rhs' => 6 ),
  array( 'lhs' => 229, 'rhs' => 6 ),
  array( 'lhs' => 229, 'rhs' => 4 ),
  array( 'lhs' => 195, 'rhs' => 1 ),
  array( 'lhs' => 195, 'rhs' => 1 ),
  array( 'lhs' => 195, 'rhs' => 1 ),
  array( 'lhs' => 195, 'rhs' => 1 ),
  array( 'lhs' => 195, 'rhs' => 3 ),
  array( 'lhs' => 195, 'rhs' => 3 ),
  array( 'lhs' => 195, 'rhs' => 3 ),
  array( 'lhs' => 190, 'rhs' => 1 ),
  array( 'lhs' => 190, 'rhs' => 1 ),
  array( 'lhs' => 241, 'rhs' => 4 ),
  array( 'lhs' => 241, 'rhs' => 1 ),
  array( 'lhs' => 242, 'rhs' => 2 ),
  array( 'lhs' => 242, 'rhs' => 0 ),
  array( 'lhs' => 243, 'rhs' => 2 ),
  array( 'lhs' => 191, 'rhs' => 3 ),
  array( 'lhs' => 191, 'rhs' => 0 ),
  array( 'lhs' => 236, 'rhs' => 1 ),
  array( 'lhs' => 236, 'rhs' => 0 ),
  array( 'lhs' => 156, 'rhs' => 1 ),
  array( 'lhs' => 156, 'rhs' => 0 ),
  array( 'lhs' => 244, 'rhs' => 3 ),
  array( 'lhs' => 244, 'rhs' => 1 ),
  array( 'lhs' => 179, 'rhs' => 1 ),
  array( 'lhs' => 179, 'rhs' => 0 ),
    );

    /**
     * The following table contains a mapping of reduce action to method name
     * that handles the reduction.
     * 
     * If a rule is not set, it has no handler.
     */
    static public $yyReduceMap = array(
    );
    /* Beginning here are the reduction cases.  A typical example
    ** follows:
    **  #line <lineno> <grammarfile>
    **   function yy_r0($yymsp){ ... }           // User supplied code
    **  #line <lineno> <thisfile>
    */

    /**
     * placeholder for the left hand side in a reduce operation.
     * 
     * For a parser with a rule like this:
     * <pre>
     * rule(A) ::= B. { A = 1; }
     * </pre>
     * 
     * The parser will translate to something like:
     * 
     * <code>
     * function yy_r0(){$this->_retvalue = 1;}
     * </code>
     */
    private $_retvalue;

    /**
     * Perform a reduce action and the shift that must immediately
     * follow the reduce.
     * 
     * For a rule such as:
     * 
     * <pre>
     * A ::= B blah C. { dosomething(); }
     * </pre>
     * 
     * This function will first call the action, if any, ("dosomething();" in our
     * example), and then it will pop three states from the stack,
     * one for each entry on the right-hand side of the expression
     * (B, blah, and C in our example rule), and then push the result of the action
     * back on to the stack with the resulting state reduced to (as described in the .out
     * file)
     * @param int Number of the rule by which to reduce
     */
    function yy_reduce($yyruleno)
    {
        //int $yygoto;                     /* The next state */
        //int $yyact;                      /* The next action */
        //mixed $yygotominor;        /* The LHS of the rule reduced */
        //PHPyyStackEntry $yymsp;            /* The top of the parser's stack */
        //int $yysize;                     /* Amount to pop the stack */
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0 
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for ($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            /* If we are not debugging and the reduce action popped at least
            ** one element off the stack, then we can push the new element back
            ** onto the stack here, and skip the stack overflow test in yy_shift().
            ** That gives a significant speed improvement. */
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new PHPyyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    /**
     * The following code executes when the parse fails
     * 
     * Code from %parse_fail is inserted here
     */
    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
        /* Here code is inserted which will be executed whenever the
        ** parser fails */
    }

    /**
     * The following code executes when a syntax error first occurs.
     * 
     * %syntax_error code is inserted here
     * @param int The major type of the error token
     * @param mixed The minor type of the error token
     */
    function yy_syntax_error($yymajor, $TOKEN)
    {
    }

    /**
     * The following is executed when the parser accepts
     * 
     * %parse_accept code is inserted here
     */
    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
        /* Here code is inserted which will be executed whenever the
        ** parser accepts */
    }

    /**
     * The main parser program.
     * 
     * The first argument is the major token number.  The second is
     * the token value string as scanned from the input.
     *
     * @param int   $yymajor      the token number
     * @param mixed $yytokenvalue the token value
     * @param mixed ...           any extra arguments that should be passed to handlers
     *
     * @return void
     */
    function doParse($yymajor, $yytokenvalue)
    {
//        $yyact;            /* The parser action. */
//        $yyendofinput;     /* True if we are at the end of input */
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */
        
        /* (re)initialize the parser, if necessary */
        if ($this->yyidx === null || $this->yyidx < 0) {
            /* if ($yymajor == 0) return; // not sure why this was here... */
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new PHPyyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);
        
        if (self::$yyTraceFILE) {
            fprintf(
                self::$yyTraceFILE,
                "%sInput %s\n",
                self::$yyTracePrompt,
                self::$yyTokenName[$yymajor]
            );
        }
        
        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL
                && !$this->yy_is_expected_token($yymajor)
            ) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(
                        self::$yyTraceFILE,
                        "%sSyntax Error!\n",
                        self::$yyTracePrompt
                    );
                }
                if (self::YYERRORSYMBOL) {
                    /* A syntax error has occurred.
                    ** The response to an error depends upon whether or not the
                    ** grammar defines an error token "ERROR".  
                    **
                    ** This is what we do if the grammar does define ERROR:
                    **
                    **  * Call the %syntax_error function.
                    **
                    **  * Begin popping the stack until we enter a state where
                    **    it is legal to shift the error symbol, then shift
                    **    the error symbol.
                    **
                    **  * Set the error count to three.
                    **
                    **  * Begin accepting and shifting new tokens.  No new error
                    **    processing will occur until three tokens have been
                    **    shifted successfully.
                    **
                    */
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ) {
                        if (self::$yyTraceFILE) {
                            fprintf(
                                self::$yyTraceFILE,
                                "%sDiscard input token %s\n",
                                self::$yyTracePrompt,
                                self::$yyTokenName[$yymajor]
                            );
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0
                            && $yymx != self::YYERRORSYMBOL
                            && ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                        ) {
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    /* YYERRORSYMBOL is not defined */
                    /* This is what we do if the grammar does not define ERROR:
                    **
                    **  * Report an error message, and throw away the input token.
                    **
                    **  * If the input token is $, then fail the parse.
                    **
                    ** As before, subsequent error messages are suppressed until
                    ** three input tokens have been successfully shifted.
                    */
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }            
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
